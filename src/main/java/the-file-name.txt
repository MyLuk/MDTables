BeanEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Метод | method | STRING | null | Имя метода, который будет вызван. Если не указан, то брокер попытается самостоятельно определить какой метод вызывать. |
| Кэш | cache | BOOL | false | Если опция включена, брокер закэшурет результат первого обращения к реестру. Кэш может быть включен если бин объявлен в реестре как синглтон. |
| Массив парамтеров | multiParameterArray | BOOL | false | Как относиться к параметрам, которые переданы через тело сообщения, если опция включена, то тело сообщения должно быть массивом параметров |
| Свойства бина | bean.xxx | CONFIG | null | Для настройки дополнительных свойств, определенных в бине. Например, для того чтобы сконфигурироваться параметр foo, параметр записывается как bean.foo=123. |


InDataStreamProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Размер фрагмента | chunkSize | INT | 1024 | Размер фрагментов в байтах на которые будет разделен файл при передаче. |
| Автоматическое создание директорий | autoCreate | BOOL | true | Автоматически создает недостающие каталоги в пути к файлу .Создает начальный каталог для потребителя файла. Для производителя файла, это означает каталог в который должны быть записаны файлы . |
| Размер буфера  | bufferSize | STRING | 128 | Буфер записи с заданным размером в байтах. |
| Имя файла | fileName | STRING | null | Возможно использование выражения для динамической установки имени файла, оно имеет преимущество над заголовком. Для точки входа имя файла используется как фильтр, вы например можете потреблять файлы созданные сегодня, используя синтаксис файлового языка: mydata-${date:now:yyyyMMdd}.txt. В случае точки выхода будет создан файл с указанным именем, если в точку выхода передается несколько сообщений, то файл каждый раз будет переписан. |
| Обрезка пути к файлу | flatten | BOOL | false | Используется для обрезки пути к файл, так что остается просто имя файла. Это позволяет потреблять файлы рекурсивно в подкаталогах. |
| Кодировка файла | charset | STRING | null | Этот параметр используется для указания кодировки файла.  |
| Копирование с удалением при ошибке переименования | copyAndDeleteOnRenameFail | BOOL | true | Указывает делать ли резервную копию и удалить оригинальный файл, в случае, если файл не может быть переименован напрямую.  |
| Копирование с удалением в место переименования | renameUsingCopy | BOOL | false | Выполнение копирования и удаления в место операции переименования. Эта настройка имеет приоритет над параметром Копирование с удалением при ошибке переименования. |
| Первоначальная задержка | initialDelay | INT | 1000 | Задержка перед началом процесса получения файла / каталога в миллисекундах |
| Задержка | delay | INT | 500 | Время задержки до следующего получения файла / каталога в миллисекундах |
| Одинаковая задержка независимо от времени | useFixedDelay | BOOL | true | Если используется fixed delay или fixed rate. ScheduledExecutorService JDK для уточнения деталей.Значение по умолчанию true. |
| Уровень протоколирования | runLoggingLevel | SELECT | WARN | точка входа может записывать протоколы работы в лог. Этот параметр позволяет настроить уровень протоколирования. |
| Рекурсивность | recursive | BOOL | false | Если указан true, будет искать файлы во всех подкаталогах. |
| Удалить файл | delete | BOOL | false | Если в true,то файл будет удален после того, как он будет успешно обработан. |
| Только чтение | noop | BOOL | false | Если true,то файл не будет перемещен или удален. Этот вариант хорош только для чтения данных, или для требований типа ETL. По умолчанию файлы перемещаются в директорию .camel. |
| Имя директории/файла перед началом обработки | preMove | STRING | null | Строка или выражение, используется для динамической установки имени директории/файла при его перемещении, прежде чем начать обработку. Например, чтобы переместить файлы находящиеся в обработке, в  каталог order нужно установить это }
значение  в order. |
| Имя директории/файла после обработки | move | STRING | .camel | Строка или выражение используется для динамической установки имени файла при его перемещении, после обработки. Например, чтобы переместить файлы в  каталог .done нужно установить это значение  в .done. |
| Имя директории/файла при ошибке | moveFailed | STRING | null | Строка или выражение используется для динамической установки другого целевого каталога при перемещении файлов обработки.</br>Например, чтобы переместить файлы в .error подкаталог нужно использовать: .error.</br>Примечание : При }
перемещении файлов в «Ошибочную» локацию Брокер обработает ошибку и не подберет файл снова. |
| Регулярное выражение поиска файлов | include | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение исключения файлов | exclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение ANT для поиска файлов | antInclude | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Регулярное выражение ANT для исключения файлов  | antExclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Сделать регулярное выражение ANT чувствительным к регистру | antFilterCaseSensitive | BOOL | true | сделать регулярное выражение ANT чувствительным к регистру. |
| Пропуск уже обработанных файлов | idempotent | BOOL | false | Возможность чтобы брокер пропускал уже обработанные файлы. Будет по умолчанию использовать LRUCache память, которая содержит 1000 записей. Если включен режим Только чтение, Данная опция также будет включена, чтобы избежать потребления }
одних и тех же файлов снова и снова. |
| Уникальный ключ уже обработанных файлов | idempotentKey | STRING | Expression | По умолчанию используется абсолютный путь к файлу. Вы можете использовать имя файла и размер файла, например : ${file:name}-${file:size} |
| Хранилище для хранение ключей обработанных файлов | idempotentRepository | BOOL | false | Присоединяемое хранилище для хранения, использует по умолчанию, MemoryMessageIdRepository если другой не указан и }
Пропуск уже обработанных файлов установлен в true. |
| Учет файлов в процессе обработки | inProgressRepository | STRING | memory | хранилище используется для учета файлов потребляющихся в настоящее время .  |
| Расширенный фильтр | filter | STRING | null | Подключаемый фильтр. Будет пропускать файлы, если фильтр возвращает false в accept() методе.  |
| Фильтр каталогов | filterDirectory | STRING | null | Фильтрует каталоги. Например, для фильтрации по текущей дате, вы можете использовать простой шаблон даты, такой как  ${date:now:yyyMMdd}. |
| Фильтр файлов | filterFile | STRING | null | Фильтрует файлы. Например, чтобы фильтровать по размеру файла, вы можете использовать  ${file}:size > 5000. |
| Случайный порядок | shuffle | BOOL | false | Для того, чтобы перетасовать список файлов (сортировка в случайном порядке). |
| Расширенная сортировка | sorter | STRING | null | Подключаемый сортировщик. |
| Сортировка | sortBy | STRING | null | Встроенная сортировка. Поддерживает вложенность, так что вы можете сортировать по имени файла и сортировать по дате модификации. |
| Блокировка файла | readLock | SELECT | null | Брокер будет ждать, пока файл заблокирован. <ul> Возможны следующие варианты:<li>none не использовать блокировку.</li><li>markerFile Брокер создает файл - маркер, а затем удерживает блокировку на нем.</li><li>changed использует временную отметку длины/модификации для обнаружения копируется ли файл в настоящее время. Будет затрачена по крайней мере 1 сек. чтобы определить это, так что этот вариант не может потреблять файлы так же быстро, как и другие, но будет более надежным.</li><li>fileLock - Такой подход следует избегать при получении доступа к удаленной файловой системе с помощью mount/share, если только файловая система не поддерживает распределенную блокировку файлов(distributed file locks).</li><li>rename попробует переименовать файл в качестве теста,возможно ли получить exclusive read-Lock.</li><li>idempotent для использования  хранилища для хранение ключей обработанных файлов в качестве блокировки. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-changed для использования хранилища для хранение ключей обработанных файлов и изменения в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-rename для использования хранилища для хранение ключей обработанных файлов и переименования в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li></ul><b>Внимание : большинство стратегий блокировки чтения не подходит для использования в кластерном режиме. То есть, вы не можете иметь несколько точек входа пытающихся прочитать тот же файл в том же каталоге. В этом случае блокировка не будет надежно функционировать. Блокировка Idempotent поддерживает кластерный режим, если вы используете идемпотентную  реализацию хранилища с подержкой кластера, например, от Hazelcast Component или Infinispan .</b> |
| Время ожидания блокировки | readLockTimeout | INT | 10000 | Время ожидания в миллисекундах для блокировки файла. Если блокировка не может быть предоставлена и срабатывает тайм - аут, то Брокер пропустит файл. В следующем опросе Брокер, будет пытаться опросить файл снова, и на этот раз, может быть, блокировка будет предоставлена. Значение по умолчанию 10000. |
| Интервал блокировки | readLockCheckInterval | INT | 1000 | Интервал в миллисекундах для блокировки файлов. Этот интервал используется для ожидания между попытками получить блокировку. Например, вы можете установить более высокий интервал для обслуживания медленной записи . Значение по умолчанию 1 сек. может быть слишком быстро, если производитель очень медленно записывает файл. |
| Минимальный размер файла блокировки | readLockMinLength | INT | 1 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет настроить минимальную длину файла. По умолчанию Брокер ожидает, что файл содержит данные, и, таким образом, значение по умолчанию равно 1 . Вы можете установить этот параметр в ноль, чтобы потреблять файлы нулевой длины. |
| Минимальный возраст файла | readLockMinAge | INT | 0 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет указать минимальный возраст файла, прежде чем пытаться получить блокировку. Например, можно использовать  300s для того чтобы потреблять файлы возрастом не менее 5 минут. Это может ускорить опрос, когда файл достаточно стар, так как он будет немедленно получать блокировку. |
| Уровень логирования блокировки файлов | readLockLoggingLevel | SELECT | 0 | Уровень логирования используется, когда блокировка не может быть получена. По умолчанию,. Задается WARN. Вы можете изменить этот уровень, например, на OFF, чтобы отключить какое - либо протоколирования. Эта опция применима только для блокировки типов: changed, fileLock, rename. |
| Использовать маркерный файл для блокировки | readLockMarkerFile | BOOL | true | Следует ли использовать маркерный файл для типов блокировки  changed,rename или exclusive. По умолчанию файл маркера используется также для защиты от других процессов, подбирающих одни и те же файлы. Такое поведение можно отключить, установив эту опцию false.  |
| Удалять записи из хранилища ключей файлов при откате | readLockRemoveOnRollback | BOOL | true | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла из хранилища если обработка файла не удалась, и происходит откат . Если эта опция не установлена, то запись имени файла подтверждается. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockRemoveOnCommit | BOOL | false | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла при успешной обработке файла из идемпотентного  хранилища и фиксация происходит. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockDeleteOrphanLockFiles | BOOL | true | Определяет будут удалены или нет любые потерянные,  read-Lock и маркерные файлы при запуске, которые  возможно, были оставлены в файловой системе, если Брокер не был завершен надлежащим образом (например, аварии JVM). Если настроть в false, то любое осиротевший файл блокировки заставит Брокер не поднимать этот файл. |
| Начать обработку только при наличие директории (рекурсивно) | directoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. работает рекурсивно. |
| Имя финального файла | doneFileName | STRING | null | Если настроено, Брокер будет только потреблять файлы, если финальный файл существует. Эта опция настраивает то, какое имя файла использовать. Либо вы можете задать фиксированное имя. Или вы можете использовать динамические заполнители. финальные файлы всегда ожидаются в той же папке, что и исходные файлы. |
| Максимальное число сообщений в опросе | maxMessagesPerPoll | INT | 0 | Целое число определяющий максимальное число сообщений в опросе. По умолчанию не установлено. Может использоваться, чтобы установить предел, например, 1000 чтобы избежать при запуске сервера наличия тысячи файлов. Установите значение  0 или отрицательное, чтобы отключить его. Другие подробности в Batch Consumer.<br/>Примечание: Если эта опция используется тогда File и FTP компоненты будут ограничены до любой сортировки. Например, если у вас есть 100000 файлов и использовать maxMessagesPerPoll=500, только первые 500 файлы будут подняты, а затем отсортированы. Вы можете использовать опцию "Не выполнять полное сканирование перед опросом" и установить эту  false, чтобы сканировать все файлы, а затем сортировать. |
| Не выполнять полное сканирование перед опросом | eagerMaxMessagesPerPoll | BOOL | true | Установка этой опции false позволяет сортировать файлы, а затем ограничить опрос. Имейте в виду, что это требует использования большего количества памяти, так как все детали файла загружены в память, для выполнения сортировки. |
| Минимальная глубина для начала обработки при рекурсивном обработке каталога | minDepth | INT | 0 | Минимальная глубина для начала обработки при рекурсивном обработке каталога. Использование minDepth=1 означает базовый каталог. Использование minDepth=2 означает первый подкаталог. Эта опция поддерживается FTP потребителем. |
| Максимальная глубина для обхода при рекурсивной обработке каталога | maxDepth | INT | 0 | Максимальная глубина для обхода при рекурсивной обработке каталога. Эта опция поддерживается FTP потребителем. |
| Начать обработку только при наличие директории | startingDirectoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. |
| Отправлять пустые сообщения в состоянии простоя | sendEmptyMessageWhenIdle | BOOL | false | Если опрашивающий потребитель не отправил файлы, вы можете включить эту опцию, чтобы отправлять пустые сообщения (nobody). |
| Обрабатывать ошибки брокером | consumer.bridgeErrorHandler | BOOL | false | Позволяет привязать потребителя к обработчику ошибок (ErrorHandler) маршрутизируемого Брокером, для того чтобы любые ошибки  произошедшие при подъеме файлов, обрабатывались в виде сообщения и маршрутизировались обработчиком ошибок. По умолчанию потребитель будет использовать  org.apache.camel.spi.ExceptionHandler, чтобы справиться с ошибками, которые по умолчанию будут записываться на уровне  WARN/ ERROR и игнорироваться. |
| Определение типа содержимого | probeContentType | BOOL | false | Включает зондирование типа содержимого. Если включить, то потребитель использует Files#probeContentType(java.nio.file.Path) для определения типа содержимого файла, и хранить в качестве заголовка с ключом Exchange#FILE_CONTENT_TYPE на сообщении. |


OutDataStreamProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Автоматическое создание директорий | autoCreate | BOOL | true | Автоматически создает недостающие каталоги в пути к файлу .Создает начальный каталог для потребителя файла. Для производителя файла, это означает каталог в который должны быть записаны файлы . |
| Размер буфера  | bufferSize | STRING | 128 | Буфер записи с заданным размером в байтах. |
| Имя файла | fileName | STRING | null | Возможно использование выражения для динамической установки имени файла, оно имеет преимущество над заголовком. Для точки входа имя файла используется как фильтр, вы например можете потреблять файлы созданные сегодня, используя синтаксис файлового языка: mydata-${date:now:yyyyMMdd}.txt. В случае точки выхода будет создан файл с указанным именем, если в точку выхода передается несколько сообщений, то файл каждый раз будет переписан. |
| Обрезка пути к файлу | flatten | BOOL | false | Используется для обрезки пути к файл, так что остается просто имя файла. Это позволяет потреблять файлы рекурсивно в подкаталогах. |
| Кодировка файла | charset | STRING | null | Этот параметр используется для указания кодировки файла.  |
| Копирование с удалением при ошибке переименования | copyAndDeleteOnRenameFail | BOOL | true | Указывает делать ли резервную копию и удалить оригинальный файл, в случае, если файл не может быть переименован напрямую.  |
| Копирование с удалением в место переименования | renameUsingCopy | BOOL | false | Выполнение копирования и удаления в место операции переименования. Эта настройка имеет приоритет над параметром Копирование с удалением при ошибке переименования. |
| Первоначальная задержка | initialDelay | INT | 1000 | Задержка перед началом процесса получения файла / каталога в миллисекундах |
| Задержка | delay | INT | 500 | Время задержки до следующего получения файла / каталога в миллисекундах |
| Одинаковая задержка независимо от времени | useFixedDelay | BOOL | true | Если используется fixed delay или fixed rate. ScheduledExecutorService JDK для уточнения деталей.Значение по умолчанию true. |
| Уровень протоколирования | runLoggingLevel | SELECT | WARN | точка входа может записывать протоколы работы в лог. Этот параметр позволяет настроить уровень протоколирования. |
| Рекурсивность | recursive | BOOL | false | Если указан true, будет искать файлы во всех подкаталогах. |
| Удалить файл | delete | BOOL | false | Если в true,то файл будет удален после того, как он будет успешно обработан. |
| Только чтение | noop | BOOL | false | Если true,то файл не будет перемещен или удален. Этот вариант хорош только для чтения данных, или для требований типа ETL. По умолчанию файлы перемещаются в директорию .camel. |
| Имя директории/файла перед началом обработки | preMove | STRING | null | Строка или выражение, используется для динамической установки имени директории/файла при его перемещении, прежде чем начать обработку. Например, чтобы переместить файлы находящиеся в обработке, в  каталог order нужно установить это }
значение  в order. |
| Имя директории/файла после обработки | move | STRING | .camel | Строка или выражение используется для динамической установки имени файла при его перемещении, после обработки. Например, чтобы переместить файлы в  каталог .done нужно установить это значение  в .done. |
| Имя директории/файла при ошибке | moveFailed | STRING | null | Строка или выражение используется для динамической установки другого целевого каталога при перемещении файлов обработки.</br>Например, чтобы переместить файлы в .error подкаталог нужно использовать: .error.</br>Примечание : При }
перемещении файлов в «Ошибочную» локацию Брокер обработает ошибку и не подберет файл снова. |
| Регулярное выражение поиска файлов | include | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение исключения файлов | exclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение ANT для поиска файлов | antInclude | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Регулярное выражение ANT для исключения файлов  | antExclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Сделать регулярное выражение ANT чувствительным к регистру | antFilterCaseSensitive | BOOL | true | сделать регулярное выражение ANT чувствительным к регистру. |
| Пропуск уже обработанных файлов | idempotent | BOOL | false | Возможность чтобы брокер пропускал уже обработанные файлы. Будет по умолчанию использовать LRUCache память, которая содержит 1000 записей. Если включен режим Только чтение, Данная опция также будет включена, чтобы избежать потребления }
одних и тех же файлов снова и снова. |
| Уникальный ключ уже обработанных файлов | idempotentKey | STRING | Expression | По умолчанию используется абсолютный путь к файлу. Вы можете использовать имя файла и размер файла, например : ${file:name}-${file:size} |
| Хранилище для хранение ключей обработанных файлов | idempotentRepository | BOOL | false | Присоединяемое хранилище для хранения, использует по умолчанию, MemoryMessageIdRepository если другой не указан и }
Пропуск уже обработанных файлов установлен в true. |
| Учет файлов в процессе обработки | inProgressRepository | STRING | memory | хранилище используется для учета файлов потребляющихся в настоящее время .  |
| Расширенный фильтр | filter | STRING | null | Подключаемый фильтр. Будет пропускать файлы, если фильтр возвращает false в accept() методе.  |
| Фильтр каталогов | filterDirectory | STRING | null | Фильтрует каталоги. Например, для фильтрации по текущей дате, вы можете использовать простой шаблон даты, такой как  ${date:now:yyyMMdd}. |
| Фильтр файлов | filterFile | STRING | null | Фильтрует файлы. Например, чтобы фильтровать по размеру файла, вы можете использовать  ${file}:size > 5000. |
| Случайный порядок | shuffle | BOOL | false | Для того, чтобы перетасовать список файлов (сортировка в случайном порядке). |
| Расширенная сортировка | sorter | STRING | null | Подключаемый сортировщик. |
| Сортировка | sortBy | STRING | null | Встроенная сортировка. Поддерживает вложенность, так что вы можете сортировать по имени файла и сортировать по дате модификации. |
| Блокировка файла | readLock | SELECT | null | Брокер будет ждать, пока файл заблокирован. <ul> Возможны следующие варианты:<li>none не использовать блокировку.</li><li>markerFile Брокер создает файл - маркер, а затем удерживает блокировку на нем.</li><li>changed использует временную отметку длины/модификации для обнаружения копируется ли файл в настоящее время. Будет затрачена по крайней мере 1 сек. чтобы определить это, так что этот вариант не может потреблять файлы так же быстро, как и другие, но будет более надежным.</li><li>fileLock - Такой подход следует избегать при получении доступа к удаленной файловой системе с помощью mount/share, если только файловая система не поддерживает распределенную блокировку файлов(distributed file locks).</li><li>rename попробует переименовать файл в качестве теста,возможно ли получить exclusive read-Lock.</li><li>idempotent для использования  хранилища для хранение ключей обработанных файлов в качестве блокировки. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-changed для использования хранилища для хранение ключей обработанных файлов и изменения в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-rename для использования хранилища для хранение ключей обработанных файлов и переименования в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li></ul><b>Внимание : большинство стратегий блокировки чтения не подходит для использования в кластерном режиме. То есть, вы не можете иметь несколько точек входа пытающихся прочитать тот же файл в том же каталоге. В этом случае блокировка не будет надежно функционировать. Блокировка Idempotent поддерживает кластерный режим, если вы используете идемпотентную  реализацию хранилища с подержкой кластера, например, от Hazelcast Component или Infinispan .</b> |
| Время ожидания блокировки | readLockTimeout | INT | 10000 | Время ожидания в миллисекундах для блокировки файла. Если блокировка не может быть предоставлена и срабатывает тайм - аут, то Брокер пропустит файл. В следующем опросе Брокер, будет пытаться опросить файл снова, и на этот раз, может быть, блокировка будет предоставлена. Значение по умолчанию 10000. |
| Интервал блокировки | readLockCheckInterval | INT | 1000 | Интервал в миллисекундах для блокировки файлов. Этот интервал используется для ожидания между попытками получить блокировку. Например, вы можете установить более высокий интервал для обслуживания медленной записи . Значение по умолчанию 1 сек. может быть слишком быстро, если производитель очень медленно записывает файл. |
| Минимальный размер файла блокировки | readLockMinLength | INT | 1 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет настроить минимальную длину файла. По умолчанию Брокер ожидает, что файл содержит данные, и, таким образом, значение по умолчанию равно 1 . Вы можете установить этот параметр в ноль, чтобы потреблять файлы нулевой длины. |
| Минимальный возраст файла | readLockMinAge | INT | 0 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет указать минимальный возраст файла, прежде чем пытаться получить блокировку. Например, можно использовать  300s для того чтобы потреблять файлы возрастом не менее 5 минут. Это может ускорить опрос, когда файл достаточно стар, так как он будет немедленно получать блокировку. |
| Уровень логирования блокировки файлов | readLockLoggingLevel | SELECT | 0 | Уровень логирования используется, когда блокировка не может быть получена. По умолчанию,. Задается WARN. Вы можете изменить этот уровень, например, на OFF, чтобы отключить какое - либо протоколирования. Эта опция применима только для блокировки типов: changed, fileLock, rename. |
| Использовать маркерный файл для блокировки | readLockMarkerFile | BOOL | true | Следует ли использовать маркерный файл для типов блокировки  changed,rename или exclusive. По умолчанию файл маркера используется также для защиты от других процессов, подбирающих одни и те же файлы. Такое поведение можно отключить, установив эту опцию false.  |
| Удалять записи из хранилища ключей файлов при откате | readLockRemoveOnRollback | BOOL | true | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла из хранилища если обработка файла не удалась, и происходит откат . Если эта опция не установлена, то запись имени файла подтверждается. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockRemoveOnCommit | BOOL | false | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла при успешной обработке файла из идемпотентного  хранилища и фиксация происходит. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockDeleteOrphanLockFiles | BOOL | true | Определяет будут удалены или нет любые потерянные,  read-Lock и маркерные файлы при запуске, которые  возможно, были оставлены в файловой системе, если Брокер не был завершен надлежащим образом (например, аварии JVM). Если настроть в false, то любое осиротевший файл блокировки заставит Брокер не поднимать этот файл. |
| Начать обработку только при наличие директории (рекурсивно) | directoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. работает рекурсивно. |
| Имя финального файла | doneFileName | STRING | null | Если настроено, Брокер будет только потреблять файлы, если финальный файл существует. Эта опция настраивает то, какое имя файла использовать. Либо вы можете задать фиксированное имя. Или вы можете использовать динамические заполнители. финальные файлы всегда ожидаются в той же папке, что и исходные файлы. |
| Максимальное число сообщений в опросе | maxMessagesPerPoll | INT | 0 | Целое число определяющий максимальное число сообщений в опросе. По умолчанию не установлено. Может использоваться, чтобы установить предел, например, 1000 чтобы избежать при запуске сервера наличия тысячи файлов. Установите значение  0 или отрицательное, чтобы отключить его. Другие подробности в Batch Consumer.<br/>Примечание: Если эта опция используется тогда File и FTP компоненты будут ограничены до любой сортировки. Например, если у вас есть 100000 файлов и использовать maxMessagesPerPoll=500, только первые 500 файлы будут подняты, а затем отсортированы. Вы можете использовать опцию "Не выполнять полное сканирование перед опросом" и установить эту  false, чтобы сканировать все файлы, а затем сортировать. |
| Не выполнять полное сканирование перед опросом | eagerMaxMessagesPerPoll | BOOL | true | Установка этой опции false позволяет сортировать файлы, а затем ограничить опрос. Имейте в виду, что это требует использования большего количества памяти, так как все детали файла загружены в память, для выполнения сортировки. |
| Минимальная глубина для начала обработки при рекурсивном обработке каталога | minDepth | INT | 0 | Минимальная глубина для начала обработки при рекурсивном обработке каталога. Использование minDepth=1 означает базовый каталог. Использование minDepth=2 означает первый подкаталог. Эта опция поддерживается FTP потребителем. |
| Максимальная глубина для обхода при рекурсивной обработке каталога | maxDepth | INT | 0 | Максимальная глубина для обхода при рекурсивной обработке каталога. Эта опция поддерживается FTP потребителем. |
| Начать обработку только при наличие директории | startingDirectoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. |
| Отправлять пустые сообщения в состоянии простоя | sendEmptyMessageWhenIdle | BOOL | false | Если опрашивающий потребитель не отправил файлы, вы можете включить эту опцию, чтобы отправлять пустые сообщения (nobody). |
| Обрабатывать ошибки брокером | consumer.bridgeErrorHandler | BOOL | false | Позволяет привязать потребителя к обработчику ошибок (ErrorHandler) маршрутизируемого Брокером, для того чтобы любые ошибки  произошедшие при подъеме файлов, обрабатывались в виде сообщения и маршрутизировались обработчиком ошибок. По умолчанию потребитель будет использовать  org.apache.camel.spi.ExceptionHandler, чтобы справиться с ошибками, которые по умолчанию будут записываться на уровне  WARN/ ERROR и игнорироваться. |
| Определение типа содержимого | probeContentType | BOOL | false | Включает зондирование типа содержимого. Если включить, то потребитель использует Files#probeContentType(java.nio.file.Path) для определения типа содержимого файла, и хранить в качестве заголовка с ключом Exchange#FILE_CONTENT_TYPE на сообщении. |
| Действие если файл уже существует | fileExist | SELECT | Override | Что делать, если файл уже существует с тем же именем. Следующие значения могут быть указаны: Override заменяет существующий файл, Append добавляет содержимое в существующий файл, Fail выдает GenericFileOperationException показывая, что есть уже существующий файл, Ignore  игнорирует проблему и не перезаписывает существующий файл, но предполагает, что все в порядке, Move требует, чтобы опция moveExisting была настроена тоже. EagerDeleteTargetFile может быть использован для контроля действий, если переместить файл, а там уже существует файл, в противном случае операцию перемещения будет неуспешна. Move опция будет перемещать любые существующие файлы, перед записью целевого файла. TryRename применима, только если tempFileName опция используется. Позволяет попробовать переименовать файл из временного имени на фактическое имя, не делая какой - либо проверки существования. Эта проверка может быть быстрее на некоторых файловых системах.  |
| Временной префикс файла во время записи | tempPrefix | STRING | null | Эта опция используется для записи файла, используя временное имя, а затем, после завершения записи можно переименовать его. Может использоваться для идентификации файлов в процессе записи, а также для избегания потребителей (не используется FTP при загрузке больших файлов. |
| Имя временного файла | tempFileName | STRING | null | Тоже что и tempPrefix настройка, но предлагает более тонкий контроль над именованием временного файла,так как он использует File Language. |
| Имя перемещенного файла | moveExisting | STRING | null | Expression (например, File Language ), используется для вычисления имени файла, которое используется при сконфигурированном fileExist=Move. Чтобы переместить файлы в backup подкаталог просто введите backup. Этот параметр поддерживает только следующий File Language токены: file:name, file:name.ext, file:name.noext, file:onlyname, file:onlyname.noext, file:ext, file:parent Примечание : file:parent маркер не поддерживает FTP - компонент, который может только перемещать файлы в директории относительно текущего каталога. |
| Сохранять временную метку файла | keepLastModified | BOOL | false | Будет отображать последнюю измененную временную метку из исходного файла (если таковой имеется). Будет использовать Exchange.FILE_LAST_MODIFIED заголовок найденной метки. Этот заголовок может содержать либо java.util.Date или long с отметкой времени. Если временная метка существует и опция включена она будет отображать  эту временную метку в записанном файле. |
| Удаление целевого файла перед началом записи | eagerDeleteTargetFile | BOOL | true | Включает удаление любого существующего целевого файла. Этот параметр применяется только при использовании fileExists=Override и tempFileName настроек. Вы можете использовать эту настройку, чтобы отключить (установить его false) удаление целевого файла до того, как временный файл будет записан. Например, вы можете записывать большие файлы и хотите чтобы целевой файл существовал пока временный файл записывается. Это гарантирует, что целевой файл удалится только в самый последний момент, как раз перед тем,как временный файл переименуется целевым именем файла. Эту настройку также используют для управления удалением существующих файлов, когда fileExist=Move включен, и существующий файл существует. Если этот параметр copyAndDeleteOnRenameFail установлен в false, то будет выведена ошибка, если существующий файл существует. Когда true существующий файл будет удален до операции перемещения. |
| Имя файла после завершения записи целевого файла на диск | doneFileName | STRING | null | Если установлен, то Брокер будет писать второй файл (называемый done файл), когда исходный файл будет записан. Done файл будет пустым. Эта опция настраивает то, какое имя файла использовать. Вы можете задать фиксированное имя или можете использовать динамические заполнители. Done файл будет всегда записываться в той же папке, что и исходный файл.  |
| Разрешить нулевое тело файла | allowNullBody | BOOL | false | Используется для указания, разрешено ли нулевое тело во время записи файла. Если установлено значение true, то пустой файл будет создан, когда установлен в false, и пытается отправить пустое тело файловому компоненту, появляется GenericFileWriteException сообщение «Невозможно записать нулевое тело в файл». Если fileExist=Override файл будет перезаписан. Если fileExist=append файл будет оставаться неизменным. |
| Включить синхронизацию записи в файловую систему | forceWrites | BOOL | true | Включает синхронизацию записи в файловую систему. Вы можете отключить эту настройку, если не хотите такого уровня гарантии, например, если пишутся журналы аудита и т.д.; это даст лучшую производительность. |
| Права доступа файла | chmod | INT | null | Указывает разрешения файла, который отправляется от продюсера.Значение CHMOD должно быть между 000 и 777. |
| Права доступа каталога | chmodDirectory | INT | null | Указывает используемые разрешения директории когда продюсер создает недостающие каталоги, значение CHMOD должно быть между 000 и 777. |


InSQLEnpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Использовать итератор | useIterator | BOOL | true | Если true, каждая вернувшаяся строка обрабатывается индвидуально. Если false, то данные представляются как java.util.List в теле сообщения. |
| Групповое выполнение | batch | BOOL | false | Групповое выполнение SQL выражений. |
| Ссылка на DataSource | dataSource | BEAN | null | Ссылка на DataSource в реестре. |
| Параметры JdbcTemplate | template.xxx | CONFIG | null | Установка дополнительных параметров Spring JdbcTemplate, используемого для выполнения запросов. Так , например, template.maxRows=10. Для получения более подробной документации см JavaDoc JdbcTemplate документации. |
| Разрешить именованные параметры | allowNamedParameters | BOOL | true | Следует ли разрешить использование именованных параметров в запросах. |
| Интервал между опросами | consumer.delay | INT | 500 | Задержка в миллисекундах между двумя опросами. |
| Задержка до начала первого опроса | consumer.initialDelay | INT | 1000 | миллисекунды до начала опроса. |
| Фиксированный интервал | consumer.useFixedDelay | BOOL | false | Установите true для того чтобы использовать фиксированную задержку между опросами, в противном случае используется фиксированное значение. См подробнее  ScheduledExecutorService в JDK. |
| Максимальное количество сообщений за запрос | maxMessagesPerPoll | INT | 0 | целое значение , определяет максимальное количество сообщений , собираемое за опрос. По умолчанию максимум не установлен. |
| Допускать пустые значения | routeEmptyResultSet | BOOL | false | Маршрутизировать ли пустой обмен, если не было никаких данных для опроса.Запрос не может иметь параметр. |
| Действие при обработке | onConsume | STRING | null | Этот запрос может быть выполнен,после обработки каждой строки, если обмен был успешно обработан, например, пометить строку , как обработанную. Запрос может иметь параметр.  |
| Действие при неудачной обработке | onConsumeFailed | STRING | null | Этот запрос может быть выполнен, после обработки каждой строки, если Обмен не удался, например, пометить строку, как необработанную. Запрос может иметь параметр.  |
| Действие при обработке пакета | onConsumeBatchComplete | STRING | null | После обработки всей партии, этот запрос может быть выполнен для массового обновления строк и т.д. запрос не может иметь параметров.  |
| Ожидаемое количество строк | expectedUpdateCount | INT | -1 | При использовании , consumer.onConsume то этот параметр может быть использован для установки ожидаемого количества обновляемых строк. |
| Прервать обработку при ошибке в пакете | breakBatchOnConsumeFail | BOOL | false | Если использование consumer.onConsume неудачно , то этот параметр определяет закончить или продолжить обработку следующей строки из партии. |
| Разделитель | separator | STRING | , | Разделитель используется для разделения SQL выражений, если установлен параметр 'Использовать тело сообщения для SQL выражения'. |
| Тип вывода | outputType | SELECT | SelectList | OutputType = «SelectList», для потребителя или производителя, выведет Список Map.SelectOne будет выводить один Java объект следующим образом: а) Если запрос содержит только один столбец, то, что JDBC объект Column возвращается. (например, SELECT COUNT( * )  PROJECT возвращает объект Long. б) Если запрос имеет более чем один столбец, то он будет возвращать Map этого результата. в) Если outputClass установлен, то он будет преобразовывать результат запроса в объект Java Bean, вызвав все сеттеры, которые соответствуют именам столбцов. Это предполагает, что ваш класс имеет конструктор по умолчанию. г) Если запрос дал в результате более чем одной строки, он выводит ошибку не уникальный результат. SelectList также поддерживает отображение каждой строки в объект Java, как это делает SelectOne (только стадия в). StreamList OutputType, что потоки результата запроса с использованием итератора. Он может быть использован с Разветвителем EIP в потоковом режиме для обработки ResultSet в потоковой моду. Это StreamList не поддерживает пакетный режим, но вы можете использовать outputClass для отображения каждой строки в классе.onwards there is a new StreamList outputType that streams the result of the query using an Iterator. It can be used with the Splitter EIP in streaming mode to process the ResultSet in streaming fashion. This StreamList do not support batch mode, but you can use outputClass to map each row to a class. |
| Имя класса для вывода | outputClass | STRING | null | Укажите полный пакет и имя класса для использования в качестве преобразования , когда outputType=SelectOne. |
| Записать вывод в заголовок | outputHeader | STRING | null | Для того, чтобы сохранить результат в виде заголовка вместо тела сообщения. Это позволяет сохранить существующее тело сообщения. |
| Количество параметров | parametersCount | INT | 0 | Если установлен больше нуля, то Брокер будет использовать это значение счетчика параметров для замены, вместо запроса с помощью JDBC API метаданных. Это полезно, если поставщик JDBC не возвращает верный счетчик параметров, то пользователь может переопределить вместо этого.***** |
| Игнорировать результаты запроса | noop | BOOL | false | Если установлено, будет игнорировать результаты запроса SQL и использовать существующие IN сообщения, как сообщение OUT для продолжения обработки. |
| Транзакционность | transacted | BOOL | false | Включает или отключает транзакцию. Если включено , то при ошибке обработке обмена, потребитель останавливает обработку любых дальнейших обменов, чтобы вызвать возврат в исходное состояние. |


JDBCEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Максимальное кол-во строк которое может быть считано | readSize | INT | 0 | Максимального количество строк, которые могут быть считаны опросом. Значение по умолчанию 0. |
| Дополнительные параметры для выполнения запросов | statement.<xxx> | STRING | null | Устанавливает дополнительные параметры на java.sql.Statement которые используются для выполнения запросов. Так , например, statement.maxRows=10. Для получения более подробной документации см java.SQL.Statement javadoc документацию. |
| Использовать JDBC 4/3 семантику  меток/имен колонок | useJDBC4ColumnNameAndLabelSemantics | BOOL | true | В true будет использовать JDBC 4/3 семантику  меток/имен колонок. Можно включить его false в случае , если есть проблемы выбора данных у драйвера JDBC. Только при использовании с SQL SELECT с использованием псевдонимов (например SQL SELECT id as identifier, name as given_name from persons). |
| Сбросить Автоматическое Подтверждение | resetAutoCommit | BOOL | true | В значении true Брокер установит Autocommit на JDBC соединении  , в false, подтвердит изменение после выполнения кода и сбросит Autocommit флаг соединения в конце. Если JDBC соединение не поддерживает сброс флага Autocommit, установите false. При использовании XA транзакций нужно установить его в false, так как менеджер транзакций отвечает за совершение транзакций. |
| Разрешить использование именованных параметров  | allowNamedParameters | BOOL | true | Разрешает использование именованных параметров в запросах. |
| Стратегия подготовки программного утверждения | prepareStatementStrategy | BEAN | null | Позволяет использовать плагин, org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy для контроля подготовки запроса и программного утверждения. |
| Использовать Заголовки как Параметры | useHeadersAsParameters | BOOL | false | Установите эту опцию в true чтобы использовать prepareStatementStrategy с именованными параметрами. Это позволяет определить запросы с именованными заполнителями, а также использовать заголовки с динамическими значениями для заполнителей запроса. |
| Тип вывода. | outputType | SELECT | SelectList | OutputType = «SelectList», для потребителя или производителя,выведет List Map. SelectOne будет выведет Java object следующим образом :  а) Если запрос содержит только один столбец, значит JDBC Column объект  будет возвращен. (например, SELECT COUNT (*) FROM PROJECT будет возвращать Long object. б) Если запрос имеет более чем один столбец, то он вернет Отображение этого результата. в) Если outputClass установлен, он преобразует результат запроса в объект Java Bean, вызвав все сеттеры, которые соответствуют именам столбцов. * г) Если запрос привел к более чем одной строке, будет выведено исключение “не-уникальный” результат. Новое StreamList значение типа вывода,выводит результата запроса используя Iterator<Map<String, Object>>, может быть использовано вместе с Splitter СОПС. |
| Класс вывода | outputClass | STRING | null | Указывает полный пакет и имя класса для использования в качестве преобразования при OutputType = SelectOne. |
| Бин сопоставитель ряда | beanRowMapper | BEAN | null | Для того чтобы использовать org.apache.camel.component.jdbc.BeanRowMapper при использовании outputClass. Реализация по умолчанию занизит регистр названий строк и пропустит подчеркивания и тире. Например "CUST_ID", отображается , как "custId". |
| Считывать как BLOB | useGetBytesForBlob | BOOL | false | Для считывания BLOB - столбцов как байт вместо строки данных. Это может потребоваться для некоторых баз данных , таких как Oracle , где вы должны считывать BLOB столбцы в байтах. |


OutSQLEnpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Использовать итератор | useIterator | BOOL | true | Если true, каждая вернувшаяся строка обрабатывается индвидуально. Если false, то данные представляются как java.util.List в теле сообщения. |
| Групповое выполнение | batch | BOOL | false | Выполняет групповое обновление SQL (выражений). |
| Ссылка на DataSource | dataSource | BEAN | null | Ссылка на DataSource в реестре. |
| Параметры JdbcTemplate | template.xxx | CONFIG | null | Установка дополнительных параметров Spring JdbcTemplate, используемого для выполнения запросов. Так , например, template.maxRows=10. Для получения более подробной документации см JavaDoc JdbcTemplate документации. |
| Разрешить именованные параметры | allowNamedParameters | BOOL | true | Следует ли разрешить использование именованных параметров в запросах. |
| Всегда выполнять запрос | alwaysPopulateStatement | BOOL | false | Если этот параметр включен, то вызывается populateStatement метод из org.apache.camel.component.sql.SqlPrepareStatementStrategy всегда ,также если ожидаемые параметры не подготовлены. Если false то populateStatement вызывается только при наличии 1 или более ожидаемых параметров, которые будут установлены; например , это позволяет избежать чтения тела сообщения / заголовков для запросов SQL без каких - либо параметров. |
| Разделитель | separator | STRING | , | Разделитель используется для разделения SQL выражений, если установлен параметр 'Использовать тело сообщения для SQL выражения'. |
| Тип вывода | outputType | SELECT | SelectList | OutputType = «SelectList», для потребителя или производителя, выведет Список Map.SelectOne будет выводить один Java объект следующим образом: а) Если запрос содержит только один столбец, то, что JDBC объект Column возвращается. (например, SELECT COUNT( * )  PROJECT возвращает объект Long. б) Если запрос имеет более чем один столбец, то он будет возвращать Map этого результата. в) Если outputClass установлен, то он будет преобразовывать результат запроса в объект Java Bean, вызвав все сеттеры, которые соответствуют именам столбцов. Это предполагает, что ваш класс имеет конструктор по умолчанию. г) Если запрос дал в результате более чем одной строки, он выводит ошибку не уникальный результат. SelectList также поддерживает отображение каждой строки в объект Java, как это делает SelectOne (только стадия в). StreamList OutputType, что потоки результата запроса с использованием итератора. Он может быть использован с Разветвителем EIP в потоковом режиме для обработки ResultSet в потоковой моду. Это StreamList не поддерживает пакетный режим, но вы можете использовать outputClass для отображения каждой строки в классе.onwards there is a new StreamList outputType that streams the result of the query using an Iterator. It can be used with the Splitter EIP in streaming mode to process the ResultSet in streaming fashion. This StreamList do not support batch mode, but you can use outputClass to map each row to a class. |
| Имя класса для вывода | outputClass | STRING | null | Укажите полный пакет и имя класса для использования в качестве преобразования , когда outputType=SelectOne. |
| Записать вывод в заголовок | outputHeader | STRING | null | Для того, чтобы сохранить результат в виде заголовка вместо тела сообщения. Это позволяет сохранить существующее тело сообщения. |
| Количество параметров | parametersCount | INT | 0 | Если установлен больше нуля, то Брокер будет использовать это значение счетчика параметров для замены, вместо запроса с помощью JDBC API метаданных. Это полезно, если поставщик JDBC не возвращает верный счетчик параметров, то пользователь может переопределить вместо этого.***** |
| Игнорировать результаты запроса | noop | BOOL | false | Если установлено, будет игнорировать результаты запроса SQL и использовать существующие IN сообщения, как сообщение OUT для продолжения обработки. |
| Использовать тело сообщения для SQL выражения | useMessageBodyForSql | BOOL | false | Если эта опция включена , то SQL в URI не используется. Параметры SQL должны быть представлены в заголовке с ключом CamelSqlParameters. |


OutSQLProcedureEnpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Групповое выполнение | batch | BOOL | false | Выполняет групповое обновление SQL (выражений). |
| Ссылка на DataSource | dataSource | BEAN | null | Ссылка на DataSource в реестре. |
| Записать вывод в заголовок | outputHeader | STRING | null | Для того, чтобы сохранить результат в виде заголовка вместо тела сообщения. Это позволяет сохранить существующее тело сообщения. |
| Игнорировать результаты запроса | noop | BOOL | false | Если установлено, будет игнорировать результаты запроса SQL и использовать существующие IN сообщения, как сообщение OUT для продолжения обработки. |
| Использовать тело сообщения для SQL выражения | useMessageBodyForTemplate | BOOL | false | Если эта опция включена , то SQL в URI не используется. Параметры SQL должны быть представлены в заголовке с ключом CamelSqlParameters. |
| Вызывать функцию | function | BOOL | false | Если опция включена то будет вызываться функция, а не хранимая прцоедура. |


DirectEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Блокировка | block | BOOL | false | При пересылке сообщения к конечной точке без активных потребителей, продюссер будет блокирвоать отправку на время тайм-аута до тех пор пока не появятся активные потребители. |
| Тайм-аут | timeout | INT | 30000 | Время тайм-аута в миллисекундах, на которое блокируется сообщение в ожидании появления активного потребителя. |
| Ошибка при отсутсвии потребителей | failIfNoConsumers | BOOL | true | Должна ли выбрасываться ошибка при отсутсвии активных потребителей. |


InEhcacheEndpoint.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Асинхронность | eventFiring  | SELECT | ASYNCHRONOUS | null |
| Порядок | eventFiring  | SELECT | ASYNCHRONOUS | null |
| Создать кеш, если он отсутсвует | createCacheIfNotExist | BOOL | false | Если true, то кеш создается автоматически, если он еще не создан. |


OutEhcacheEndpoint.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Ссылка на cacheManager | cacheManager | BEAN | null | Ссылка на бин типа cacheManager |
| Ссылка на cacheManagerConfiguration | cacheManagerConfiguration | BEAN | true | Ссылка на бин типа cacheManagerConfiguration. |
| Создать кеш, если он отсутсвует | createCacheIfNotExist | BOOL | true | Если true, то кеш создается автоматически, если он еще не создан. |


OutExecEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Аргументы | args | STRING | null | Аргументы для исполнения команды. Может быть указан один или несколько разделенных пробелом. |
| Привязка | binding | BEAN | null | Ссылка на конфигурацию типа a org.apache.commons.exec.ExecBinding. |
| Исполнитель команд | commandExecutor | BEAN | null | Ссылка на конфигурацию типа a org.apache.commons.exec.ExecCommandExecutor. |
| Таймаут | timeout | INT | null | Таймаут в миллисекундах, после которого запускаемая команда будет завершена. |
| Считать пустой вывод ошибочным | useStderrOnEmptyStdout | BOOL | false | В тело сообщения будет записана ошибка, если вывод команды пуст. |
| Рабочая директория | workingDir | STRING | null | Директория, в которой данная команда будет выполняться. |
| Выполнять синхронно | synchronous | BOOL | false | Использовать синхронный или асинхронный режим исполнения (при поддержки асинхронного режима другими компонентами). |


FileEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Автоматическое создание директорий | autoCreate | BOOL | true | Автоматически создает недостающие каталоги в пути к файлу .Создает начальный каталог для потребителя файла. Для производителя файла, это означает каталог в который должны быть записаны файлы . |
| Размер буфера  | bufferSize | STRING | 128 | Буфер записи с заданным размером в байтах. |
| Имя файла | fileName | STRING | null | Возможно использование выражения для динамической установки имени файла, оно имеет преимущество над заголовком. Для точки входа имя файла используется как фильтр, вы например можете потреблять файлы созданные сегодня, используя синтаксис файлового языка: mydata-${date:now:yyyyMMdd}.txt. В случае точки выхода будет создан файл с указанным именем, если в точку выхода передается несколько сообщений, то файл каждый раз будет переписан. |
| Обрезка пути к файлу | flatten | BOOL | false | Используется для обрезки пути к файл, так что остается просто имя файла. Это позволяет потреблять файлы рекурсивно в подкаталогах. |
| Кодировка файла | charset | STRING | null | Этот параметр используется для указания кодировки файла.  |
| Копирование с удалением при ошибке переименования | copyAndDeleteOnRenameFail | BOOL | true | Указывает делать ли резервную копию и удалить оригинальный файл, в случае, если файл не может быть переименован напрямую.  |
| Копирование с удалением в место переименования | renameUsingCopy | BOOL | false | Выполнение копирования и удаления в место операции переименования. Эта настройка имеет приоритет над параметром Копирование с удалением при ошибке переименования. |
| Первоначальная задержка | initialDelay | INT | 1000 | Задержка перед началом процесса получения файла / каталога в миллисекундах |
| Задержка | delay | INT | 500 | Время задержки до следующего получения файла / каталога в миллисекундах |
| Одинаковая задержка независимо от времени | useFixedDelay | BOOL | true | Если используется fixed delay или fixed rate. ScheduledExecutorService JDK для уточнения деталей.Значение по умолчанию true. |
| Уровень протоколирования | runLoggingLevel | SELECT | WARN | точка входа может записывать протоколы работы в лог. Этот параметр позволяет настроить уровень протоколирования. |
| Рекурсивность | recursive | BOOL | false | Если указан true, будет искать файлы во всех подкаталогах. |
| Удалить файл | delete | BOOL | false | Если в true,то файл будет удален после того, как он будет успешно обработан. |
| Только чтение | noop | BOOL | false | Если true,то файл не будет перемещен или удален. Этот вариант хорош только для чтения данных, или для требований типа ETL. По умолчанию файлы перемещаются в директорию .camel. |
| Имя директории/файла перед началом обработки | preMove | STRING | null | Строка или выражение, используется для динамической установки имени директории/файла при его перемещении, прежде чем начать обработку. Например, чтобы переместить файлы находящиеся в обработке, в  каталог order нужно установить это }
значение  в order. |
| Имя директории/файла после обработки | move | STRING | .camel | Строка или выражение используется для динамической установки имени файла при его перемещении, после обработки. Например, чтобы переместить файлы в  каталог .done нужно установить это значение  в .done. |
| Имя директории/файла при ошибке | moveFailed | STRING | null | Строка или выражение используется для динамической установки другого целевого каталога при перемещении файлов обработки.</br>Например, чтобы переместить файлы в .error подкаталог нужно использовать: .error.</br>Примечание : При }
перемещении файлов в «Ошибочную» локацию Брокер обработает ошибку и не подберет файл снова. |
| Регулярное выражение поиска файлов | include | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение исключения файлов | exclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение ANT для поиска файлов | antInclude | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Регулярное выражение ANT для исключения файлов  | antExclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Сделать регулярное выражение ANT чувствительным к регистру | antFilterCaseSensitive | BOOL | true | сделать регулярное выражение ANT чувствительным к регистру. |
| Пропуск уже обработанных файлов | idempotent | BOOL | false | Возможность чтобы брокер пропускал уже обработанные файлы. Будет по умолчанию использовать LRUCache память, которая содержит 1000 записей. Если включен режим Только чтение, Данная опция также будет включена, чтобы избежать потребления }
одних и тех же файлов снова и снова. |
| Уникальный ключ уже обработанных файлов | idempotentKey | STRING | Expression | По умолчанию используется абсолютный путь к файлу. Вы можете использовать имя файла и размер файла, например : ${file:name}-${file:size} |
| Хранилище для хранение ключей обработанных файлов | idempotentRepository | BOOL | false | Присоединяемое хранилище для хранения, использует по умолчанию, MemoryMessageIdRepository если другой не указан и }
Пропуск уже обработанных файлов установлен в true. |
| Учет файлов в процессе обработки | inProgressRepository | STRING | memory | хранилище используется для учета файлов потребляющихся в настоящее время .  |
| Расширенный фильтр | filter | STRING | null | Подключаемый фильтр. Будет пропускать файлы, если фильтр возвращает false в accept() методе.  |
| Фильтр каталогов | filterDirectory | STRING | null | Фильтрует каталоги. Например, для фильтрации по текущей дате, вы можете использовать простой шаблон даты, такой как  ${date:now:yyyMMdd}. |
| Фильтр файлов | filterFile | STRING | null | Фильтрует файлы. Например, чтобы фильтровать по размеру файла, вы можете использовать  ${file}:size > 5000. |
| Случайный порядок | shuffle | BOOL | false | Для того, чтобы перетасовать список файлов (сортировка в случайном порядке). |
| Расширенная сортировка | sorter | STRING | null | Подключаемый сортировщик. |
| Сортировка | sortBy | STRING | null | Встроенная сортировка. Поддерживает вложенность, так что вы можете сортировать по имени файла и сортировать по дате модификации. |
| Блокировка файла | readLock | SELECT | null | Брокер будет ждать, пока файл заблокирован. <ul> Возможны следующие варианты:<li>none не использовать блокировку.</li><li>markerFile Брокер создает файл - маркер, а затем удерживает блокировку на нем.</li><li>changed использует временную отметку длины/модификации для обнаружения копируется ли файл в настоящее время. Будет затрачена по крайней мере 1 сек. чтобы определить это, так что этот вариант не может потреблять файлы так же быстро, как и другие, но будет более надежным.</li><li>fileLock - Такой подход следует избегать при получении доступа к удаленной файловой системе с помощью mount/share, если только файловая система не поддерживает распределенную блокировку файлов(distributed file locks).</li><li>rename попробует переименовать файл в качестве теста,возможно ли получить exclusive read-Lock.</li><li>idempotent для использования  хранилища для хранение ключей обработанных файлов в качестве блокировки. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-changed для использования хранилища для хранение ключей обработанных файлов и изменения в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-rename для использования хранилища для хранение ключей обработанных файлов и переименования в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li></ul><b>Внимание : большинство стратегий блокировки чтения не подходит для использования в кластерном режиме. То есть, вы не можете иметь несколько точек входа пытающихся прочитать тот же файл в том же каталоге. В этом случае блокировка не будет надежно функционировать. Блокировка Idempotent поддерживает кластерный режим, если вы используете идемпотентную  реализацию хранилища с подержкой кластера, например, от Hazelcast Component или Infinispan .</b> |
| Время ожидания блокировки | readLockTimeout | INT | 10000 | Время ожидания в миллисекундах для блокировки файла. Если блокировка не может быть предоставлена и срабатывает тайм - аут, то Брокер пропустит файл. В следующем опросе Брокер, будет пытаться опросить файл снова, и на этот раз, может быть, блокировка будет предоставлена. Значение по умолчанию 10000. |
| Интервал блокировки | readLockCheckInterval | INT | 1000 | Интервал в миллисекундах для блокировки файлов. Этот интервал используется для ожидания между попытками получить блокировку. Например, вы можете установить более высокий интервал для обслуживания медленной записи . Значение по умолчанию 1 сек. может быть слишком быстро, если производитель очень медленно записывает файл. |
| Минимальный размер файла блокировки | readLockMinLength | INT | 1 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет настроить минимальную длину файла. По умолчанию Брокер ожидает, что файл содержит данные, и, таким образом, значение по умолчанию равно 1 . Вы можете установить этот параметр в ноль, чтобы потреблять файлы нулевой длины. |
| Минимальный возраст файла | readLockMinAge | INT | 0 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет указать минимальный возраст файла, прежде чем пытаться получить блокировку. Например, можно использовать  300s для того чтобы потреблять файлы возрастом не менее 5 минут. Это может ускорить опрос, когда файл достаточно стар, так как он будет немедленно получать блокировку. |
| Уровень логирования блокировки файлов | readLockLoggingLevel | SELECT | 0 | Уровень логирования используется, когда блокировка не может быть получена. По умолчанию,. Задается WARN. Вы можете изменить этот уровень, например, на OFF, чтобы отключить какое - либо протоколирования. Эта опция применима только для блокировки типов: changed, fileLock, rename. |
| Использовать маркерный файл для блокировки | readLockMarkerFile | BOOL | true | Следует ли использовать маркерный файл для типов блокировки  changed,rename или exclusive. По умолчанию файл маркера используется также для защиты от других процессов, подбирающих одни и те же файлы. Такое поведение можно отключить, установив эту опцию false.  |
| Удалять записи из хранилища ключей файлов при откате | readLockRemoveOnRollback | BOOL | true | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла из хранилища если обработка файла не удалась, и происходит откат . Если эта опция не установлена, то запись имени файла подтверждается. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockRemoveOnCommit | BOOL | false | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла при успешной обработке файла из идемпотентного  хранилища и фиксация происходит. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockDeleteOrphanLockFiles | BOOL | true | Определяет будут удалены или нет любые потерянные,  read-Lock и маркерные файлы при запуске, которые  возможно, были оставлены в файловой системе, если Брокер не был завершен надлежащим образом (например, аварии JVM). Если настроть в false, то любое осиротевший файл блокировки заставит Брокер не поднимать этот файл. |
| Начать обработку только при наличие директории (рекурсивно) | directoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. работает рекурсивно. |
| Имя финального файла | doneFileName | STRING | null | Если настроено, Брокер будет только потреблять файлы, если финальный файл существует. Эта опция настраивает то, какое имя файла использовать. Либо вы можете задать фиксированное имя. Или вы можете использовать динамические заполнители. финальные файлы всегда ожидаются в той же папке, что и исходные файлы. |
| Максимальное число сообщений в опросе | maxMessagesPerPoll | INT | 0 | Целое число определяющий максимальное число сообщений в опросе. По умолчанию не установлено. Может использоваться, чтобы установить предел, например, 1000 чтобы избежать при запуске сервера наличия тысячи файлов. Установите значение  0 или отрицательное, чтобы отключить его. Другие подробности в Batch Consumer.<br/>Примечание: Если эта опция используется тогда File и FTP компоненты будут ограничены до любой сортировки. Например, если у вас есть 100000 файлов и использовать maxMessagesPerPoll=500, только первые 500 файлы будут подняты, а затем отсортированы. Вы можете использовать опцию "Не выполнять полное сканирование перед опросом" и установить эту  false, чтобы сканировать все файлы, а затем сортировать. |
| Не выполнять полное сканирование перед опросом | eagerMaxMessagesPerPoll | BOOL | true | Установка этой опции false позволяет сортировать файлы, а затем ограничить опрос. Имейте в виду, что это требует использования большего количества памяти, так как все детали файла загружены в память, для выполнения сортировки. |
| Минимальная глубина для начала обработки при рекурсивном обработке каталога | minDepth | INT | 0 | Минимальная глубина для начала обработки при рекурсивном обработке каталога. Использование minDepth=1 означает базовый каталог. Использование minDepth=2 означает первый подкаталог. Эта опция поддерживается FTP потребителем. |
| Максимальная глубина для обхода при рекурсивной обработке каталога | maxDepth | INT | 0 | Максимальная глубина для обхода при рекурсивной обработке каталога. Эта опция поддерживается FTP потребителем. |
| Начать обработку только при наличие директории | startingDirectoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. |
| Отправлять пустые сообщения в состоянии простоя | sendEmptyMessageWhenIdle | BOOL | false | Если опрашивающий потребитель не отправил файлы, вы можете включить эту опцию, чтобы отправлять пустые сообщения (nobody). |
| Обрабатывать ошибки брокером | consumer.bridgeErrorHandler | BOOL | false | Позволяет привязать потребителя к обработчику ошибок (ErrorHandler) маршрутизируемого Брокером, для того чтобы любые ошибки  произошедшие при подъеме файлов, обрабатывались в виде сообщения и маршрутизировались обработчиком ошибок. По умолчанию потребитель будет использовать  org.apache.camel.spi.ExceptionHandler, чтобы справиться с ошибками, которые по умолчанию будут записываться на уровне  WARN/ ERROR и игнорироваться. |
| Определение типа содержимого | probeContentType | BOOL | false | Включает зондирование типа содержимого. Если включить, то потребитель использует Files#probeContentType(java.nio.file.Path) для определения типа содержимого файла, и хранить в качестве заголовка с ключом Exchange#FILE_CONTENT_TYPE на сообщении. |


InFTPEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Имя пользователя | username | STRING | null | Задает имя пользователя, для использования в удаленной файловой системе. Если имя пользователя не задано, то будет предпринята анонимная попытка входа. |
| Пароль | password | STRING | null | Задает пароль для использования в удаленной файловой системе. |
| Аккаунт | account | STRING | null | Аккаунт для входа на удаленный FTP - сервер |
| Режим передачи файлов | binary | BOOL | false | Задает режим передачи файлов, BINARY или ASCII. По умолчанию ASCII (false). |
| Отключиться | disconnect | BOOL | false | Отключиться или нет от удаленного сервера FTP сразу после использования. Может использоваться как для потребителя, так  и  для продюсера. Настройка только отключит текущее подключение к FTP - серверу. Если у вас есть потребитель ,который вы хотите остановить, тогда следует остановить потребитель / маршрут вместо этого. |
| Локальный рабочий каталог | localWorkDirectory | STRING | null | При потреблении, локальный рабочий каталог может быть использован для хранения содержимого удаленного файла непосредственно в локальных файлах, чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. Если имя директории указывается без косой черты (например: directoryName), то она будет создана (если отсутствует) в домашней директории Factor ESB, иначе по указанному пути в файловой системе., чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл .  |
| Пассивный режим соединения | passiveMode | BOOL | false | Указывает, следует ли использовать пассивный режим соединения. По умолчанию active mode (false). |
| Загрузить файл | download | BOOL | true | Должен ли FTP потребитель загрузить файл. Если этот параметр установлен false, то тело сообщения будет null, но потребитель все равно будет вызывать Camel Exchange, который содержит информацию о файле , например, имя файла, размер файла и т.д.. |
| Потоковая Загрузка | streamDownload | BOOL | false | Должен ли FTP потребитель загружать файл целиком (поведение по умолчанию) или частично, используя входной поток. Эта опция игнорируется, если опция «Загрузить файл» false или используется опция «Локальный рабочий каталог». Для работы этой опции неоходимо следующее:  «Пассивный режим соединения» true и  FTP сервер должен поддерживать пассивный режим с потоковой загрузкой. Полезна для работы с большими удаленными файлами. |
| Проверка существования файла | fastExistsCheck | BOOL | false | Если установлен этот параметр в true, Брокер-FTP будет использовать файл список непосредственно, чтобы проверить, существует ли файл. Поскольку некоторые FTP - серверы не поддерживают прямую проверку, если опция ложна, Брокер-FTP будет использовать старый способ перечислить каталоги и проверить, существует ли файл. Этот параметр также влияет на управление readLock=changed. Это может быть использовано для ускорения процесса , если сервер FTP имеет много файлов. |
| Максимальное кол-во попыток переподключений | maximumReconnectAttempts | INT | 3 | Задает максимальное кол-во попыток переподключений которое Брокер произведет, пытаясь подключиться к удаленному серверу FTP. Используйте 0, чтобы отключить это поведение. |
| Задержка переподключения | reconnectDelay | INT | 1000 | Задержка в Миллисекундах перед выполнением попытки повторного подключения. |
| Таймаут соединения | connectTimeout | INT | 10000 | Таймаут соединения в Миллисекундах . Это соответствует использованию ftpClient.connectTimeout для FTP / FTPS. Для SFTP эта опция также используется при попытке подключения. |
| Значение таймаута  | soTimeout | INT | 300000 | SocketOptions.SO_TIMEOUT Значение таймаута в Миллисекундах. Задается как, например, 300000 (5 минут), чтобы не повесить соединение. На SFTP этот параметр установлен в качестве тайм - аута на JSch сессии. |
| Таймаут соединения FTP и FTPS  | timeout | INT | 30000 | Таймаут соединения в Миллисекундах. Это соответствует использованию ftpClient.dataTimeout для FTP / FTPS. Для SFTP нет тайм - аута. |
| Выводить ошибку при не успешном соединении | throwExceptionOnConnectFailed | BOOL | false | Указывает выводить ли ошибку в том ,случае если успешное соединение не может быть установлено. Это позволяет pollStrategy отработать с  исключением, например , чтобы остановить потребитель. |
| Команды сайта | siteCommand | STRING | null | Для выполнения команд сайта после успешного входа в систему. Несколько команд сайта могут быть разделены с помощью символа новой строки (
). Используйте, help site чтобы увидеть, какие команды поддерживает ваш сервер FTP. |
| Поэтапный просмотр | stepwise | BOOL | true | Указывает следует использовать поэтапный просмотр каталогов или нет. Поэтапное означает , что  будет просматривать один каталог за раз.  |
| Разделитель пути | separator | SELECT | UNIX | Определяет, какой разделитель пути, используется при загрузке файлов. Auto = оставляет предоставленный разделитель пути без изменений. UNIX = Использование разделителей UNIX. Windows = Использование разделителей Windows. |
| Размер приемного буфера | receiveBufferSize | INT | 32768 | Размер буфера для загрузки файлов. Размер по умолчанию 32кб. |
| Ftp клиент | ftpClient.xxx | CONFIG | null | Позволяет использовать клиент org.apache.commons.net.ftp.FTPClient. |
| Конфигурация Ftp клиента | ftpClientConfig | BEAN | null | Позволяет использовать клиент org.apache.commons.net.ftp.FTPClientConfig. |
| Настройка параметров клиента | ftpClientConfig.xxx | CONFIG | null | Для того, чтобы настроить различные параметры клиента FTPClient (URI). Например: ftpClientConfig.receiveDataSocketBufferSize=8192 & ftpClientConfig.sendDataSocketBufferSize=8192 |
| Использовать для получения списка каталогов | useList | BOOL | true | Указывает должен ли потребитель использовать команду FTP LIST, чтобы получить список каталогов, чтобы увидеть, какие файлы существует. Если этот параметр установлен false, то также должен быть настроен поэтапный просмотр=false, а также fileName должен быть настроен на фиксированное имя, так чтобы потребитель знал имя файла для извлечения. |
| Игнорировать не найденный файл или ошибки доступа | ignoreFileNotFoundOrPermissionError | BOOL | false | Указывает должен ли потребитель игнорировать ошибки,когда пытается получить файл, который не существует (по каким-то причинам), или ошибки разрешения доступа. Также эта опция работает и с  каталогами. |
| Завершать соединение по окончанию обработки партии | disconnectOnBatchComplete | BOOL | false | Указывает  отключиться ли от удаленного сервера FTP после завершения пакета Batch . Может использоваться как для потребителя и производителя. Отключение только закроет текущее подключение к FTP - серверу.  |
| Диапазон портов в активном режиме | activePortRange | STRING | null | Установите диапазон портов на клиентской стороне в активный режиме. Синтаксис: minPort - maxPort. Например , 10000-19999 , чтобы включить весь диапазон, т.е 1xxxx портов. |


InFTPSEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Имя пользователя | username | STRING | null | Задает имя пользователя, для использования в удаленной файловой системе. Если имя пользователя не задано, то будет предпринята анонимная попытка входа. |
| Пароль | password | STRING | null | Задает пароль для использования в удаленной файловой системе. |
| Аккаунт | account | STRING | null | Аккаунт для входа на удаленный FTP - сервер |
| Режим передачи файлов | binary | BOOL | false | Задает режим передачи файлов, BINARY или ASCII. По умолчанию ASCII (false). |
| Отключиться | disconnect | BOOL | false | Отключиться или нет от удаленного сервера FTP сразу после использования. Может использоваться как для потребителя, так  и  для продюсера. Настройка только отключит текущее подключение к FTP - серверу. Если у вас есть потребитель ,который вы хотите остановить, тогда следует остановить потребитель / маршрут вместо этого. |
| Локальный рабочий каталог | localWorkDirectory | STRING | null | При потреблении, локальный рабочий каталог может быть использован для хранения содержимого удаленного файла непосредственно в локальных файлах, чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. Если имя директории указывается без косой черты (например: directoryName), то она будет создана (если отсутствует) в домашней директории Factor ESB, иначе по указанному пути в файловой системе., чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. |
| Пассивный режим соединения | passiveMode | BOOL | false | Указывает, следует ли использовать пассивный режим соединения. По умолчанию active mode (false). |
| Протокол безопасности | securityProtocol | STRING | TLS | Устанавливает протокол безопасности. Следующие значения определены: TLS: Transport Layer Security, SSL: Secure Sockets Layer |
| Отключить использование значений по умолчанию безопасной передачи данных | disableSecureDataChannelDefaults | BOOL | false | Отключать или нет  использование значений по умолчанию execPbsz и "Тип протокола FTPS" при использовании безопасной передачи данных. Вы можете установить эту опцию в true если вы хотите полностью контролировать опции execPbsz и "Тип протокола FTPS". |
| Загрузить файл | download | BOOL | true | Должен ли FTP потребитель загрузить файл. Если этот параметр установлен false, то тело сообщения будет null, но потребитель все равно будет вызывать Camel Exchange, который содержит информацию о файле , например, имя файла, размер файла и т.д.. |
| Потоковая Загрузка | streamDownload | BOOL | false | Должен ли FTP потребитель загружать файл целиком (поведение по умолчанию) или частично, используя входной поток. Эта опция игнорируется, если опция «Загрузить файл» false или используется опция «Локальный рабочий каталог». Для работы этой опции неоходимо следующее:  «Пассивный режим соединения» true и  FTP сервер должен поддерживать пассивный режим с потоковой загрузкой. Полезна для работы с большими удаленными файлами. |
| Тип протокола FTPS | execProt | STRING | null | По умолчанию использует P , если secure data channel по умолчанию не был отключен. Возможные значения: C: Clear, S: Safe(Протокол SSL), E: (Протокол SSL), Confidential P: Private |
| Размер буфера защищенного канала передачи данных | execPbsz | STRING | null | Этот параметр определяет размер буфера защищенного канала передачи данных. Если опция useSecureDataChannel включена, и эта опция не была установлена, то используется значение 0. |
| Устанавливает режим защиты | isImplicit | BOOL | false | Устанавливает режим защиты (Implicit / explicit). По умолчанию является explicit (false). |
| Проверка существования файла | fastExistsCheck | BOOL | false | Если установлен этот параметр в true, Брокер-FTP будет использовать файл список непосредственно, чтобы проверить, существует ли файл. Поскольку некоторые FTP - серверы не поддерживают прямую проверку, если опция ложна, Брокер-FTP будет использовать старый способ перечислить каталоги и проверить, существует ли файл. Этот параметр также влияет на управление readLock=changed. Это может быть использовано для ускорения процесса , если сервер FTP имеет много файлов. |
| Максимальное кол-во попыток переподключений | maximumReconnectAttempts | INT | 3 | Задает максимальное кол-во попыток переподключений которое Брокер произведет, пытаясь подключиться к удаленному серверу FTP. Используйте 0, чтобы отключить это поведение. |
| Задержка переподключения | reconnectDelay | INT | 1000 | Задержка в Миллисекундах перед выполнением попытки повторного подключения. |
| Таймаут соединения | connectTimeout | INT | 10000 | Таймаут соединения в Миллисекундах . Это соответствует использованию ftpClient.connectTimeout для FTP / FTPS. Для SFTP эта опция также используется при попытке подключения. |
| Значение таймаута  | soTimeout | INT | 300000 | SocketOptions.SO_TIMEOUT Значение таймаута в Миллисекундах. Задается как, например, 300000 (5 минут), чтобы не повесить соединение. На SFTP этот параметр установлен в качестве тайм - аута на JSch сессии. |
| Таймаут соединения FTP и FTPS  | timeout | INT | 30000 | Таймаут соединения в Миллисекундах. Это соответствует использованию ftpClient.dataTimeout для FTP / FTPS. Для SFTP нет тайм - аута. |
| Выводить ошибку при не успешном соединении | throwExceptionOnConnectFailed | BOOL | false | Указывает выводить ли ошибку в том ,случае если успешное соединение не может быть установлено. Это позволяет pollStrategy отработать с  исключением, например , чтобы остановить потребитель. |
| Команды сайта | siteCommand | STRING | null | Для выполнения команд сайта после успешного входа в систему. Несколько команд сайта могут быть разделены с помощью символа новой строки (
). Используйте, help site чтобы увидеть, какие команды поддерживает ваш сервер FTP. |
| Поэтапный просмотр | stepwise | BOOL | true | Указывает следует использовать поэтапный просмотр каталогов или нет. Поэтапное означает , что  будет просматривать один каталог за раз.  |
| Разделитель пути | separator | SELECT | UNIX | Определяет, какой разделитель пути, используется при загрузке файлов. Auto = оставляет предоставленный разделитель пути без изменений. UNIX = Использование разделителей UNIX. Windows = Использование разделителей Windows. |
| Размер приемного буфера | receiveBufferSize | INT | 32768 | Размер буфера для загрузки файлов. Размер по умолчанию 32кб. |
| Ftp клиент | ftpClient.xxx | CONFIG | null | Позволяет использовать клиент org.apache.commons.net.ftp.FTPClient. |
| Конфигурация Ftp клиента | ftpClientConfig | BEAN | null | Позволяет использовать клиент org.apache.commons.net.ftp.FTPClientConfig. |
| Настройка параметров клиента | ftpClientConfig.xxx | CONFIG | null | Для того, чтобы настроить различные параметры клиента FTPClient (URI). Например: ftpClientConfig.receiveDataSocketBufferSize=8192 & ftpClientConfig.sendDataSocketBufferSize=8192 |
| Файл хранилище доверенных сертификатов | ftpClient.trustStore.file | STRING | null | Устанавливает файл хранилище доверенных сертификатов, так что клиент FTPS может искать доверенные сертификаты. |
| Тип хранилища доверенных сертификатов | ftpClient.trustStore.type | STRING | JKS | Устанавливает тип хранилища доверенных сертификатов. |
| Алгоритм хранилища доверенных сертификатов | ftpClient.trustStore.algorithm | STRING | SunX509 | Устанавливает алгоритм хранилища доверенных сертификатов. |
| Пароль хранилища доверенных сертификатов | ftpClient.trustStore.password | STRING | null | Устанавливает пароль хранилища доверенных сертификатов. |
| Файл хранилища ключей | ftpClient.keyStore.file | STRING | null | Устанавливает файл хранилища ключей, так что клиент FTPS может искать свой личный сертификата. |
| Тип хранилища ключей | ftpClient.keyStore.type | STRING | JKS | Устанавливает тип хранилища ключей. |
| Алгоритм хранилища ключей | ftpClient.keyStore.algorithm | STRING | SunX509 | Устанавливает алгоритм хранилища ключей. |
| Пароль хранилища ключей | ftpClient.keyStore.password | STRING | null | Устанавливает пароль хранилища ключей. |
| Пароль личного ключа | ftpClient.keyStore.keyPassword | STRING | null | Устанавливает пароль личного ключа. |
| Ссылка на параметры SSL контекста | sslContextParameters | BEAN | null | Ссылка на org.apache.camel.util.jsse.SSLContextParameters в реестре. Эта ссылка заменяет любые сконфигурированные параметры SSL на ftpClient, а также securityProtocol (SSL, TLS и т.д.) , установленный на FtpsConfiguration. См использование конфигурационной утилиты JSSE. |
| Использовать для получения списка каталогов | useList | BOOL | true | Указывает должен ли потребитель использовать команду FTP LIST, чтобы получить список каталогов, чтобы увидеть, какие файлы существует. Если этот параметр установлен false, то также должен быть настроен поэтапный просмотр=false, а также fileName должен быть настроен на фиксированное имя, так чтобы потребитель знал имя файла для извлечения. |
| Игнорировать не найденный файл или ошибки доступа | ignoreFileNotFoundOrPermissionError | BOOL | false | Указывает должен ли потребитель игнорировать ошибки,когда пытается получить файл, который не существует (по каким-то причинам), или ошибки разрешения доступа. Также эта опция работает и с  каталогами. |
| Завершать соединение по окончанию обработки партии | disconnectOnBatchComplete | BOOL | false | Указывает  отключиться ли от удаленного сервера FTP после завершения пакета Batch . Может использоваться как для потребителя и производителя. Отключение только закроет текущее подключение к FTP - серверу.  |
| Диапазон портов в активном режиме | activePortRange | STRING | null | Установите диапазон портов на клиентской стороне в активный режиме. Синтаксис: minPort - maxPort. Например , 10000-19999 , чтобы включить весь диапазон, т.е 1xxxx портов. |


InSFTPEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Имя пользователя | username | STRING | null | Задает имя пользователя, для использования в удаленной файловой системе. Если имя пользователя не задано, то будет предпринята анонимная попытка входа. |
| Пароль | password | STRING | null | Задает пароль для использования в удаленной файловой системе. |
| Режим передачи файлов | binary | BOOL | false | Задает режим передачи файлов, BINARY или ASCII. По умолчанию ASCII (false). |
| Отключиться | disconnect | BOOL | false | Отключиться или нет от удаленного сервера FTP сразу после использования. Может использоваться как для потребителя, так  и  для продюсера. Настройка только отключит текущее подключение к FTP - серверу. Если у вас есть потребитель ,который вы хотите остановить, тогда следует остановить потребитель / маршрут вместо этого. |
| Локальный рабочий каталог | localWorkDirectory | STRING | null | При потреблении, локальный рабочий каталог может быть использован для хранения содержимого удаленного файла непосредственно в локальных файлах, чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. Если имя директории указывается без косой черты (например: directoryName), то она будет создана (если отсутствует) в домашней директории Factor ESB, иначе по указанному пути в файловой системе., чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. |
| Загрузить файл | download | BOOL | true | Должен ли FTP потребитель загрузить файл. Если этот параметр установлен false, то тело сообщения будет null, но потребитель все равно будет вызывать Camel Exchange, который содержит информацию о файле , например, имя файла, размер файла и т.д.. |
| Потоковая Загрузка | streamDownload | BOOL | false | Должен ли FTP потребитель загружать файл целиком (поведение по умолчанию) или частично, используя входной поток. Эта опция игнорируется, если опция «Загрузить файл» false или используется опция «Локальный рабочий каталог». Для работы этой опции неоходимо следующее:  «Пассивный режим соединения» true и  FTP сервер должен поддерживать пассивный режим с потоковой загрузкой. Полезна для работы с большими удаленными файлами. |
| Файл Известных хостов (известные хосты) | knownHostsFile | STRING | null | Устанавливает known_hosts файл, так что SFTP конечная точка может сделать у себя верификацию ключа. |
| Использовать файл известных хостов. | useUserKnownHostsFile | BOOL | true | Если knownHostFile не был явно настроен, использовать хост - файл из System.getProperty (user.home) / SSH / known_hosts. |
| URI известных Хостов | knownHostsUri | STRING | null | Устанавливает known_hosts файл (загруженный из пути к классам по умолчанию), так что конечная точка SFTP может сделать у себя верификацию ключа. |
| Пара ключей | keyPair | SELECT | null | Установка Java - KeyPair для SSH аутентификации с открытым ключом, он поддерживает ключи DSA или RSA. |
| Файл закрытого ключа | privateKeyFile | STRING | null |  Устанавливает файл закрытого ключа так, что конечная точка SFTP может сделать проверку секретного ключа. |
| Файл закрытого ключа (URI) | privateKeyUri | STRING | null | Устанавливает файл закрытого ключа (загруженный из пути к классам по умолчанию) так, что конечная точка SFTP может сделать проверку секретного ключа. |
| Закрытый ключ | privateKey | STRING | null | Устанавливает закрытый ключ, как Byte[] так, что конечная точка SFTP может сделать проверку секретного ключа. |
| Пароль-фраза индивидуального ключа | privateKeyPassphrase | STRING | null | Устанавливает файл пароль-фразу индивидуального ключа так, что конечная точка SFTP может  сделать проверку секретного ключа. |
| Список шифров | ciphers | STRING | null | Указывает разделенный запятыми список шифров, которые будут использоваться в порядке предпочтения. Возможные шифров имена определяются JCraft JSch. Некоторые примеры включают в себя: AES128-CRT, AES128-CBC, 3DES-CRT, 3DES-CBC, Blowfish-CBC, aes192-CBC, AES256-CBC. Если не указано , будет использоваться список по умолчанию из JSch. |
| Проверка существования файла | fastExistsCheck | BOOL | false | Если установлен этот параметр в true, Брокер-FTP будет использовать файл список непосредственно, чтобы проверить, существует ли файл. Поскольку некоторые FTP - серверы не поддерживают прямую проверку, если опция ложна, Брокер-FTP будет использовать старый способ перечислить каталоги и проверить, существует ли файл. Этот параметр также влияет на управление readLock=changed. Это может быть использовано для ускорения процесса , если сервер FTP имеет много файлов. |
| Строгая проверка ключа хоста | strictHostKeyChecking | SELECT | NO | Указывает использовать ли строгую проверку ключа хоста. Возможные значения: no, yes и ask. |
| Максимальное кол-во попыток переподключений | maximumReconnectAttempts | INT | 3 | Задает максимальное кол-во попыток переподключений которое Брокер произведет, пытаясь подключиться к удаленному серверу FTP. Используйте 0, чтобы отключить это поведение. |
| Задержка переподключения | reconnectDelay | INT | 1000 | Задержка в Миллисекундах перед выполнением попытки повторного подключения. |
| Таймаут соединения | connectTimeout | INT | 10000 | Таймаут соединения в Миллисекундах . Это соответствует использованию ftpClient.connectTimeout для FTP / FTPS. Для SFTP эта опция также используется при попытке подключения. |
| Значение таймаута  | soTimeout | INT | 300000 | SocketOptions.SO_TIMEOUT Значение таймаута в Миллисекундах. Задается как, например, 300000 (5 минут), чтобы не повесить соединение. На SFTP этот параметр установлен в качестве тайм - аута на JSch сессии. |
| Выводить ошибку при не успешном соединении | throwExceptionOnConnectFailed | BOOL | false | Указывает выводить ли ошибку в том ,случае если успешное соединение не может быть установлено. Это позволяет pollStrategy отработать с  исключением, например , чтобы остановить потребитель. |
| Поэтапный просмотр | stepwise | BOOL | true | Указывает следует использовать поэтапный просмотр каталогов или нет. Поэтапное означает , что  будет просматривать один каталог за раз.  |
| Разделитель пути | separator | SELECT | UNIX | Определяет, какой разделитель пути, используется при загрузке файлов. Auto = оставляет предоставленный разделитель пути без изменений. UNIX = Использование разделителей UNIX. Windows = Использование разделителей Windows. |
| Сжатие | compression | STRING | 0 | Для того, чтобы использовать сжатие. Укажите уровень от 1 до 10. Важно: Вы должны вручную добавить необходимые JSch ZLIB JAR  для поддержки сжатия. |
| Установка интервала поддержки соединения | serverAliveInterval | INT | 0 | Позволяет установить ServerAliveInterval на SFTP сессии. |
| Установка максимального кол-ва сообщений поддержки соединения | serverAliveCountMax | BEAN | 1 | Позволяет установить serverAliveCountMax на SFTP сессии. |
| Прокси | proxy | STRING | null | Ссылка на com.jcraft.jsch.Proxy в реестре. Этот прокси используется для потребления/отправки сообщений от целевого SFTP хоста. |
| Игнорировать не найденный файл или ошибки доступа | ignoreFileNotFoundOrPermissionError | BOOL | false | Указывает должен ли потребитель игнорировать ошибки,когда пытается получить файл, который не существует (по каким-то причинам), или ошибки разрешения доступа. Также эта опция работает и с  каталогами. |
| Уровень протоколирования jsch | jschLoggingLevel | SELECT | WARN | Уровень протоколирования использующийся для регистрации активности JSch.Допустимы значения INFO, WARN по умолчанию. |
| Объем запросов | bulkRequest | INT | null | Указывает, сколько запросов могут ожидать выполнения в любой момент времени. Увеличение этого значения может немного увеличить скорость передачи файлов , но и увеличит использование памяти. |
| Завершать соединение по окончанию обработки партии | disconnectOnBatchComplete | BOOL | false | Указывает  отключиться ли от удаленного сервера FTP после завершения пакета Batch . Может использоваться как для потребителя и производителя. Отключение только закроет текущее подключение к FTP - серверу.  |
| Диапазон портов в активном режиме | activePortRange | STRING | null | Установите диапазон портов на клиентской стороне в активный режиме. Синтаксис: minPort - maxPort. Например , 10000-19999 , чтобы включить весь диапазон, т.е 1xxxx портов. |


OutFileEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Автоматическое создание директорий | autoCreate | BOOL | true | Автоматически создает недостающие каталоги в пути к файлу .Создает начальный каталог для потребителя файла. Для производителя файла, это означает каталог в который должны быть записаны файлы . |
| Размер буфера  | bufferSize | STRING | 128 | Буфер записи с заданным размером в байтах. |
| Имя файла | fileName | STRING | null | Возможно использование выражения для динамической установки имени файла, оно имеет преимущество над заголовком. Для точки входа имя файла используется как фильтр, вы например можете потреблять файлы созданные сегодня, используя синтаксис файлового языка: mydata-${date:now:yyyyMMdd}.txt. В случае точки выхода будет создан файл с указанным именем, если в точку выхода передается несколько сообщений, то файл каждый раз будет переписан. |
| Обрезка пути к файлу | flatten | BOOL | false | Используется для обрезки пути к файл, так что остается просто имя файла. Это позволяет потреблять файлы рекурсивно в подкаталогах. |
| Кодировка файла | charset | STRING | null | Этот параметр используется для указания кодировки файла.  |
| Копирование с удалением при ошибке переименования | copyAndDeleteOnRenameFail | BOOL | true | Указывает делать ли резервную копию и удалить оригинальный файл, в случае, если файл не может быть переименован напрямую.  |
| Копирование с удалением в место переименования | renameUsingCopy | BOOL | false | Выполнение копирования и удаления в место операции переименования. Эта настройка имеет приоритет над параметром Копирование с удалением при ошибке переименования. |
| Первоначальная задержка | initialDelay | INT | 1000 | Задержка перед началом процесса получения файла / каталога в миллисекундах |
| Задержка | delay | INT | 500 | Время задержки до следующего получения файла / каталога в миллисекундах |
| Одинаковая задержка независимо от времени | useFixedDelay | BOOL | true | Если используется fixed delay или fixed rate. ScheduledExecutorService JDK для уточнения деталей.Значение по умолчанию true. |
| Уровень протоколирования | runLoggingLevel | SELECT | WARN | точка входа может записывать протоколы работы в лог. Этот параметр позволяет настроить уровень протоколирования. |
| Рекурсивность | recursive | BOOL | false | Если указан true, будет искать файлы во всех подкаталогах. |
| Удалить файл | delete | BOOL | false | Если в true,то файл будет удален после того, как он будет успешно обработан. |
| Только чтение | noop | BOOL | false | Если true,то файл не будет перемещен или удален. Этот вариант хорош только для чтения данных, или для требований типа ETL. По умолчанию файлы перемещаются в директорию .camel. |
| Имя директории/файла перед началом обработки | preMove | STRING | null | Строка или выражение, используется для динамической установки имени директории/файла при его перемещении, прежде чем начать обработку. Например, чтобы переместить файлы находящиеся в обработке, в  каталог order нужно установить это }
значение  в order. |
| Имя директории/файла после обработки | move | STRING | .camel | Строка или выражение используется для динамической установки имени файла при его перемещении, после обработки. Например, чтобы переместить файлы в  каталог .done нужно установить это значение  в .done. |
| Имя директории/файла при ошибке | moveFailed | STRING | null | Строка или выражение используется для динамической установки другого целевого каталога при перемещении файлов обработки.</br>Например, чтобы переместить файлы в .error подкаталог нужно использовать: .error.</br>Примечание : При }
перемещении файлов в «Ошибочную» локацию Брокер обработает ошибку и не подберет файл снова. |
| Регулярное выражение поиска файлов | include | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение исключения файлов | exclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение ANT для поиска файлов | antInclude | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Регулярное выражение ANT для исключения файлов  | antExclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Сделать регулярное выражение ANT чувствительным к регистру | antFilterCaseSensitive | BOOL | true | сделать регулярное выражение ANT чувствительным к регистру. |
| Пропуск уже обработанных файлов | idempotent | BOOL | false | Возможность чтобы брокер пропускал уже обработанные файлы. Будет по умолчанию использовать LRUCache память, которая содержит 1000 записей. Если включен режим Только чтение, Данная опция также будет включена, чтобы избежать потребления }
одних и тех же файлов снова и снова. |
| Уникальный ключ уже обработанных файлов | idempotentKey | STRING | Expression | По умолчанию используется абсолютный путь к файлу. Вы можете использовать имя файла и размер файла, например : ${file:name}-${file:size} |
| Хранилище для хранение ключей обработанных файлов | idempotentRepository | BOOL | false | Присоединяемое хранилище для хранения, использует по умолчанию, MemoryMessageIdRepository если другой не указан и }
Пропуск уже обработанных файлов установлен в true. |
| Учет файлов в процессе обработки | inProgressRepository | STRING | memory | хранилище используется для учета файлов потребляющихся в настоящее время .  |
| Расширенный фильтр | filter | STRING | null | Подключаемый фильтр. Будет пропускать файлы, если фильтр возвращает false в accept() методе.  |
| Фильтр каталогов | filterDirectory | STRING | null | Фильтрует каталоги. Например, для фильтрации по текущей дате, вы можете использовать простой шаблон даты, такой как  ${date:now:yyyMMdd}. |
| Фильтр файлов | filterFile | STRING | null | Фильтрует файлы. Например, чтобы фильтровать по размеру файла, вы можете использовать  ${file}:size > 5000. |
| Случайный порядок | shuffle | BOOL | false | Для того, чтобы перетасовать список файлов (сортировка в случайном порядке). |
| Расширенная сортировка | sorter | STRING | null | Подключаемый сортировщик. |
| Сортировка | sortBy | STRING | null | Встроенная сортировка. Поддерживает вложенность, так что вы можете сортировать по имени файла и сортировать по дате модификации. |
| Блокировка файла | readLock | SELECT | null | Брокер будет ждать, пока файл заблокирован. <ul> Возможны следующие варианты:<li>none не использовать блокировку.</li><li>markerFile Брокер создает файл - маркер, а затем удерживает блокировку на нем.</li><li>changed использует временную отметку длины/модификации для обнаружения копируется ли файл в настоящее время. Будет затрачена по крайней мере 1 сек. чтобы определить это, так что этот вариант не может потреблять файлы так же быстро, как и другие, но будет более надежным.</li><li>fileLock - Такой подход следует избегать при получении доступа к удаленной файловой системе с помощью mount/share, если только файловая система не поддерживает распределенную блокировку файлов(distributed file locks).</li><li>rename попробует переименовать файл в качестве теста,возможно ли получить exclusive read-Lock.</li><li>idempotent для использования  хранилища для хранение ключей обработанных файлов в качестве блокировки. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-changed для использования хранилища для хранение ключей обработанных файлов и изменения в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-rename для использования хранилища для хранение ключей обработанных файлов и переименования в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li></ul><b>Внимание : большинство стратегий блокировки чтения не подходит для использования в кластерном режиме. То есть, вы не можете иметь несколько точек входа пытающихся прочитать тот же файл в том же каталоге. В этом случае блокировка не будет надежно функционировать. Блокировка Idempotent поддерживает кластерный режим, если вы используете идемпотентную  реализацию хранилища с подержкой кластера, например, от Hazelcast Component или Infinispan .</b> |
| Время ожидания блокировки | readLockTimeout | INT | 10000 | Время ожидания в миллисекундах для блокировки файла. Если блокировка не может быть предоставлена и срабатывает тайм - аут, то Брокер пропустит файл. В следующем опросе Брокер, будет пытаться опросить файл снова, и на этот раз, может быть, блокировка будет предоставлена. Значение по умолчанию 10000. |
| Интервал блокировки | readLockCheckInterval | INT | 1000 | Интервал в миллисекундах для блокировки файлов. Этот интервал используется для ожидания между попытками получить блокировку. Например, вы можете установить более высокий интервал для обслуживания медленной записи . Значение по умолчанию 1 сек. может быть слишком быстро, если производитель очень медленно записывает файл. |
| Минимальный размер файла блокировки | readLockMinLength | INT | 1 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет настроить минимальную длину файла. По умолчанию Брокер ожидает, что файл содержит данные, и, таким образом, значение по умолчанию равно 1 . Вы можете установить этот параметр в ноль, чтобы потреблять файлы нулевой длины. |
| Минимальный возраст файла | readLockMinAge | INT | 0 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет указать минимальный возраст файла, прежде чем пытаться получить блокировку. Например, можно использовать  300s для того чтобы потреблять файлы возрастом не менее 5 минут. Это может ускорить опрос, когда файл достаточно стар, так как он будет немедленно получать блокировку. |
| Уровень логирования блокировки файлов | readLockLoggingLevel | SELECT | 0 | Уровень логирования используется, когда блокировка не может быть получена. По умолчанию,. Задается WARN. Вы можете изменить этот уровень, например, на OFF, чтобы отключить какое - либо протоколирования. Эта опция применима только для блокировки типов: changed, fileLock, rename. |
| Использовать маркерный файл для блокировки | readLockMarkerFile | BOOL | true | Следует ли использовать маркерный файл для типов блокировки  changed,rename или exclusive. По умолчанию файл маркера используется также для защиты от других процессов, подбирающих одни и те же файлы. Такое поведение можно отключить, установив эту опцию false.  |
| Удалять записи из хранилища ключей файлов при откате | readLockRemoveOnRollback | BOOL | true | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла из хранилища если обработка файла не удалась, и происходит откат . Если эта опция не установлена, то запись имени файла подтверждается. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockRemoveOnCommit | BOOL | false | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла при успешной обработке файла из идемпотентного  хранилища и фиксация происходит. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockDeleteOrphanLockFiles | BOOL | true | Определяет будут удалены или нет любые потерянные,  read-Lock и маркерные файлы при запуске, которые  возможно, были оставлены в файловой системе, если Брокер не был завершен надлежащим образом (например, аварии JVM). Если настроть в false, то любое осиротевший файл блокировки заставит Брокер не поднимать этот файл. |
| Начать обработку только при наличие директории (рекурсивно) | directoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. работает рекурсивно. |
| Имя финального файла | doneFileName | STRING | null | Если настроено, Брокер будет только потреблять файлы, если финальный файл существует. Эта опция настраивает то, какое имя файла использовать. Либо вы можете задать фиксированное имя. Или вы можете использовать динамические заполнители. финальные файлы всегда ожидаются в той же папке, что и исходные файлы. |
| Максимальное число сообщений в опросе | maxMessagesPerPoll | INT | 0 | Целое число определяющий максимальное число сообщений в опросе. По умолчанию не установлено. Может использоваться, чтобы установить предел, например, 1000 чтобы избежать при запуске сервера наличия тысячи файлов. Установите значение  0 или отрицательное, чтобы отключить его. Другие подробности в Batch Consumer.<br/>Примечание: Если эта опция используется тогда File и FTP компоненты будут ограничены до любой сортировки. Например, если у вас есть 100000 файлов и использовать maxMessagesPerPoll=500, только первые 500 файлы будут подняты, а затем отсортированы. Вы можете использовать опцию "Не выполнять полное сканирование перед опросом" и установить эту  false, чтобы сканировать все файлы, а затем сортировать. |
| Не выполнять полное сканирование перед опросом | eagerMaxMessagesPerPoll | BOOL | true | Установка этой опции false позволяет сортировать файлы, а затем ограничить опрос. Имейте в виду, что это требует использования большего количества памяти, так как все детали файла загружены в память, для выполнения сортировки. |
| Минимальная глубина для начала обработки при рекурсивном обработке каталога | minDepth | INT | 0 | Минимальная глубина для начала обработки при рекурсивном обработке каталога. Использование minDepth=1 означает базовый каталог. Использование minDepth=2 означает первый подкаталог. Эта опция поддерживается FTP потребителем. |
| Максимальная глубина для обхода при рекурсивной обработке каталога | maxDepth | INT | 0 | Максимальная глубина для обхода при рекурсивной обработке каталога. Эта опция поддерживается FTP потребителем. |
| Начать обработку только при наличие директории | startingDirectoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. |
| Отправлять пустые сообщения в состоянии простоя | sendEmptyMessageWhenIdle | BOOL | false | Если опрашивающий потребитель не отправил файлы, вы можете включить эту опцию, чтобы отправлять пустые сообщения (nobody). |
| Обрабатывать ошибки брокером | consumer.bridgeErrorHandler | BOOL | false | Позволяет привязать потребителя к обработчику ошибок (ErrorHandler) маршрутизируемого Брокером, для того чтобы любые ошибки  произошедшие при подъеме файлов, обрабатывались в виде сообщения и маршрутизировались обработчиком ошибок. По умолчанию потребитель будет использовать  org.apache.camel.spi.ExceptionHandler, чтобы справиться с ошибками, которые по умолчанию будут записываться на уровне  WARN/ ERROR и игнорироваться. |
| Определение типа содержимого | probeContentType | BOOL | false | Включает зондирование типа содержимого. Если включить, то потребитель использует Files#probeContentType(java.nio.file.Path) для определения типа содержимого файла, и хранить в качестве заголовка с ключом Exchange#FILE_CONTENT_TYPE на сообщении. |
| Действие если файл уже существует | fileExist | SELECT | Override | Что делать, если файл уже существует с тем же именем. Следующие значения могут быть указаны: Override заменяет существующий файл, Append добавляет содержимое в существующий файл, Fail выдает GenericFileOperationException показывая, что есть уже существующий файл, Ignore  игнорирует проблему и не перезаписывает существующий файл, но предполагает, что все в порядке, Move требует, чтобы опция moveExisting была настроена тоже. EagerDeleteTargetFile может быть использован для контроля действий, если переместить файл, а там уже существует файл, в противном случае операцию перемещения будет неуспешна. Move опция будет перемещать любые существующие файлы, перед записью целевого файла. TryRename применима, только если tempFileName опция используется. Позволяет попробовать переименовать файл из временного имени на фактическое имя, не делая какой - либо проверки существования. Эта проверка может быть быстрее на некоторых файловых системах.  |
| Временной префикс файла во время записи | tempPrefix | STRING | null | Эта опция используется для записи файла, используя временное имя, а затем, после завершения записи можно переименовать его. Может использоваться для идентификации файлов в процессе записи, а также для избегания потребителей (не используется FTP при загрузке больших файлов. |
| Имя временного файла | tempFileName | STRING | null | Тоже что и tempPrefix настройка, но предлагает более тонкий контроль над именованием временного файла,так как он использует File Language. |
| Имя перемещенного файла | moveExisting | STRING | null | Expression (например, File Language ), используется для вычисления имени файла, которое используется при сконфигурированном fileExist=Move. Чтобы переместить файлы в backup подкаталог просто введите backup. Этот параметр поддерживает только следующий File Language токены: file:name, file:name.ext, file:name.noext, file:onlyname, file:onlyname.noext, file:ext, file:parent Примечание : file:parent маркер не поддерживает FTP - компонент, который может только перемещать файлы в директории относительно текущего каталога. |
| Сохранять временную метку файла | keepLastModified | BOOL | false | Будет отображать последнюю измененную временную метку из исходного файла (если таковой имеется). Будет использовать Exchange.FILE_LAST_MODIFIED заголовок найденной метки. Этот заголовок может содержать либо java.util.Date или long с отметкой времени. Если временная метка существует и опция включена она будет отображать  эту временную метку в записанном файле. |
| Удаление целевого файла перед началом записи | eagerDeleteTargetFile | BOOL | true | Включает удаление любого существующего целевого файла. Этот параметр применяется только при использовании fileExists=Override и tempFileName настроек. Вы можете использовать эту настройку, чтобы отключить (установить его false) удаление целевого файла до того, как временный файл будет записан. Например, вы можете записывать большие файлы и хотите чтобы целевой файл существовал пока временный файл записывается. Это гарантирует, что целевой файл удалится только в самый последний момент, как раз перед тем,как временный файл переименуется целевым именем файла. Эту настройку также используют для управления удалением существующих файлов, когда fileExist=Move включен, и существующий файл существует. Если этот параметр copyAndDeleteOnRenameFail установлен в false, то будет выведена ошибка, если существующий файл существует. Когда true существующий файл будет удален до операции перемещения. |
| Имя файла после завершения записи целевого файла на диск | doneFileName | STRING | null | Если установлен, то Брокер будет писать второй файл (называемый done файл), когда исходный файл будет записан. Done файл будет пустым. Эта опция настраивает то, какое имя файла использовать. Вы можете задать фиксированное имя или можете использовать динамические заполнители. Done файл будет всегда записываться в той же папке, что и исходный файл.  |
| Разрешить нулевое тело файла | allowNullBody | BOOL | false | Используется для указания, разрешено ли нулевое тело во время записи файла. Если установлено значение true, то пустой файл будет создан, когда установлен в false, и пытается отправить пустое тело файловому компоненту, появляется GenericFileWriteException сообщение «Невозможно записать нулевое тело в файл». Если fileExist=Override файл будет перезаписан. Если fileExist=append файл будет оставаться неизменным. |
| Включить синхронизацию записи в файловую систему | forceWrites | BOOL | true | Включает синхронизацию записи в файловую систему. Вы можете отключить эту настройку, если не хотите такого уровня гарантии, например, если пишутся журналы аудита и т.д.; это даст лучшую производительность. |
| Права доступа файла | chmod | INT | null | Указывает разрешения файла, который отправляется от продюсера.Значение CHMOD должно быть между 000 и 777. |
| Права доступа каталога | chmodDirectory | INT | null | Указывает используемые разрешения директории когда продюсер создает недостающие каталоги, значение CHMOD должно быть между 000 и 777. |


OutFTPEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Имя пользователя | username | STRING | null | Задает имя пользователя, для использования в удаленной файловой системе. Если имя пользователя не задано, то будет предпринята анонимная попытка входа. |
| Пароль | password | STRING | null | Задает пароль для использования в удаленной файловой системе. |
| Аккаунт | account | STRING | null | Аккаунт для входа на удаленный FTP - сервер |
| Режим передачи файлов | binary | BOOL | false | Задает режим передачи файлов, BINARY или ASCII. По умолчанию ASCII (false). |
| Отключиться | disconnect | BOOL | false | Отключиться или нет от удаленного сервера FTP сразу после использования. Может использоваться как для потребителя, так  и  для продюсера. Настройка только отключит текущее подключение к FTP - серверу. Если у вас есть потребитель ,который вы хотите остановить, тогда следует остановить потребитель / маршрут вместо этого. |
| Локальный рабочий каталог | localWorkDirectory | STRING | null | При потреблении, локальный рабочий каталог может быть использован для хранения содержимого удаленного файла непосредственно в локальных файлах, чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. Если имя директории указывается без косой черты (например: directoryName), то она будет создана (если отсутствует) в домашней директории Factor ESB, иначе по указанному пути в файловой системе., чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. |
| Пассивный режим соединения | passiveMode | BOOL | false | Указывает, следует ли использовать пассивный режим соединения. По умолчанию active mode (false). |
| Загрузить файл | download | BOOL | true | Должен ли FTP потребитель загрузить файл. Если этот параметр установлен false, то тело сообщения будет null, но потребитель все равно будет вызывать Camel Exchange, который содержит информацию о файле , например, имя файла, размер файла и т.д.. |
| Потоковая Загрузка | streamDownload | BOOL | false | Должен ли FTP потребитель загружать файл целиком (поведение по умолчанию) или частично, используя входной поток. Эта опция игнорируется, если опция «Загрузить файл» false или используется опция «Локальный рабочий каталог». Для работы этой опции неоходимо следующее:  «Пассивный режим соединения» true и  FTP сервер должен поддерживать пассивный режим с потоковой загрузкой. Полезна для работы с большими удаленными файлами. |
| Проверка существования файла | fastExistsCheck | BOOL | false | Если установлен этот параметр в true, Брокер-FTP будет использовать файл список непосредственно, чтобы проверить, существует ли файл. Поскольку некоторые FTP - серверы не поддерживают прямую проверку, если опция ложна, Брокер-FTP будет использовать старый способ перечислить каталоги и проверить, существует ли файл. Этот параметр также влияет на управление readLock=changed. Это может быть использовано для ускорения процесса , если сервер FTP имеет много файлов. |
| Максимальное кол-во попыток переподключений | maximumReconnectAttempts | INT | 3 | Задает максимальное кол-во попыток переподключений которое Брокер произведет, пытаясь подключиться к удаленному серверу FTP. Используйте 0, чтобы отключить это поведение. |
| Задержка переподключения | reconnectDelay | INT | 1000 | Задержка в Миллисекундах перед выполнением попытки повторного подключения. |
| Таймаут соединения | connectTimeout | INT | 10000 | Таймаут соединения в Миллисекундах . Это соответствует использованию ftpClient.connectTimeout для FTP / FTPS. Для SFTP эта опция также используется при попытке подключения. |
| Значение таймаута  | soTimeout | INT | 300000 | SocketOptions.SO_TIMEOUT Значение таймаута в Миллисекундах. Задается как, например, 300000 (5 минут), чтобы не повесить соединение. На SFTP этот параметр установлен в качестве тайм - аута на JSch сессии. |
| Таймаут соединения FTP и FTPS  | timeout | INT | 30000 | Таймаут соединения в Миллисекундах. Это соответствует использованию ftpClient.dataTimeout для FTP / FTPS. Для SFTP нет тайм - аута. |
| Выводить ошибку при не успешном соединении | throwExceptionOnConnectFailed | BOOL | false | Указывает выводить ли ошибку в том ,случае если успешное соединение не может быть установлено. Это позволяет pollStrategy отработать с  исключением, например , чтобы остановить потребитель. |
| Команды сайта | siteCommand | STRING | null | Для выполнения команд сайта после успешного входа в систему. Несколько команд сайта могут быть разделены с помощью символа новой строки (
). Используйте, help site чтобы увидеть, какие команды поддерживает ваш сервер FTP. |
| Поэтапный просмотр | stepwise | BOOL | true | Указывает следует использовать поэтапный просмотр каталогов или нет. Поэтапное означает , что  будет просматривать один каталог за раз.  |
| Разделитель пути | separator | SELECT | UNIX | Определяет, какой разделитель пути, используется при загрузке файлов. Auto = оставляет предоставленный разделитель пути без изменений. UNIX = Использование разделителей UNIX. Windows = Использование разделителей Windows. |
| Размер приемного буфера | receiveBufferSize | INT | 32768 | Размер буфера для загрузки файлов. Размер по умолчанию 32кб. |
| Ftp клиент | ftpClient.xxx | CONFIG | null | Позволяет использовать клиент org.apache.commons.net.ftp.FTPClient. |
| Конфигурация Ftp клиента | ftpClientConfig | BEAN | null | Позволяет использовать клиент org.apache.commons.net.ftp.FTPClientConfig. |
| Настройка параметров клиента | ftpClientConfig.xxx | CONFIG | null | Для того, чтобы настроить различные параметры клиента FTPClient (URI). Например: ftpClientConfig.receiveDataSocketBufferSize=8192 & ftpClientConfig.sendDataSocketBufferSize=8192 |
| Использовать для получения списка каталогов | useList | BOOL | true | Указывает должен ли потребитель использовать команду FTP LIST, чтобы получить список каталогов, чтобы увидеть, какие файлы существует. Если этот параметр установлен false, то также должен быть настроен поэтапный просмотр=false, а также fileName должен быть настроен на фиксированное имя, так чтобы потребитель знал имя файла для извлечения. |
| Игнорировать не найденный файл или ошибки доступа | ignoreFileNotFoundOrPermissionError | BOOL | false | Указывает должен ли потребитель игнорировать ошибки,когда пытается получить файл, который не существует (по каким-то причинам), или ошибки разрешения доступа. Также эта опция работает и с  каталогами. |
| Пустая команда | sendNoop | BOOL | true | Указывает отправлять или нет  (Пустая команда)команду Noop в качестве предваряющей запись  проверки перед загрузкой файлов на FTP - сервер. По умолчанию включено в качестве проверки соединения, и переподключиться , чтобы иметь возможность загрузить файл. |
| Завершать соединение по окончанию обработки партии | disconnectOnBatchComplete | BOOL | false | Указывает  отключиться ли от удаленного сервера FTP после завершения пакета Batch . Может использоваться как для потребителя и производителя. Отключение только закроет текущее подключение к FTP - серверу.  |
| Диапазон портов в активном режиме | activePortRange | STRING | null | Установите диапазон портов на клиентской стороне в активный режиме. Синтаксис: minPort - maxPort. Например , 10000-19999 , чтобы включить весь диапазон, т.е 1xxxx портов. |


OutFTPSEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Имя пользователя | username | STRING | null | Задает имя пользователя, для использования в удаленной файловой системе. Если имя пользователя не задано, то будет предпринята анонимная попытка входа. |
| Пароль | password | STRING | null | Задает пароль для использования в удаленной файловой системе. |
| Аккаунт | account | STRING | null | Аккаунт для входа на удаленный FTP - сервер |
| Режим передачи файлов | binary | BOOL | false | Задает режим передачи файлов, BINARY или ASCII. По умолчанию ASCII (false). |
| Отключиться | disconnect | BOOL | false | Отключиться или нет от удаленного сервера FTP сразу после использования. Может использоваться как для потребителя, так  и  для продюсера. Настройка только отключит текущее подключение к FTP - серверу. Если у вас есть потребитель ,который вы хотите остановить, тогда следует остановить потребитель / маршрут вместо этого. |
| Локальный рабочий каталог | localWorkDirectory | STRING | null | При потреблении, локальный рабочий каталог может быть использован для хранения содержимого удаленного файла непосредственно в локальных файлах, чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. Если имя директории указывается без косой черты (например: directoryName), то она будет создана (если отсутствует) в домашней директории Factor ESB, иначе по указанному пути в файловой системе., чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. |
| Пассивный режим соединения | passiveMode | BOOL | false | Указывает, следует ли использовать пассивный режим соединения. По умолчанию active mode (false). |
| Протокол безопасности | securityProtocol | STRING | TLS | Устанавливает протокол безопасности. Следующие значения определены: TLS: Transport Layer Security, SSL: Secure Sockets Layer |
| Отключить использование значений по умолчанию безопасной передачи данных | disableSecureDataChannelDefaults | BOOL | false | Отключать или нет  использование значений по умолчанию execPbsz и "Тип протокола FTPS" при использовании безопасной передачи данных. Вы можете установить эту опцию в true если вы хотите полностью контролировать опции execPbsz и "Тип протокола FTPS". |
| Загрузить файл | download | BOOL | true | Должен ли FTP потребитель загрузить файл. Если этот параметр установлен false, то тело сообщения будет null, но потребитель все равно будет вызывать Camel Exchange, который содержит информацию о файле , например, имя файла, размер файла и т.д.. |
| Потоковая Загрузка | streamDownload | BOOL | false | Должен ли FTP потребитель загружать файл целиком (поведение по умолчанию) или частично, используя входной поток. Эта опция игнорируется, если опция «Загрузить файл» false или используется опция «Локальный рабочий каталог». Для работы этой опции неоходимо следующее:  «Пассивный режим соединения» true и  FTP сервер должен поддерживать пассивный режим с потоковой загрузкой. Полезна для работы с большими удаленными файлами. |
| Тип протокола FTPS | execProt | STRING | null | По умолчанию использует P , если secure data channel по умолчанию не был отключен. Возможные значения: C: Clear, S: Safe(Протокол SSL), E: (Протокол SSL), Confidential P: Private |
| Размер буфера защищенного канала передачи данных | execPbsz | STRING | null | Этот параметр определяет размер буфера защищенного канала передачи данных. Если опция useSecureDataChannel включена, и эта опция не была установлена, то используется значение 0. |
| Устанавливает режим защиты | isImplicit | BOOL | false | Устанавливает режим защиты (Implicit / explicit). По умолчанию является explicit (false). |
| Проверка существования файла | fastExistsCheck | BOOL | false | Если установлен этот параметр в true, Брокер-FTP будет использовать файл список непосредственно, чтобы проверить, существует ли файл. Поскольку некоторые FTP - серверы не поддерживают прямую проверку, если опция ложна, Брокер-FTP будет использовать старый способ перечислить каталоги и проверить, существует ли файл. Этот параметр также влияет на управление readLock=changed. Это может быть использовано для ускорения процесса , если сервер FTP имеет много файлов. |
| Максимальное кол-во попыток переподключений | maximumReconnectAttempts | INT | 3 | Задает максимальное кол-во попыток переподключений которое Брокер произведет, пытаясь подключиться к удаленному серверу FTP. Используйте 0, чтобы отключить это поведение. |
| Задержка переподключения | reconnectDelay | INT | 1000 | Задержка в Миллисекундах перед выполнением попытки повторного подключения. |
| Таймаут соединения | connectTimeout | INT | 10000 | Таймаут соединения в Миллисекундах . Это соответствует использованию ftpClient.connectTimeout для FTP / FTPS. Для SFTP эта опция также используется при попытке подключения. |
| Значение таймаута  | soTimeout | INT | 300000 | SocketOptions.SO_TIMEOUT Значение таймаута в Миллисекундах. Задается как, например, 300000 (5 минут), чтобы не повесить соединение. На SFTP этот параметр установлен в качестве тайм - аута на JSch сессии. |
| Таймаут соединения FTP и FTPS  | timeout | INT | 30000 | Таймаут соединения в Миллисекундах. Это соответствует использованию ftpClient.dataTimeout для FTP / FTPS. Для SFTP нет тайм - аута. |
| Выводить ошибку при не успешном соединении | throwExceptionOnConnectFailed | BOOL | false | Указывает выводить ли ошибку в том ,случае если успешное соединение не может быть установлено. Это позволяет pollStrategy отработать с  исключением, например , чтобы остановить потребитель. |
| Команды сайта | siteCommand | STRING | null | Для выполнения команд сайта после успешного входа в систему. Несколько команд сайта могут быть разделены с помощью символа новой строки (
). Используйте, help site чтобы увидеть, какие команды поддерживает ваш сервер FTP. |
| Поэтапный просмотр | stepwise | BOOL | true | Указывает следует использовать поэтапный просмотр каталогов или нет. Поэтапное означает , что  будет просматривать один каталог за раз.  |
| Разделитель пути | separator | SELECT | UNIX | Определяет, какой разделитель пути, используется при загрузке файлов. Auto = оставляет предоставленный разделитель пути без изменений. UNIX = Использование разделителей UNIX. Windows = Использование разделителей Windows. |
| Размер приемного буфера | receiveBufferSize | INT | 32768 | Размер буфера для загрузки файлов. Размер по умолчанию 32кб. |
| Ftp клиент | ftpClient.xxx | CONFIG | null | Позволяет использовать клиент org.apache.commons.net.ftp.FTPClient. |
| Конфигурация Ftp клиента | ftpClientConfig | BEAN | null | Позволяет использовать клиент org.apache.commons.net.ftp.FTPClientConfig. |
| Настройка параметров клиента | ftpClientConfig.xxx | CONFIG | null | Для того, чтобы настроить различные параметры клиента FTPClient (URI). Например: ftpClientConfig.receiveDataSocketBufferSize=8192 & ftpClientConfig.sendDataSocketBufferSize=8192 |
| Файл хранилище доверенных сертификатов | ftpClient.trustStore.file | STRING | null | Устанавливает файл хранилище доверенных сертификатов, так что клиент FTPS может искать доверенные сертификаты. |
| Тип хранилища доверенных сертификатов | ftpClient.trustStore.type | STRING | JKS | Устанавливает тип хранилища доверенных сертификатов. |
| Алгоритм хранилища доверенных сертификатов | ftpClient.trustStore.algorithm | STRING | SunX509 | Устанавливает алгоритм хранилища доверенных сертификатов. |
| Пароль хранилища доверенных сертификатов | ftpClient.trustStore.password | STRING | null | Устанавливает пароль хранилища доверенных сертификатов. |
| Файл хранилища ключей | ftpClient.keyStore.file | STRING | null | Устанавливает файл хранилища ключей, так что клиент FTPS может искать свой личный сертификата. |
| Тип хранилища ключей | ftpClient.keyStore.type | STRING | JKS | Устанавливает тип хранилища ключей. |
| Алгоритм хранилища ключей | ftpClient.keyStore.algorithm | STRING | SunX509 | Устанавливает алгоритм хранилища ключей. |
| Пароль хранилища ключей | ftpClient.keyStore.password | STRING | null | Устанавливает пароль хранилища ключей. |
| Пароль личного ключа | ftpClient.keyStore.keyPassword | STRING | null | Устанавливает пароль личного ключа. |
| Ссылка на параметры SSL контекста | sslContextParameters | BEAN | null | Ссылка на org.apache.camel.util.jsse.SSLContextParameters в реестре. Эта ссылка заменяет любые сконфигурированные параметры SSL на ftpClient, а также securityProtocol (SSL, TLS и т.д.) , установленный на FtpsConfiguration. См использование конфигурационной утилиты JSSE. |
| Использовать для получения списка каталогов | useList | BOOL | true | Указывает должен ли потребитель использовать команду FTP LIST, чтобы получить список каталогов, чтобы увидеть, какие файлы существует. Если этот параметр установлен false, то также должен быть настроен поэтапный просмотр=false, а также fileName должен быть настроен на фиксированное имя, так чтобы потребитель знал имя файла для извлечения. |
| Игнорировать не найденный файл или ошибки доступа | ignoreFileNotFoundOrPermissionError | BOOL | false | Указывает должен ли потребитель игнорировать ошибки,когда пытается получить файл, который не существует (по каким-то причинам), или ошибки разрешения доступа. Также эта опция работает и с  каталогами. |
| Пустая команда | sendNoop | BOOL | true | Указывает отправлять или нет  (Пустая команда)команду Noop в качестве предваряющей запись  проверки перед загрузкой файлов на FTP - сервер. По умолчанию включено в качестве проверки соединения, и переподключиться , чтобы иметь возможность загрузить файл. |
| Завершать соединение по окончанию обработки партии | disconnectOnBatchComplete | BOOL | false | Указывает  отключиться ли от удаленного сервера FTP после завершения пакета Batch . Может использоваться как для потребителя и производителя. Отключение только закроет текущее подключение к FTP - серверу.  |
| Диапазон портов в активном режиме | activePortRange | STRING | null | Установите диапазон портов на клиентской стороне в активный режиме. Синтаксис: minPort - maxPort. Например , 10000-19999 , чтобы включить весь диапазон, т.е 1xxxx портов. |


OutSFTPEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Имя пользователя | username | STRING | null | Задает имя пользователя, для использования в удаленной файловой системе. Если имя пользователя не задано, то будет предпринята анонимная попытка входа. |
| Пароль | password | STRING | null | Задает пароль для использования в удаленной файловой системе. |
| Режим передачи файлов | binary | BOOL | false | Задает режим передачи файлов, BINARY или ASCII. По умолчанию ASCII (false). |
| Отключиться | disconnect | BOOL | false | Отключиться или нет от удаленного сервера FTP сразу после использования. Может использоваться как для потребителя, так  и  для продюсера. Настройка только отключит текущее подключение к FTP - серверу. Если у вас есть потребитель ,который вы хотите остановить, тогда следует остановить потребитель / маршрут вместо этого. |
| Локальный рабочий каталог | localWorkDirectory | STRING | null | При потреблении, локальный рабочий каталог может быть использован для хранения содержимого удаленного файла непосредственно в локальных файлах, чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. Если имя директории указывается без косой черты (например: directoryName), то она будет создана (если отсутствует) в домашней директории Factor ESB, иначе по указанному пути в файловой системе., чтобы избежать загрузки содержимого в память. Это полезно, если вы потребляете очень большой удаленный файл. Если имя директории указывается без косой черты (например: directoryName), то она будет создана (если отсутствует) в домашней директории Factor ESB, иначе по указанному пути в файловой системе. |
| Загрузить файл | download | BOOL | true | Должен ли FTP потребитель загрузить файл. Если этот параметр установлен false, то тело сообщения будет null, но потребитель все равно будет вызывать Camel Exchange, который содержит информацию о файле , например, имя файла, размер файла и т.д.. |
| Потоковая Загрузка | streamDownload | BOOL | false | Должен ли FTP потребитель загружать файл целиком (поведение по умолчанию) или частично, используя входной поток. Эта опция игнорируется, если опция «Загрузить файл» false или используется опция «Локальный рабочий каталог». Для работы этой опции неоходимо следующее:  «Пассивный режим соединения» true и  FTP сервер должен поддерживать пассивный режим с потоковой загрузкой. Полезна для работы с большими удаленными файлами. |
| Файл Известных хостов (известные хосты) | knownHostsFile | STRING | null | Устанавливает known_hosts файл, так что SFTP конечная точка может сделать у себя верификацию ключа. |
| Использовать файл известных хостов. | useUserKnownHostsFile | BOOL | true | Если knownHostFile не был явно настроен, использовать хост - файл из System.getProperty (user.home) / SSH / known_hosts. |
| URI известных Хостов | knownHostsUri | STRING | null | Устанавливает known_hosts файл (загруженный из пути к классам по умолчанию), так что конечная точка SFTP может сделать у себя верификацию ключа. |
| Пара ключей | keyPair | SELECT | null | Установка Java - KeyPair для SSH аутентификации с открытым ключом, он поддерживает ключи DSA или RSA. |
| Файл закрытого ключа | privateKeyFile | STRING | null |  Устанавливает файл закрытого ключа так, что конечная точка SFTP может сделать проверку секретного ключа. |
| Файл закрытого ключа (URI) | privateKeyUri | STRING | null | Устанавливает файл закрытого ключа (загруженный из пути к классам по умолчанию) так, что конечная точка SFTP может сделать проверку секретного ключа. |
| Закрытый ключ | privateKey | STRING | null | Устанавливает закрытый ключ, как Byte[] так, что конечная точка SFTP может сделать проверку секретного ключа. |
| Пароль-фраза индивидуального ключа | privateKeyPassphrase | STRING | null | Устанавливает файл пароль-фразу индивидуального ключа так, что конечная точка SFTP может  сделать проверку секретного ключа. |
| Список шифров | ciphers | STRING | null | Указывает разделенный запятыми список шифров, которые будут использоваться в порядке предпочтения. Возможные шифров имена определяются JCraft JSch. Некоторые примеры включают в себя: AES128-CRT, AES128-CBC, 3DES-CRT, 3DES-CBC, Blowfish-CBC, aes192-CBC, AES256-CBC. Если не указано , будет использоваться список по умолчанию из JSch. |
| Проверка существования файла | fastExistsCheck | BOOL | false | Если установлен этот параметр в true, Брокер-FTP будет использовать файл список непосредственно, чтобы проверить, существует ли файл. Поскольку некоторые FTP - серверы не поддерживают прямую проверку, если опция ложна, Брокер-FTP будет использовать старый способ перечислить каталоги и проверить, существует ли файл. Этот параметр также влияет на управление readLock=changed. Это может быть использовано для ускорения процесса , если сервер FTP имеет много файлов. |
| Строгая проверка ключа хоста | strictHostKeyChecking | SELECT | NO | Указывает использовать ли строгую проверку ключа хоста. Возможные значения: no, yes и ask. |
| Максимальное кол-во попыток переподключений | maximumReconnectAttempts | INT | 3 | Задает максимальное кол-во попыток переподключений которое Брокер произведет, пытаясь подключиться к удаленному серверу FTP. Используйте 0, чтобы отключить это поведение. |
| Задержка переподключения | reconnectDelay | INT | 1000 | Задержка в Миллисекундах перед выполнением попытки повторного подключения. |
| Таймаут соединения | connectTimeout | INT | 10000 | Таймаут соединения в Миллисекундах . Это соответствует использованию ftpClient.connectTimeout для FTP / FTPS. Для SFTP эта опция также используется при попытке подключения. |
| Значение таймаута  | soTimeout | INT | 300000 | SocketOptions.SO_TIMEOUT Значение таймаута в Миллисекундах. Задается как, например, 300000 (5 минут), чтобы не повесить соединение. На SFTP этот параметр установлен в качестве тайм - аута на JSch сессии. |
| Выводить ошибку при не успешном соединении | throwExceptionOnConnectFailed | BOOL | false | Указывает выводить ли ошибку в том ,случае если успешное соединение не может быть установлено. Это позволяет pollStrategy отработать с  исключением, например , чтобы остановить потребитель. |
| Поэтапный просмотр | stepwise | BOOL | true | Указывает следует использовать поэтапный просмотр каталогов или нет. Поэтапное означает , что  будет просматривать один каталог за раз.  |
| Разделитель пути | separator | SELECT | UNIX | Определяет, какой разделитель пути, используется при загрузке файлов. Auto = оставляет предоставленный разделитель пути без изменений. UNIX = Использование разделителей UNIX. Windows = Использование разделителей Windows. |
| Права доступа | chmod | INT | null | Позволяет установить CHMOD на хранящийся файл. К примеру 640. |
| Сжатие | compression | STRING | 0 | Для того, чтобы использовать сжатие. Укажите уровень от 1 до 10. Важно: Вы должны вручную добавить необходимые JSch ZLIB JAR  для поддержки сжатия. |
| Установка интервала поддержки соединения | serverAliveInterval | INT | 0 | Позволяет установить ServerAliveInterval на SFTP сессии. |
| Установка максимального кол-ва сообщений поддержки соединения | serverAliveCountMax | BEAN | 1 | Позволяет установить serverAliveCountMax на SFTP сессии. |
| Прокси | proxy | STRING | null | Ссылка на com.jcraft.jsch.Proxy в реестре. Этот прокси используется для потребления/отправки сообщений от целевого SFTP хоста. |
| Игнорировать не найденный файл или ошибки доступа | ignoreFileNotFoundOrPermissionError | BOOL | false | Указывает должен ли потребитель игнорировать ошибки,когда пытается получить файл, который не существует (по каким-то причинам), или ошибки разрешения доступа. Также эта опция работает и с  каталогами. |
| Пустая команда | sendNoop | BOOL | true | Указывает отправлять или нет  (Пустая команда)команду Noop в качестве предваряющей запись  проверки перед загрузкой файлов на FTP - сервер. По умолчанию включено в качестве проверки соединения, и переподключиться , чтобы иметь возможность загрузить файл. |
| Уровень протоколирования jsch | jschLoggingLevel | SELECT | WARN | Уровень протоколирования использующийся для регистрации активности JSch.Допустимы значения INFO, WARN по умолчанию. |
| Объем запросов | bulkRequest | INT | null | Указывает, сколько запросов могут ожидать выполнения в любой момент времени. Увеличение этого значения может немного увеличить скорость передачи файлов , но и увеличит использование памяти. |
| Завершать соединение по окончанию обработки партии | disconnectOnBatchComplete | BOOL | false | Указывает  отключиться ли от удаленного сервера FTP после завершения пакета Batch . Может использоваться как для потребителя и производителя. Отключение только закроет текущее подключение к FTP - серверу.  |
| Диапазон портов в активном режиме | activePortRange | STRING | null | Установите диапазон портов на клиентской стороне в активный режиме. Синтаксис: minPort - maxPort. Например , 10000-19999 , чтобы включить весь диапазон, т.е 1xxxx портов. |


OutSmbEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Пароль | password | STRING | false | Пароль пользователя. |
| Автоматическое создание директорий | autoCreate | BOOL | true | Автоматически создает недостающие каталоги в пути к файлу .Создает начальный каталог для потребителя файла. Для производителя файла, это означает каталог в который должны быть записаны файлы . |
| Размер буфера  | bufferSize | STRING | 128 | Буфер записи с заданным размером в байтах. |
| Имя файла | fileName | STRING | null | Возможно использование выражения для динамической установки имени файла, оно имеет преимущество над заголовком. Для точки входа имя файла используется как фильтр, вы например можете потреблять файлы созданные сегодня, используя синтаксис файлового языка: mydata-${date:now:yyyyMMdd}.txt. В случае точки выхода будет создан файл с указанным именем, если в точку выхода передается несколько сообщений, то файл каждый раз будет переписан. |
| Обрезка пути к файлу | flatten | BOOL | false | Используется для обрезки пути к файл, так что остается просто имя файла. Это позволяет потреблять файлы рекурсивно в подкаталогах. |
| Кодировка файла | charset | STRING | null | Этот параметр используется для указания кодировки файла.  |
| Копирование с удалением при ошибке переименования | copyAndDeleteOnRenameFail | BOOL | true | Указывает делать ли резервную копию и удалить оригинальный файл, в случае, если файл не может быть переименован напрямую.  |
| Копирование с удалением в место переименования | renameUsingCopy | BOOL | false | Выполнение копирования и удаления в место операции переименования. Эта настройка имеет приоритет над параметром Копирование с удалением при ошибке переименования. |
| Первоначальная задержка | initialDelay | INT | 1000 | Задержка перед началом процесса получения файла / каталога в миллисекундах |
| Задержка | delay | INT | 500 | Время задержки до следующего получения файла / каталога в миллисекундах |
| Одинаковая задержка независимо от времени | useFixedDelay | BOOL | true | Если используется fixed delay или fixed rate. ScheduledExecutorService JDK для уточнения деталей.Значение по умолчанию true. |
| Уровень протоколирования | runLoggingLevel | SELECT | WARN | точка входа может записывать протоколы работы в лог. Этот параметр позволяет настроить уровень протоколирования. |
| Рекурсивность | recursive | BOOL | false | Если указан true, будет искать файлы во всех подкаталогах. |
| Удалить файл | delete | BOOL | false | Если в true,то файл будет удален после того, как он будет успешно обработан. |
| Только чтение | noop | BOOL | false | Если true,то файл не будет перемещен или удален. Этот вариант хорош только для чтения данных, или для требований типа ETL. По умолчанию файлы перемещаются в директорию .camel. |
| Имя директории/файла перед началом обработки | preMove | STRING | null | Строка или выражение, используется для динамической установки имени директории/файла при его перемещении, прежде чем начать обработку. Например, чтобы переместить файлы находящиеся в обработке, в  каталог order нужно установить это }
значение  в order. |
| Имя директории/файла после обработки | move | STRING | .camel | Строка или выражение используется для динамической установки имени файла при его перемещении, после обработки. Например, чтобы переместить файлы в  каталог .done нужно установить это значение  в .done. |
| Имя директории/файла при ошибке | moveFailed | STRING | null | Строка или выражение используется для динамической установки другого целевого каталога при перемещении файлов обработки.</br>Например, чтобы переместить файлы в .error подкаталог нужно использовать: .error.</br>Примечание : При }
перемещении файлов в «Ошибочную» локацию Брокер обработает ошибку и не подберет файл снова. |
| Регулярное выражение поиска файлов | include | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение исключения файлов | exclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение ANT для поиска файлов | antInclude | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Регулярное выражение ANT для исключения файлов  | antExclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Сделать регулярное выражение ANT чувствительным к регистру | antFilterCaseSensitive | BOOL | true | сделать регулярное выражение ANT чувствительным к регистру. |
| Пропуск уже обработанных файлов | idempotent | BOOL | false | Возможность чтобы брокер пропускал уже обработанные файлы. Будет по умолчанию использовать LRUCache память, которая содержит 1000 записей. Если включен режим Только чтение, Данная опция также будет включена, чтобы избежать потребления }
одних и тех же файлов снова и снова. |
| Уникальный ключ уже обработанных файлов | idempotentKey | STRING | Expression | По умолчанию используется абсолютный путь к файлу. Вы можете использовать имя файла и размер файла, например : ${file:name}-${file:size} |
| Хранилище для хранение ключей обработанных файлов | idempotentRepository | BOOL | false | Присоединяемое хранилище для хранения, использует по умолчанию, MemoryMessageIdRepository если другой не указан и }
Пропуск уже обработанных файлов установлен в true. |
| Учет файлов в процессе обработки | inProgressRepository | STRING | memory | хранилище используется для учета файлов потребляющихся в настоящее время .  |
| Расширенный фильтр | filter | STRING | null | Подключаемый фильтр. Будет пропускать файлы, если фильтр возвращает false в accept() методе.  |
| Фильтр каталогов | filterDirectory | STRING | null | Фильтрует каталоги. Например, для фильтрации по текущей дате, вы можете использовать простой шаблон даты, такой как  ${date:now:yyyMMdd}. |
| Фильтр файлов | filterFile | STRING | null | Фильтрует файлы. Например, чтобы фильтровать по размеру файла, вы можете использовать  ${file}:size > 5000. |
| Случайный порядок | shuffle | BOOL | false | Для того, чтобы перетасовать список файлов (сортировка в случайном порядке). |
| Расширенная сортировка | sorter | STRING | null | Подключаемый сортировщик. |
| Сортировка | sortBy | STRING | null | Встроенная сортировка. Поддерживает вложенность, так что вы можете сортировать по имени файла и сортировать по дате модификации. |
| Блокировка файла | readLock | SELECT | null | Брокер будет ждать, пока файл заблокирован. <ul> Возможны следующие варианты:<li>none не использовать блокировку.</li><li>markerFile Брокер создает файл - маркер, а затем удерживает блокировку на нем.</li><li>changed использует временную отметку длины/модификации для обнаружения копируется ли файл в настоящее время. Будет затрачена по крайней мере 1 сек. чтобы определить это, так что этот вариант не может потреблять файлы так же быстро, как и другие, но будет более надежным.</li><li>fileLock - Такой подход следует избегать при получении доступа к удаленной файловой системе с помощью mount/share, если только файловая система не поддерживает распределенную блокировку файлов(distributed file locks).</li><li>rename попробует переименовать файл в качестве теста,возможно ли получить exclusive read-Lock.</li><li>idempotent для использования  хранилища для хранение ключей обработанных файлов в качестве блокировки. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-changed для использования хранилища для хранение ключей обработанных файлов и изменения в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-rename для использования хранилища для хранение ключей обработанных файлов и переименования в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li></ul><b>Внимание : большинство стратегий блокировки чтения не подходит для использования в кластерном режиме. То есть, вы не можете иметь несколько точек входа пытающихся прочитать тот же файл в том же каталоге. В этом случае блокировка не будет надежно функционировать. Блокировка Idempotent поддерживает кластерный режим, если вы используете идемпотентную  реализацию хранилища с подержкой кластера, например, от Hazelcast Component или Infinispan .</b> |
| Время ожидания блокировки | readLockTimeout | INT | 10000 | Время ожидания в миллисекундах для блокировки файла. Если блокировка не может быть предоставлена и срабатывает тайм - аут, то Брокер пропустит файл. В следующем опросе Брокер, будет пытаться опросить файл снова, и на этот раз, может быть, блокировка будет предоставлена. Значение по умолчанию 10000. |
| Интервал блокировки | readLockCheckInterval | INT | 1000 | Интервал в миллисекундах для блокировки файлов. Этот интервал используется для ожидания между попытками получить блокировку. Например, вы можете установить более высокий интервал для обслуживания медленной записи . Значение по умолчанию 1 сек. может быть слишком быстро, если производитель очень медленно записывает файл. |
| Минимальный размер файла блокировки | readLockMinLength | INT | 1 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет настроить минимальную длину файла. По умолчанию Брокер ожидает, что файл содержит данные, и, таким образом, значение по умолчанию равно 1 . Вы можете установить этот параметр в ноль, чтобы потреблять файлы нулевой длины. |
| Минимальный возраст файла | readLockMinAge | INT | 0 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет указать минимальный возраст файла, прежде чем пытаться получить блокировку. Например, можно использовать  300s для того чтобы потреблять файлы возрастом не менее 5 минут. Это может ускорить опрос, когда файл достаточно стар, так как он будет немедленно получать блокировку. |
| Уровень логирования блокировки файлов | readLockLoggingLevel | SELECT | 0 | Уровень логирования используется, когда блокировка не может быть получена. По умолчанию,. Задается WARN. Вы можете изменить этот уровень, например, на OFF, чтобы отключить какое - либо протоколирования. Эта опция применима только для блокировки типов: changed, fileLock, rename. |
| Использовать маркерный файл для блокировки | readLockMarkerFile | BOOL | true | Следует ли использовать маркерный файл для типов блокировки  changed,rename или exclusive. По умолчанию файл маркера используется также для защиты от других процессов, подбирающих одни и те же файлы. Такое поведение можно отключить, установив эту опцию false.  |
| Удалять записи из хранилища ключей файлов при откате | readLockRemoveOnRollback | BOOL | true | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла из хранилища если обработка файла не удалась, и происходит откат . Если эта опция не установлена, то запись имени файла подтверждается. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockRemoveOnCommit | BOOL | false | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла при успешной обработке файла из идемпотентного  хранилища и фиксация происходит. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockDeleteOrphanLockFiles | BOOL | true | Определяет будут удалены или нет любые потерянные,  read-Lock и маркерные файлы при запуске, которые  возможно, были оставлены в файловой системе, если Брокер не был завершен надлежащим образом (например, аварии JVM). Если настроть в false, то любое осиротевший файл блокировки заставит Брокер не поднимать этот файл. |
| Начать обработку только при наличие директории (рекурсивно) | directoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. работает рекурсивно. |
| Имя финального файла | doneFileName | STRING | null | Если настроено, Брокер будет только потреблять файлы, если финальный файл существует. Эта опция настраивает то, какое имя файла использовать. Либо вы можете задать фиксированное имя. Или вы можете использовать динамические заполнители. финальные файлы всегда ожидаются в той же папке, что и исходные файлы. |
| Максимальное число сообщений в опросе | maxMessagesPerPoll | INT | 0 | Целое число определяющий максимальное число сообщений в опросе. По умолчанию не установлено. Может использоваться, чтобы установить предел, например, 1000 чтобы избежать при запуске сервера наличия тысячи файлов. Установите значение  0 или отрицательное, чтобы отключить его. Другие подробности в Batch Consumer.<br/>Примечание: Если эта опция используется тогда File и FTP компоненты будут ограничены до любой сортировки. Например, если у вас есть 100000 файлов и использовать maxMessagesPerPoll=500, только первые 500 файлы будут подняты, а затем отсортированы. Вы можете использовать опцию "Не выполнять полное сканирование перед опросом" и установить эту  false, чтобы сканировать все файлы, а затем сортировать. |
| Не выполнять полное сканирование перед опросом | eagerMaxMessagesPerPoll | BOOL | true | Установка этой опции false позволяет сортировать файлы, а затем ограничить опрос. Имейте в виду, что это требует использования большего количества памяти, так как все детали файла загружены в память, для выполнения сортировки. |
| Минимальная глубина для начала обработки при рекурсивном обработке каталога | minDepth | INT | 0 | Минимальная глубина для начала обработки при рекурсивном обработке каталога. Использование minDepth=1 означает базовый каталог. Использование minDepth=2 означает первый подкаталог. Эта опция поддерживается FTP потребителем. |
| Максимальная глубина для обхода при рекурсивной обработке каталога | maxDepth | INT | 0 | Максимальная глубина для обхода при рекурсивной обработке каталога. Эта опция поддерживается FTP потребителем. |
| Начать обработку только при наличие директории | startingDirectoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. |
| Отправлять пустые сообщения в состоянии простоя | sendEmptyMessageWhenIdle | BOOL | false | Если опрашивающий потребитель не отправил файлы, вы можете включить эту опцию, чтобы отправлять пустые сообщения (nobody). |
| Обрабатывать ошибки брокером | consumer.bridgeErrorHandler | BOOL | false | Позволяет привязать потребителя к обработчику ошибок (ErrorHandler) маршрутизируемого Брокером, для того чтобы любые ошибки  произошедшие при подъеме файлов, обрабатывались в виде сообщения и маршрутизировались обработчиком ошибок. По умолчанию потребитель будет использовать  org.apache.camel.spi.ExceptionHandler, чтобы справиться с ошибками, которые по умолчанию будут записываться на уровне  WARN/ ERROR и игнорироваться. |
| Определение типа содержимого | probeContentType | BOOL | false | Включает зондирование типа содержимого. Если включить, то потребитель использует Files#probeContentType(java.nio.file.Path) для определения типа содержимого файла, и хранить в качестве заголовка с ключом Exchange#FILE_CONTENT_TYPE на сообщении. |
| Действие если файл уже существует | fileExist | SELECT | Override | Что делать, если файл уже существует с тем же именем. Следующие значения могут быть указаны: Override заменяет существующий файл, Append добавляет содержимое в существующий файл, Fail выдает GenericFileOperationException показывая, что есть уже существующий файл, Ignore  игнорирует проблему и не перезаписывает существующий файл, но предполагает, что все в порядке, Move требует, чтобы опция moveExisting была настроена тоже. EagerDeleteTargetFile может быть использован для контроля действий, если переместить файл, а там уже существует файл, в противном случае операцию перемещения будет неуспешна. Move опция будет перемещать любые существующие файлы, перед записью целевого файла. TryRename применима, только если tempFileName опция используется. Позволяет попробовать переименовать файл из временного имени на фактическое имя, не делая какой - либо проверки существования. Эта проверка может быть быстрее на некоторых файловых системах.  |
| Временной префикс файла во время записи | tempPrefix | STRING | null | Эта опция используется для записи файла, используя временное имя, а затем, после завершения записи можно переименовать его. Может использоваться для идентификации файлов в процессе записи, а также для избегания потребителей (не используется FTP при загрузке больших файлов. |
| Имя временного файла | tempFileName | STRING | null | Тоже что и tempPrefix настройка, но предлагает более тонкий контроль над именованием временного файла,так как он использует File Language. |
| Имя перемещенного файла | moveExisting | STRING | null | Expression (например, File Language ), используется для вычисления имени файла, которое используется при сконфигурированном fileExist=Move. Чтобы переместить файлы в backup подкаталог просто введите backup. Этот параметр поддерживает только следующий File Language токены: file:name, file:name.ext, file:name.noext, file:onlyname, file:onlyname.noext, file:ext, file:parent Примечание : file:parent маркер не поддерживает FTP - компонент, который может только перемещать файлы в директории относительно текущего каталога. |
| Сохранять временную метку файла | keepLastModified | BOOL | false | Будет отображать последнюю измененную временную метку из исходного файла (если таковой имеется). Будет использовать Exchange.FILE_LAST_MODIFIED заголовок найденной метки. Этот заголовок может содержать либо java.util.Date или long с отметкой времени. Если временная метка существует и опция включена она будет отображать  эту временную метку в записанном файле. |
| Удаление целевого файла перед началом записи | eagerDeleteTargetFile | BOOL | true | Включает удаление любого существующего целевого файла. Этот параметр применяется только при использовании fileExists=Override и tempFileName настроек. Вы можете использовать эту настройку, чтобы отключить (установить его false) удаление целевого файла до того, как временный файл будет записан. Например, вы можете записывать большие файлы и хотите чтобы целевой файл существовал пока временный файл записывается. Это гарантирует, что целевой файл удалится только в самый последний момент, как раз перед тем,как временный файл переименуется целевым именем файла. Эту настройку также используют для управления удалением существующих файлов, когда fileExist=Move включен, и существующий файл существует. Если этот параметр copyAndDeleteOnRenameFail установлен в false, то будет выведена ошибка, если существующий файл существует. Когда true существующий файл будет удален до операции перемещения. |
| Имя файла после завершения записи целевого файла на диск | doneFileName | STRING | null | Если установлен, то Брокер будет писать второй файл (называемый done файл), когда исходный файл будет записан. Done файл будет пустым. Эта опция настраивает то, какое имя файла использовать. Вы можете задать фиксированное имя или можете использовать динамические заполнители. Done файл будет всегда записываться в той же папке, что и исходный файл.  |
| Разрешить нулевое тело файла | allowNullBody | BOOL | false | Используется для указания, разрешено ли нулевое тело во время записи файла. Если установлено значение true, то пустой файл будет создан, когда установлен в false, и пытается отправить пустое тело файловому компоненту, появляется GenericFileWriteException сообщение «Невозможно записать нулевое тело в файл». Если fileExist=Override файл будет перезаписан. Если fileExist=append файл будет оставаться неизменным. |
| Включить синхронизацию записи в файловую систему | forceWrites | BOOL | true | Включает синхронизацию записи в файловую систему. Вы можете отключить эту настройку, если не хотите такого уровня гарантии, например, если пишутся журналы аудита и т.д.; это даст лучшую производительность. |
| Права доступа файла | chmod | INT | null | Указывает разрешения файла, который отправляется от продюсера.Значение CHMOD должно быть между 000 и 777. |
| Права доступа каталога | chmodDirectory | INT | null | Указывает используемые разрешения директории когда продюсер создает недостающие каталоги, значение CHMOD должно быть между 000 и 777. |


SmbEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Пароль | password | STRING | null | Пароль пользователя. |
| Кэшировать в локальной директории | localWorkDirectory | STRING | null | Кэшировать файлы в локальной директории, чтобы не загружать их в память. |
| Автоматическое создание директорий | autoCreate | BOOL | true | Автоматически создает недостающие каталоги в пути к файлу .Создает начальный каталог для потребителя файла. Для производителя файла, это означает каталог в который должны быть записаны файлы . |
| Размер буфера  | bufferSize | STRING | 128 | Буфер записи с заданным размером в байтах. |
| Имя файла | fileName | STRING | null | Возможно использование выражения для динамической установки имени файла, оно имеет преимущество над заголовком. Для точки входа имя файла используется как фильтр, вы например можете потреблять файлы созданные сегодня, используя синтаксис файлового языка: mydata-${date:now:yyyyMMdd}.txt. В случае точки выхода будет создан файл с указанным именем, если в точку выхода передается несколько сообщений, то файл каждый раз будет переписан. |
| Обрезка пути к файлу | flatten | BOOL | false | Используется для обрезки пути к файл, так что остается просто имя файла. Это позволяет потреблять файлы рекурсивно в подкаталогах. |
| Кодировка файла | charset | STRING | null | Этот параметр используется для указания кодировки файла.  |
| Копирование с удалением при ошибке переименования | copyAndDeleteOnRenameFail | BOOL | true | Указывает делать ли резервную копию и удалить оригинальный файл, в случае, если файл не может быть переименован напрямую.  |
| Копирование с удалением в место переименования | renameUsingCopy | BOOL | false | Выполнение копирования и удаления в место операции переименования. Эта настройка имеет приоритет над параметром Копирование с удалением при ошибке переименования. |
| Первоначальная задержка | initialDelay | INT | 1000 | Задержка перед началом процесса получения файла / каталога в миллисекундах |
| Задержка | delay | INT | 500 | Время задержки до следующего получения файла / каталога в миллисекундах |
| Одинаковая задержка независимо от времени | useFixedDelay | BOOL | true | Если используется fixed delay или fixed rate. ScheduledExecutorService JDK для уточнения деталей.Значение по умолчанию true. |
| Уровень протоколирования | runLoggingLevel | SELECT | WARN | точка входа может записывать протоколы работы в лог. Этот параметр позволяет настроить уровень протоколирования. |
| Рекурсивность | recursive | BOOL | false | Если указан true, будет искать файлы во всех подкаталогах. |
| Удалить файл | delete | BOOL | false | Если в true,то файл будет удален после того, как он будет успешно обработан. |
| Только чтение | noop | BOOL | false | Если true,то файл не будет перемещен или удален. Этот вариант хорош только для чтения данных, или для требований типа ETL. По умолчанию файлы перемещаются в директорию .camel. |
| Имя директории/файла перед началом обработки | preMove | STRING | null | Строка или выражение, используется для динамической установки имени директории/файла при его перемещении, прежде чем начать обработку. Например, чтобы переместить файлы находящиеся в обработке, в  каталог order нужно установить это }
значение  в order. |
| Имя директории/файла после обработки | move | STRING | .camel | Строка или выражение используется для динамической установки имени файла при его перемещении, после обработки. Например, чтобы переместить файлы в  каталог .done нужно установить это значение  в .done. |
| Имя директории/файла при ошибке | moveFailed | STRING | null | Строка или выражение используется для динамической установки другого целевого каталога при перемещении файлов обработки.</br>Например, чтобы переместить файлы в .error подкаталог нужно использовать: .error.</br>Примечание : При }
перемещении файлов в «Ошибочную» локацию Брокер обработает ошибку и не подберет файл снова. |
| Регулярное выражение поиска файлов | include | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение исключения файлов | exclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру). |
| Регулярное выражение ANT для поиска файлов | antInclude | STRING | null | Используется для включения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Регулярное выражение ANT для исключения файлов  | antExclude | STRING | null | Используется для исключения файлов, если имя файла соответствует шаблону регулярных выражений (чувствительно к регистру).Несколько исключений могут быть указаны в формате разделения запятыми. |
| Сделать регулярное выражение ANT чувствительным к регистру | antFilterCaseSensitive | BOOL | true | сделать регулярное выражение ANT чувствительным к регистру. |
| Пропуск уже обработанных файлов | idempotent | BOOL | false | Возможность чтобы брокер пропускал уже обработанные файлы. Будет по умолчанию использовать LRUCache память, которая содержит 1000 записей. Если включен режим Только чтение, Данная опция также будет включена, чтобы избежать потребления }
одних и тех же файлов снова и снова. |
| Уникальный ключ уже обработанных файлов | idempotentKey | STRING | Expression | По умолчанию используется абсолютный путь к файлу. Вы можете использовать имя файла и размер файла, например : ${file:name}-${file:size} |
| Хранилище для хранение ключей обработанных файлов | idempotentRepository | BOOL | false | Присоединяемое хранилище для хранения, использует по умолчанию, MemoryMessageIdRepository если другой не указан и }
Пропуск уже обработанных файлов установлен в true. |
| Учет файлов в процессе обработки | inProgressRepository | STRING | memory | хранилище используется для учета файлов потребляющихся в настоящее время .  |
| Расширенный фильтр | filter | STRING | null | Подключаемый фильтр. Будет пропускать файлы, если фильтр возвращает false в accept() методе.  |
| Фильтр каталогов | filterDirectory | STRING | null | Фильтрует каталоги. Например, для фильтрации по текущей дате, вы можете использовать простой шаблон даты, такой как  ${date:now:yyyMMdd}. |
| Фильтр файлов | filterFile | STRING | null | Фильтрует файлы. Например, чтобы фильтровать по размеру файла, вы можете использовать  ${file}:size > 5000. |
| Случайный порядок | shuffle | BOOL | false | Для того, чтобы перетасовать список файлов (сортировка в случайном порядке). |
| Расширенная сортировка | sorter | STRING | null | Подключаемый сортировщик. |
| Сортировка | sortBy | STRING | null | Встроенная сортировка. Поддерживает вложенность, так что вы можете сортировать по имени файла и сортировать по дате модификации. |
| Блокировка файла | readLock | SELECT | null | Брокер будет ждать, пока файл заблокирован. <ul> Возможны следующие варианты:<li>none не использовать блокировку.</li><li>markerFile Брокер создает файл - маркер, а затем удерживает блокировку на нем.</li><li>changed использует временную отметку длины/модификации для обнаружения копируется ли файл в настоящее время. Будет затрачена по крайней мере 1 сек. чтобы определить это, так что этот вариант не может потреблять файлы так же быстро, как и другие, но будет более надежным.</li><li>fileLock - Такой подход следует избегать при получении доступа к удаленной файловой системе с помощью mount/share, если только файловая система не поддерживает распределенную блокировку файлов(distributed file locks).</li><li>rename попробует переименовать файл в качестве теста,возможно ли получить exclusive read-Lock.</li><li>idempotent для использования  хранилища для хранение ключей обработанных файлов в качестве блокировки. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-changed для использования хранилища для хранение ключей обработанных файлов и изменения в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li><li>idempotent-rename для использования хранилища для хранение ключей обработанных файлов и переименования в сочетании с блокировкой. Это позволяет использовать блокировку, которая поддерживает кластеризацию.</li></ul><b>Внимание : большинство стратегий блокировки чтения не подходит для использования в кластерном режиме. То есть, вы не можете иметь несколько точек входа пытающихся прочитать тот же файл в том же каталоге. В этом случае блокировка не будет надежно функционировать. Блокировка Idempotent поддерживает кластерный режим, если вы используете идемпотентную  реализацию хранилища с подержкой кластера, например, от Hazelcast Component или Infinispan .</b> |
| Время ожидания блокировки | readLockTimeout | INT | 10000 | Время ожидания в миллисекундах для блокировки файла. Если блокировка не может быть предоставлена и срабатывает тайм - аут, то Брокер пропустит файл. В следующем опросе Брокер, будет пытаться опросить файл снова, и на этот раз, может быть, блокировка будет предоставлена. Значение по умолчанию 10000. |
| Интервал блокировки | readLockCheckInterval | INT | 1000 | Интервал в миллисекундах для блокировки файлов. Этот интервал используется для ожидания между попытками получить блокировку. Например, вы можете установить более высокий интервал для обслуживания медленной записи . Значение по умолчанию 1 сек. может быть слишком быстро, если производитель очень медленно записывает файл. |
| Минимальный размер файла блокировки | readLockMinLength | INT | 1 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет настроить минимальную длину файла. По умолчанию Брокер ожидает, что файл содержит данные, и, таким образом, значение по умолчанию равно 1 . Вы можете установить этот параметр в ноль, чтобы потреблять файлы нулевой длины. |
| Минимальный возраст файла | readLockMinAge | INT | 0 | Этот параметр применяется только когда блокировка установлена на changed. Эта опция позволяет указать минимальный возраст файла, прежде чем пытаться получить блокировку. Например, можно использовать  300s для того чтобы потреблять файлы возрастом не менее 5 минут. Это может ускорить опрос, когда файл достаточно стар, так как он будет немедленно получать блокировку. |
| Уровень логирования блокировки файлов | readLockLoggingLevel | SELECT | 0 | Уровень логирования используется, когда блокировка не может быть получена. По умолчанию,. Задается WARN. Вы можете изменить этот уровень, например, на OFF, чтобы отключить какое - либо протоколирования. Эта опция применима только для блокировки типов: changed, fileLock, rename. |
| Использовать маркерный файл для блокировки | readLockMarkerFile | BOOL | true | Следует ли использовать маркерный файл для типов блокировки  changed,rename или exclusive. По умолчанию файл маркера используется также для защиты от других процессов, подбирающих одни и те же файлы. Такое поведение можно отключить, установив эту опцию false.  |
| Удалять записи из хранилища ключей файлов при откате | readLockRemoveOnRollback | BOOL | true | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла из хранилища если обработка файла не удалась, и происходит откат . Если эта опция не установлена, то запись имени файла подтверждается. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockRemoveOnCommit | BOOL | false | Этот параметр применяется только когда  блокировка установлена на idempotent. Эта опция позволяет указать, следует ли удалить запись имени файла при успешной обработке файла из идемпотентного  хранилища и фиксация происходит. |
| Удалять записи из хранилища ключей файлов при успешной обработке | readLockDeleteOrphanLockFiles | BOOL | true | Определяет будут удалены или нет любые потерянные,  read-Lock и маркерные файлы при запуске, которые  возможно, были оставлены в файловой системе, если Брокер не был завершен надлежащим образом (например, аварии JVM). Если настроть в false, то любое осиротевший файл блокировки заставит Брокер не поднимать этот файл. |
| Начать обработку только при наличие директории (рекурсивно) | directoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. работает рекурсивно. |
| Имя финального файла | doneFileName | STRING | null | Если настроено, Брокер будет только потреблять файлы, если финальный файл существует. Эта опция настраивает то, какое имя файла использовать. Либо вы можете задать фиксированное имя. Или вы можете использовать динамические заполнители. финальные файлы всегда ожидаются в той же папке, что и исходные файлы. |
| Максимальное число сообщений в опросе | maxMessagesPerPoll | INT | 0 | Целое число определяющий максимальное число сообщений в опросе. По умолчанию не установлено. Может использоваться, чтобы установить предел, например, 1000 чтобы избежать при запуске сервера наличия тысячи файлов. Установите значение  0 или отрицательное, чтобы отключить его. Другие подробности в Batch Consumer.<br/>Примечание: Если эта опция используется тогда File и FTP компоненты будут ограничены до любой сортировки. Например, если у вас есть 100000 файлов и использовать maxMessagesPerPoll=500, только первые 500 файлы будут подняты, а затем отсортированы. Вы можете использовать опцию "Не выполнять полное сканирование перед опросом" и установить эту  false, чтобы сканировать все файлы, а затем сортировать. |
| Не выполнять полное сканирование перед опросом | eagerMaxMessagesPerPoll | BOOL | true | Установка этой опции false позволяет сортировать файлы, а затем ограничить опрос. Имейте в виду, что это требует использования большего количества памяти, так как все детали файла загружены в память, для выполнения сортировки. |
| Минимальная глубина для начала обработки при рекурсивном обработке каталога | minDepth | INT | 0 | Минимальная глубина для начала обработки при рекурсивном обработке каталога. Использование minDepth=1 означает базовый каталог. Использование minDepth=2 означает первый подкаталог. Эта опция поддерживается FTP потребителем. |
| Максимальная глубина для обхода при рекурсивной обработке каталога | maxDepth | INT | 0 | Максимальная глубина для обхода при рекурсивной обработке каталога. Эта опция поддерживается FTP потребителем. |
| Начать обработку только при наличие директории | startingDirectoryMustExist | BOOL | false | Имейте в виду, что если опция автосоздания директорий включена по умолчанию, означает, что стартовый каталог обычно автоматически создается, если он не существует. Вы можете отключить автосоздание и включить этот параметр, чтобы исходный каталог был создан. Будет выведена ошибка, если каталог не существует. |
| Отправлять пустые сообщения в состоянии простоя | sendEmptyMessageWhenIdle | BOOL | false | Если опрашивающий потребитель не отправил файлы, вы можете включить эту опцию, чтобы отправлять пустые сообщения (nobody). |
| Обрабатывать ошибки брокером | consumer.bridgeErrorHandler | BOOL | false | Позволяет привязать потребителя к обработчику ошибок (ErrorHandler) маршрутизируемого Брокером, для того чтобы любые ошибки  произошедшие при подъеме файлов, обрабатывались в виде сообщения и маршрутизировались обработчиком ошибок. По умолчанию потребитель будет использовать  org.apache.camel.spi.ExceptionHandler, чтобы справиться с ошибками, которые по умолчанию будут записываться на уровне  WARN/ ERROR и игнорироваться. |
| Определение типа содержимого | probeContentType | BOOL | false | Включает зондирование типа содержимого. Если включить, то потребитель использует Files#probeContentType(java.nio.file.Path) для определения типа содержимого файла, и хранить в качестве заголовка с ключом Exchange#FILE_CONTENT_TYPE на сообщении. |


HTTPEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| HTTP менеджер подключений | httpConnectionManager | BEAN | null | Для того чтобы использовать org.apache.commons.httpclient.HttpConnectionManager. |
| Http привязка | httpBinding | BEAN | null | Ссылка на бин типа org.apache.camel.component.http.HttpBinding. |
| Выводить ошибку при сбое | throwExceptionOnFailure | BOOL | true | Возможность отключить вывод HttpOperationFailedException в случае неудачных ответов от удаленного сервера. Это позволяет получить все ответы независимо от идентификатора состояния HTTP. |
| Диапазон индикаторов состояния | okStatusCodeRange | STRING | 200-299 | Индикаторы состояния , которые считаются ответом при успешном выполнении. Значения указаны включительно. Диапазон должен быть определен как от-до с “-”. |
| Домен для аутентификации | authDomain | STRING | null | Домен для аутентификации NTML |
| Домен для аутентификации прокси | proxyAuthDomain | STRING | null | Домен для аутентификации прокси-NTML |
| Игнорировать тело ответа | ignoreResponseBody | BOOL | false | Если эта опция true, продюсер HTTP не будет читать тело ответа и кэширует входной поток. |
| Имя пользователя для аутентификации | authUsername | STRING | null | Имя пользователя для аутентификации |
| Пароль пользователя для аутентификации | authPassword | STRING | null | Пароль для аутентификации |
| Имя пользователя для проверки подлинности прокси | proxyAuthUsername | STRING | null | Имя пользователя для проверки подлинности прокси |
| Имя прокси-хоста | proxyHost | STRING | null | Имя прокси-хоста |
| Клиентский Менеджер подключений | clientConnectionManager | BEAN | null | Для использования org.apache.http.conn клиентского менеджера подключений. |
| Конфигуратор HTTP клиента | httpClientConfigurer | BEAN | null | Для того чтобы использовать org.apache.camel.component.http.HttpClientConfigurer. |
| Копировать заголовки | copyHeaders | BOOL | true | Если эта опция true, то в IN Exchange заголовки будут скопированы в OUT Exchange заголовки в соответствии со стратегией копирования. Установка в false, позволяет включать только заголовки из HTTP  ответов. |
| Метод аутентификации  для прокси | proxyAuthMethod | STRING | null | Метод аутентификации  для прокси - сервера, либо как Basic, Digest или NTLM. |
| Метод проверки подлинности | authMethod | SELECT | null | Метод проверки подлинности: Basic, Digest или NTLM. |
| Настройка параметров http клиента | httpClient.xxx | CONFIG | null | Настройка параметров в HttpClientParams. |
| Значение таймаута | httpClient.socketTimeout | INT | 300000 | Значение таймаута в Миллисекундах. Задается как, например, 300000 (5 минут), чтобы не повесить соединение. На SFTP этот параметр установлен в качестве тайм - аута на JSch сессии. |
| Обработчик куки | cookieHandler | BEAN | null | Настройка обработчика куки для поддержания HTTP сессии. |
| Отключить кэширование входного потока | disableStreamCache | BOOL | false | DefaultHttpBinding копирует входной поток запроса в поток кэш и помещает его в тело сообщения, если эта опция false cчитать дважды, в противном случае DefaultHttpBinding установит входной поток запроса непосредственно в тело сообщения. Эти опции теперь также поддерживает производитель , чтобы разрешить использование потока ответа непосредственно вместо кэширования потока , как по умолчанию. |
| Ошибка обмена | transferException | BOOL | false | Если включена и не удалась обработка на стороне потребителя, и если Exception был сериализован и отправлен обратно в ответе как application/x-java-serialized-object тип содержимого (например , с использованием Jetty или Servlet компоненты Брокера). Со стороны производителя исключение будет десериализовано и выведено, как есть, вместо HttpOperationFailedException.  |
| Пароль для аутентификации  | proxyAuthPassword | STRING | null | Пароль для аутентификации  |
| Переписывает URL | urlRewrite | BEAN | null | Ссылка на org.apache.camel.component.http.UrlRewrite, который позволяет переписать URL, когда вы связываете конечные точки. |
| Пользовательская Http конфигурация | httpConfiguration | BEAN | null | Чтобы использовать пользовательские org.apache.camel.component.http.HttpConfiguration  |
| Приоритет методов аутентификации | authMethodPriority | STRING | null | Приоритет методов аутентификации разделенные запятой. Например: Basic, Digest (для того чтобы исключить NTLM). |
| Разрешает Java-сериализованные объекты | allowJavaSerializedObject | BOOL | false | Разрешает сериализацию, когда запрос использует context-type = application/х-Java-serialized-object. Это по умолчанию выключено. Если вы включите это , то знайте , что Java будет десериализацией входящих данных из запроса на Java , и это может быть потенциальным риск безопасности. |
| Разрешить проверку содержимого | eagerCheckContentAvailable | BOOL | false | Проверять есть ли содержимое в HTTP запросах, если заголовок Content-Length 0 или не присутствует. Можно включить в случае если клиенты HTTP не посылают потоковые данные. |
| Связать Конечные точки | bridgeEndpoint | BOOL | false | Если опция true, HttpProducer будет игнорировать заголовок Exchange.HTTP_URI и использовать URI конечной точки для запроса. Вы также можете установить *throwExceptionOnFailure* false, чтобы позволить HttpProducer отправить все ошибочные ответы обратно. Если опция true, HttpProducer и CamelServlet пропустит обработку Gzip, если кодировка содержания «Gzip». |
| Стратегия фильтрации заголовков (ссылка) | headerFilterStrategy | STRING | null | Ссылка на org.apache.camel.spi.HeaderFilterStrategy в реестре. Он будет использоваться для применения пользовательской headerFilterStrategy к новой HttpEndpoint. |
| Хост для аутентификации | authHost | STRING | null | Дополнительный хост для аутентификации NTML |
| Хост для прокси-аутентификации | proxyAuthHost | STRING | null | Дополнительный хост для прокси-аутентификации NTML |
| Порт прокси-сервера | proxyPort | STRING | null | Номер порта прокси-сервера |


JettyPropertiesJSON.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Http привязка (ссылка) | httpBindingRef | BEAN | null | Ссылка на org.apache.camel.component.http.HttpBinding в реестре. HttpBinding могут быть использованы для настройки , для определения того как должен быть написан ответ для потребителя. |
| Http привязка jetty (ссылка) | jettyHttpBindingRef | BEAN | null | Ссылка на org.apache.camel.component.jetty.JettyHttpBinding в реестре. JettyHttpBinding могут быть использованы для настройки , для определения того как должен быть написан ответ для производителя. |
| Включает Http опции | optionsEnabled | BOOL | false | Указывает , следует ли включить  HTTP OPTIONS для этого Jetty потребителя. По умолчанию  OPTIONS выключено. |
| Включает диспетчер сеанса | sessionSupport | BOOL | false | Указывает, следует ли включить диспетчер сеанса на стороне сервера Jetty. |
| Включить HTTP трейсинг | traceEnabled | BOOL | false | Указывает, следует ли включить HTTP TRACE для этого Jetty потребителя. По умолчанию TRACE выключено. |
| Включить JMX | enableJmx | BOOL | false | Если эта опция true, поддержка Jetty JMX будет включена для конечной точки. См поддержка Jetty JMX. |
| Включить многокомпонентный (составной) режим | enablemulti-partFilter | BOOL | true | Указывает будет ли Jetty org.eclipse.jetty.servlets.multi-partFilter включен или нет. Установите эту опцию false при связывании конечных точек, чтобы обеспечить связывание запросов из многих частей. |
| Включить совместное использование ресурсов между разными источниками | enableCORS | BOOL | false | Если опция true, Jetty сервер установит  CrossOriginFilter который поддерживает Cors. |
| Выводить Ошибку в случае сбоя | throwExceptionOnFailure | BOOL | true | Отключает вывод HttpOperationFailedException в случае неудачных ответов от удаленного сервера. Это позволяет получить все ответы независимо от идентификатора состояния HTTP. |
| Использовать приемственность | useContinuation | BOOL | true | Будет или нет использовать приемственность Jetty для Jetty Server. |
| Конфигурация HTTP клиента | httpClient.xxx | CONFIG | null | Конфигурация Jetty в HTTPClient. Например, параметр httpClient.idleTimeout=30000 устанавливает период ожидания в 30 секунд, httpClient.timeout=30000 задает время ожидания запроса в  30 секунд, httpClient.socketTimeout = 5000 для установки времени ожидания сокета до 5 секунд. |
| Конфигурация фильтра | filterInit.xxx | CONFIG | null | Конфигурация для InitParameters фильтра.Например, установка параметра filterInit.parameter=value может быть использована при вызове фильтра метода  init(). |
| Обработчики | handlers | BEAN | null | Указывает разделенный запятыми набор org.mortbay.jetty.Handler в вашем реестре (например, вашего Spring ApplicationContext). Эти обработчики добавляются к контексту Jetty servlet (например, добавить безопасности). Вы не можете использовать различные обработчики с различными конечными точками Jetty , используя один и тот же номер порта. Обработчики связан с номером порта. Если вам нужны различные обработчики, используйте разные номера портов. |
| Ограничение Http методов | httpMethodRestrict | STRING | null | Потребитель только : Используется для потребления, если  HttpMethod совпадают, такие как  GET/POST/PUT т.д. Множественные методы могут быть указаны через запятую. |
| Отключить кэширование входного потока | disableStreamCache | BOOL | false | Определяет ,кэшировать  ли или нет  входной поток от Jetty. По умолчанию Брокер будет кэшировать поток ввода Jetty для поддержки многократного чтения, чтобы убедиться, что брокер может извлечь все данные из потока. DefaultHttpBinding копирует входной поток запроса в кэш потока и поместит его в тело сообщения , если эта опция false, для поддержки чтения потока несколько раз. Если вы используете Jetty  для связи конечных точек , то рекомендуется включить эту опцию , чтобы повысить производительность, в случае , если вам не нужно прочитать полезную нагрузку , сообщения несколько раз. |
| Отправить версию сервера | sendServerVersion | BOOL | true | Если опция истинна, Jetty отправит заголовок сервера с информацией о Jetty версии клиента ,клиенту  который отправляет запрос.Примечание : убедитесь , что нет каких - либо других  camel-jetty конечных точек , которые разделяют один и тот же порт, в противном случае эта опция может не работать. |
| Отправить заголовок с датой | sendDateHeader | BOOL | false | Если опция истинна, Jetty сервер будет посылать заголовок с датой клиента , который отправляет запрос.Примечание : убедитесь , что нет каких - либо других  camel-jetty конечных точек , которые разделяют один и тот же порт, в противном случае эта опция может не работать. |
| Ошибка обмена | transferException | BOOL | false | Если включена и Обмен  не прошел обработку на стороне потребителя, и если ошибка была отправить обратно сериализованной в ответ как application/x-java-serialized-object тип контента. |
| Передача кусками определенной длины | chunked | BOOL | true | Если эта опция  false Jetty Servlet отключает потоковую передачу HTTP  и установит  Content-Length заголовок на ответ. |
| Пользовательский составной фильтр(ссылка) | multi-partFilterRef | BEAN | null | Позволяет использовать пользовательский составной фильтр. Примечание: установка multi-partFilterRef выставляет значение enablemulti-partFilter в true. |
| Продолжительность тайм-аута | continuationTimeout | STRING | null | Позволяет установить тайм - аут в миллисекундах при использовании Jetty в качестве потребителя (сервера). По умолчанию Jetty использует 30000. Вы можете использовать значение , <= 0 чтобы отключить таймаут. Если возникает тайм - аут , то запрос истекает и Jetty вернет ошибку HTTP клиента 503. Только при использовании Jetty  асинхронной маршрутизацией. |
| Разделяемый HTTP клиента | httpClient | STRING | null | Чтобы использовать разделяемый org.eclipse.jetty.client.HttpClient для всех производителей, созданных этой конечной точкой. Этот параметр следует использовать только в особых случаях. |
| Размер Буфера Ответа | responseBufferSize | INT | null | Чтобы использовать пользовательский размер буфера на javax.servlet.ServletResponse. |
| Связать с точкой выхода | bridgeEndpoint | BOOL | false | Если параметр установлен в true (стоит галка) ,то точка входа HTTP будет игнорировать Exchange.HTTP_URI заголовок и использовать URI точки выхода для запроса. Вы можете также выключить параметр Выводить Ошибку в случае сбоя (по умолчанию он включен), чтобы позволить точке входа HTTP отправить все ошибочные ответы обратно. А так-же при установленном параметре, точка входа HTTP  будет пропускать обработку GZIP , если  Content-Encoding gzip. Для работы без точки выхода следует использовать этот параметр cм. настройку "Отключить кэширование входного потока" для оптимизации работы данного параметра. |
| Сопоставление префикса URI | matchOnUriPrefix | BOOL | false | Будет ли должен CamelServlet пытаться найти целевого потребителя путем сопоставления префикса URI, если точного соответствия не найдено. |
| Ссылка для настраиваемых фильтров | filtersRef | BEAN | null | Позволяет использовать настраиваемые фильтры, которые внесены в список и могут быть найдены в реестре. |
| Ссылка на параметры SSL контекста | sslContextParameters | BEAN | null | Ссылка на org.apache.camel.util.jsse.SSLContextParameters в реестре. Эта ссылка превалирует любой сконфигурированный SSLContextParameters на уровне компоненты.  |
| Стратегия фильтрации заголовков (ссылка) | headerFilterStrategy | BEAN | null | Ссылка на экземпляр org.apache.camel.spi.HeaderFilterStrategy в реестре. Он будет использоваться для применения headerFilterStrategy на новой HttpJettyEndpoint. |


InJMSEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Идентификатор клиента | clientId | STRING | null | Использовать JMS ID.Значение Идентификатора клиента должно быть уникально (в пределах сети) и может быть использовано для одного JMS подключения |
| Количество одновременных потребителей | concurrentConsumers | INT | 1 | Кол-во одновременно действующих потребителей может использоваться для запроса\ответа через JMS переменную "Ответ Одновременным Потребителям". По умолчанию предоставляется 1000 сообщений на пользователя. Подробнее см лимит выборки.  |
| Отключить синхронный ответ JMS-получателю | disableReplyTo | BOOL | false | В значении true будет работать как InOnly обмен с исключением в виде того, что JMS адрес для ответа заголовок выслан и не запрещен как в случае InOnly . Производитель не ждет ответа. Потребитель с этим параметром будет работать как InOnly. Может использоваться для привязки InOut запросов одной очереди к другой очереди так что последняя очередь отправит ответ обратно к оригинальному JMS адрес для ответа . |
| Имя Долговременного подписчика | durableSubscriptionName | STRING | null | Имя Долговременного подписчика для Долговременной подписки на топик. Должен быть задан идентификатор клиента. |
| Максимальное кол-во одновременно действующих потребителей | maxConcurrentConsumers | INT | 1 | Кол-во одновременно действующих потребителей |
| Максимальное кол-во сообщений для задачи | maxMessagesPerTask | INT | -1 | Кол-во полученных сообщений после достижения которого задача будет завершена. По умолчанию -1 неограниченно. |
| Сохранение настроек QOS Сообщения | preserveMessageQos | BOOL | false | Установить true для использования QoS установок указанных для сообщения,вместо QoS установок конечного пользователя JMS.<ul>Касается заголовков:<li>Приоритет JMS</li><li>Режим доставки JMS</li><li>Истечение срока действия JMS</li></ul> Если не указаны то Брокер будет использовать значения конечного пользователя JMS.В контраст используется Включение возможности установки режимов QoS |
| Ответ JMS-получателю | replyTo | STRING | null | Предоставляет исключительный ответ JMS-получателю, который превалирует над любым входящим значением Messge.getJMSReplyTo().  |
| Ответ Одновременным Потребителям  | replyToConcurrentConsumers | INT | 1 | Указывает кол-во одновременно действующих потребителей использующих Запрос\Ответ через JMS |
| Указывает кол-во одновременно действующих потребителей | replyToMaxConcurrentConsumers | INT | 1 | Указывает кол-во одновременно действующих потребителей использующих Запрос\Ответ через JMS. Смотреть переменную "Максимальное кол-во сообщений" для задачи для масштабирования потока сообщений. |
| Указывает кол-во одновременно действующих потребителей во время таймаута | replyToOnTimeoutConcurrentConsumers | INT | 1 | Указывает кол-во одновременно действующих потребителей для продолжения маршрутизации по истечении времени сессии (таймаут) при использовании Запроса\Ответа по JMS |
| Переопределяет назначение JMS сообщения  | replyToOverride | STRING | null | Предоставляет исключительное ReplyTo назначение JMS сообщения, превалирующее над указанным в ReplyTo  |
| Используемый тип стратегии  | ReplyToType | SELECT | null | Позволяет явно указать какой тип стратегии использовать для очередей replyTo использующих Запрос\Ответ по JMS.Возможные значения: Temporary, Shared или Exclusive. По умолчанию Брокер использует Temporary. Если replyTo был сконфигурирован,то Shared используется по умолчанию. Более детально смотреть ниже, в частности при использовании в кластере. Очереди Shared имеют более низкую производительность в сравнении с остальными.  |
| JMS Селектор | selector | STRING | null | Устанавливает JMS Селектор, основанный на SQL 92, используется для фильтрования сообщений в Брокере.Можно закодировать специальные символы как "=" так %3D. |
| Время жизни сообщений | timeToLive | INT | null | Время жизни сообщений в милисек. |
| Транзакционный режим | transacted | BOOL | false | Указывает транзакционный режим для отправки/получениясообщений используя Схему Обмена InOnly |
| Предварительное тестирование соединения | testConnectionOnStartup | BOOL | false | Включает предварительное тестирование соединения.Удостоверяет что все JMS потребители/продюсеры имеют подключение к JMS Брокеру.Если подключения нет будет выведено сообщение об ошибке. |
| Получать сообщения пока останавливается | acceptMessageWhileStopping | BOOL | false | Указывает получает ли потребитель сообщения пока останавливается.Если не  включить опцию и остановить JMS маршрутизацию во время работы , сообщения находящиеся в очередях будут отброшены и могут быть перемещены в  deadleterqueue JMS Брокера.Рекомендуется установить в  true. |
| Имя подтверждения JMS | acknowledgementModeName | SELECT | AUTO_ACKNOWLEDGE | Имя подтверждения JMS,одно из: SESSION_TRANSACTED, CLIENT_ACKNOWLEDGE, AUTO_ACKNOWLEDGE, DUPS_OK_ACKNOWLEDGE |
| Режим JMS подтверждения | acknowledgementMode | INT | -1 | Режим JMS подтверждения. Задается как целое число.Позволяет установить специфическое для поставщика расширение режима подтверждения.Для обычных режимов предпочтительно использовать Имя подтверждения JMS. |
| Позволяет отправлять пустые сообщения | allowNullBody | BOOL | true | Позволяет отправлять пустые сообщения.Если выставлено false и тело сообщения пустое, JMS Exception будет выведена ошибка. |
| Быстрая остановка отвечающего менеджера | allowReplyManagerQuickStop | BOOL | false | Если  DefaultMessageListanerContainer используемый в отвечающих менеджерах для requesteply обмена сообщениями разрешен  DefaultMessageListanerContainer.runningAllowed флаг для быстрой остановки в случае если линк ***JmsConfigurationisAcceptMessagesWhyleStopping() разрешен и CamelContext остановлен. Возможность быстрой остановки включена по умолчанию у обычных JMS получателей.Включить эту опцию для разрешения быстрой остановки на отвечающих менеджерах(reply managers) |
| Всегда копировать сообщения  | alwaysCopyMessage | BOOL | false | Если true, брокер делает копию JMS сообщения прошедшего к производителю на отправку.Копирование сообщения нужно когда установлен replyToDestinationSelectorName. Брокер установит "Всегда копировать сообщения"=true, если "replyToDestinationSelectorName" установлен. |
| Асинхронное потребление сообщений | asyncConsumer | BOOL | false | Для JMS потребителя продолжения обмена сообщения  асинхронно.Если включен, JMS потребитель может обрабатывать следующее  сообщение из JMS очереди, пока предыдущее обрабатывается асинхронно.Не работает с параметром Транзакционный режим=true. |
| Асинхронно стартовать листенер   | asyncStartListener | BOOL | false | Разрешает Стартовать  листенер  JMS потребителя сообщений асинхронно. |
| Асинхронно останавливать листенер | asyncStopListener | BOOL | false | Разрешает Остановить листенер  JMS потребителя сообщений асинхронно останавливая маршрут. |
| Автоматический старт контейнера получателя | autoStartup | BOOL | true | Указывает должен ли контейнер получателя стартовать автоматически. |
| Устанавливает уровень КЭШ  | cacheLevel | STRING | null | Устанавливает уровень КЭШ по ID для нижележащих ресурсов JMS. Подробнее в параметре "Название Уровня КЭШ". |
| Название Уровня КЭШ | cacheLevelName | SELECT | CACHE_AUTO | Устанавливает уровень КЭШ по имени для нижележащих ресурсов JMS.Разрешенные значения: CACHE_NONE, CACHE_CONNECTION, CACHE_SESSION, CACHE_CONSUMER. По умолчанию CACHE_AUTO См. и документация Spring и уровни КЭШ транзакций для получения дополнительной информации. |
| Фабрика соединений  | connectionFactory | BEAN | null | Установленная по умолчанию JMS фабрика соединений если ни одна из следующих не указана "Фабрика соединений JMS для потребления сообщений" и "Фабрика соединений JMS". |
| Тип используемого Spring JMS листенера | consumerType | SELECT | default | Тип используемого Spring JMS листенера. Разрешенные значения: SIMPLE, DEFAULT или CUSTOM. DEFAULT: org.springframework.jms.listener.DefaultMessageListenerContainer. SIMPLE: org.springframework.jms.listener.SimpleMessageListenerContainer. CUSTOM:MessageListenerContainerFactory заданный опцией messageListenerContainerFactoryRef  которая определяет какой org.springframework.jms.listener.AbstractMessageListenerContainer использовать. |
| Тип управляющей программы по умолчанию | defaultTaskExecutorType | SELECT | SimpleAsync | Определяет, какой тип TaskExecutor по умолчанию использовать в DefaultMessageListenerContainer для конечных точек потребителей и для ReplyTo конечных точек продюсера. Возможные значения: SimpleAsync (использует SimpleAsyncTaskExecutor Spring) или ThreadPool (ThreadPoolTaskExecutor). Если не задано, по умолчанию используется предыдущее поведение из КЭШа, пул потоков для конечных точек потребителей и SimpleAsync для ответов потребителей. Использование ThreadPool для уменьшения «мусорного потока» в гибких конфигурациях с динамическим увеличением и уменьшением количества одновременно работающих пользователей.  |
| Режим доставки | deliveryMode | SELECT | null | Определяет режим доставки, который будет использоваться. Возможные значения определены  javax.jms.DeliveryMode. |
| Стойкая доставка | deliveryPersistent | BOOL | true | Устанавливает использование стойкой доставки. |
| Назначение | destination | STRING | null | Указывает JMS объект назначения для использования в этой конечной точке. |
| Имя назначения | destinationName | STRING | null | Указывает JMS имя назначения для использования в этой конечной точке. |
| Определитель(разрешитель) назначения | destinationResolver | STRING | null | Подключаемый org.springframework.jms.support.destination.DestinationResolver, позволяющий использовать(пользовательский) разрешитель назначения. |
| Отключить “Время жизни” | disableTimeToLive | BOOL | false | Используйте этот параметр, чтобы принудительно отключить параметр "время жизни" сообщения.  |
| Стремительная загрузка JMS свойств | eagerLoadingOfProperties | BOOL | false | Включает стремительную загрузку JMS свойств как только получает сообщение,что может быть неэффективно т.к свойства могут быть JMS не затребованы.Используется в задачах тестирования.. |
| Обработчик ошибок | errorHandler | STRING | null | Указывается org.springframework.util.ErrorHandler и вовлекается в случае возникновения ошибок во время обработки сообщений. |
| Уровень логирования Обработчика ошибок | errorHandlerLoggingLevel | SELECT | WARN | Конфигурирует уровень логирования обработчика ошибок |
| Логирование стек-трейсов обработчиком ошибок  | errorHandlerLogStackTrace | BOOL | true | Включает логирование стек-трейсов обработчиком ошибок  |
| JMS слушатель ошибок | exceptionListener | STRING | null | Включает JMS слушатель ошибок JMS который будет уведомлен об ошибках нижележащих JMS. |
| Включение возможности установки режимов QoS | explicitQosEnabled | BOOL | false | Установить если Режим доставки JMS, priority или Время жизни сообщений QoS должны использоваться в отправке сообщений. |
| Открыть листенеры  | exposeListenerSession | BOOL | true | Указывает должны ли быть открыты листенеры во время потребления сообщений.  |
| Принудительно отправить оригинальное сообщение | forceSendOriginalMessage | BOOL | false | С использованием Сопоставления принятого сообщения JMS=false будет создано новое JMS сообщение для отправки в новому  JMS адресату *при значении true будет использоваться оригинальное сообщение. |
| Кол-во незанятых потребителей | idleConsumerLimit | INT | 1 | Указывает предельное количество незанятых потребителей в один момент времени. |
| Предел количества исполнений задания | idleTaskExecutionLimit | INT | 1 | Предел количества  исполнений задания без входящих сообщений.(исполнение во время простоя)По достижению предела, задание выключается,оставляя прием сообщений другим выполняющимся задачам.  |
| Включить  идентификатор JMS  сообщения | includeSentJMSMessageID | BOOL | false | Применим только в случае отправки с JMS назначением используя InOnly.Включение этой опции обогатит Обмен Брокера актуальным JMS идентификатором сообщения которое использовалось JMS клиентом когда отправлялось JMS адресату. |
| Включать ли все свойства заголовка JMSX | includeAllJMSXProperties | BOOL | false | Включать ли все свойства  заголовка JMSXxxx когда обрабатываются сообщения,  такие как JMSXAppID, и JMSXUserID. Не учитывается если используете headerFilterStrategy Стратегия фильтрации заголовков |
| Подключаемая стратегия для шифрования\дешифрования JMS ключей | jmsKeyFormatStrategy | SELECT | DEFAULT | Подключаемая стратегия для шифрования\дешифрования JMS ключей для совместимости с JMS спецификацией. Default:безопасно упорядочивает точки и дефисы. Passthrough: Оставляет ключ как есть. Подходит для использования с любым брокером JMS, который допускает ключи заголовка JMS, содержащие недопустимые символы. |
| Тип сообщения JMS | jmsMessageType | SELECT | null | Позволяет принудительно использовать javax.jms.Message реализацию для отправки JMS сообщений. Возможные значения: Bytes, Map, Object, Stream, Text. По умолчанию Брокер определяет, какой тип JMS сообщения использовать для типа In. Эта опция превалирует над поведением по умолчанию. |
| jmsOperations | jmsOperations | STRING | null | Позволяет использовать свой org.springframework.jms.core.JmsOperations интерфейс. Брокер использует JmsTemplate по умолчанию. Может использоваться для целей тестирования,смотреть документы API Spring. |
| Отложенное\Позднее Создание Менеджера Транзакций | lazyCreateTransactionManager | BOOL | true | Если true ,Брокер создаст JmsTransactionManager , в случае если  transactionManager не был внедрен включением опции Транзакционный режим=true. |
| Фабрика соединений JMS для потребления сообщений | listenerConnectionFactory | STRING | null | Фабрика соединений JMS используется для потребления сообщений. |
| Сопоставление принятого сообщения JMS | mapJmsMessage | BOOL | true | Указывает, следует ли Брокеру автоматически сопоставлять принятое сообщение JMS с соответствующим типом полезной нагрузки,как javax.jms.TextMessage , с java.lang. String.Подробнее о том, как работает сопоставление типов сообщений, см. Ниже. |
| Максимальное кол-во сообщений при просмотре конечных точек   | maximumBrowseSize | INT | -1 | Ограничивает количество для потребления сообщений, при просмотре конечных точек используя Browse или JMX API. |
| Конвертер сообщений | messageConverter | STRING | null | Для использования  настраиваемых Spring org.springframework.jms.support.converter.MessageConverter для контроля за переводом из/в javax.jms.Message |
| Включает идентификаторы сообщений | messageIdEnabled | BOOL | true | При отправке указывает, следует ли добавлять идентификаторы сообщений. |
| Ссылка на контейнер сообщений слушателя | messageListenerContainerFactoryRef | STRING | null | Идентификатор в реестре MessageListenerContainerFactory используемый для определения, какой org.springframework.jms.listener.AbstractMessageListenerContainer использовать для потребления сообщений. Установка этого параметра автоматически выставит consumerType в значение Custom. |
| Включает оттиски времени при отправке сообщений | messageTimestampEnabled | BOOL | true | Указывает, должны ли оттиски времени по умолчанию включаться при отправке сообщений. |
| Пароль | password | STRING | null | Пароль для подключения. |
| Приоритет | priority | INT | 4 | если значения больше чем 1 то определяется приоритет сообщения при отправке (где 0 - самый низкий приоритет, а 9 - самый высокий). Опция "Включение возможности установки режимов QoS" также должна быть включена, чтобы эта опция работала. |
| Запрещать локальные публикации | pubSubNoLocal | BOOL | false | Указывает, следует ли запрещать доставку сообщений, опубликованных по собственному соединению. |
| Таймаут получения сообщений  | receiveTimeout | INT | 1000 | Таймаут получения сообщений (в миллисекундах). |
| Интервал между попытками восстановления | recoveryInterval | INT | 5000 | Указывает интервал между попытками восстановления. Например, при обновлении соединения, в миллисекундах. |
| Позволить отправлять ответное сообщение по тому же  месту назначения | replyToSameDestinationAllowed | BOOL | false | Разрешено ли потребителю JMS отправлять ответное сообщение по тому же  месту назначения,от которого оно получено. Это предотвращает бесконечный цикл, потребляя и отправляя назад то же самое сообщение. |
| Устанавливает уровень кэша по имени для ответа | replyToCacheLevelName | SELECT | CACHE_CONSUMER | Устанавливает уровень кэша по имени для ответа  потребителя при выполнении запроса / ответа по JMS. Эта опция применяется только при использовании постоянных очередей ответа (не временных). По умолчанию Брокер будет использовать CACHE_CONSUMER для эксклюзивного или совместного использования w / replyToSelectorName и CACHE_SESSION для общего доступа без replyToSelectorName . Для брокеров JMS, как IBM WebSphere, требуется чтобы этот параметр CACHE_NONE был установлен. CACHE_NONE не может использоваться с временными очередями. Должно использоваться более высокое значение: CACHE_CONSUMER или CACHE_SESSION. |
| Указывает JMS-селектор с использованием фиксированного имени | replyToDeliveryPersistent | STRING | null | Указывает JMS-селектор с использованием фиксированного имени, для фильтра своих собственных ответов от других при использовании общей очереди. |
| Стойкость для доставки ответов | replyToDeliveryPersistent | BOOL | true | Указывает использовать ли стойкую доставку для ответов по умолчанию. |
| Интервал между запросами проверки таймаута | requestTimeoutCheckerInterval | INT | 1000 | Указывает, как часто Брокер должен проверять наличие истекших по таймауту обменов при выполнении запроса  ответа по JMS. По умолчанию Брокер проверяет один раз в секунду.Интервал определяется переменной  Таймаут по ожиданию . |
| Управляющая программа | taskExecutor | STRING | null | Позволяет вам указывать пользовательский исполнитель задач для потребления сообщений. |
| Управляющая программа Spring 2.x | taskExecutorSpring2 | STRING | null | При использовании Spring 2.x с Брокером. Позволяет вам указывать пользовательский исполнитель задачи для потребления сообщений |
| Фабрика соединений JMS | templateConnectionFactory | STRING | null | Фабрика соединений JMS, используемая для отправки сообщений. |
| Менеджер транзакций | transactionManager | STRING | null | Менеджер транзакций Spring |
| Имя транзакции | transactionName | STRING | JmsConsumer[destinationName] | Имя транзакции |
| Таймаут транзакции | transactionTimeout | INT | null | Значение таймаута транзакции (в секундах), если используется транзактный режим.Транзакционный режим. |
| Ошибка передачи | transferException | BOOL | false | Если включено, и используется Message Reply messaging ( InOut ), а сбой на стороне потребителя, то ошибка Exception будет выслана обратно в ответ как javax.jms.ObjectMessage . Если клиентом является Брокер, Exception возвращается повторно. Это позволяет использовать Брокер JMS в качестве моста в маршрутизации - например, используя стойкие очереди для обеспечения устойчивой маршрутизации.Обратите внимание, что если у вас также включен Передача Обмена, этот вариант имеет приоритет. Исходный Exception на стороне может быть оберну во внешний Exception, таким как org.apache.camel.RuntimeCamelException при возврате продюсеру  |
| Передача обмена | transferExchange | BOOL | false | Можно передавать весь Обмен целиком, а не только тело и заголовки.Передаются следующие поля:In body, Out body, Fault body, In headers, Out headers, Fault headers, exchange properties, exchange exception.Объекты должны быть упорядочены. Брокер исключит любые неупорядоченные объекты и зарегистрирует их на уровне WARN. Вы должны включить эту опцию как на продюсере, так и на стороне потребителя. |
| Ошибка передачи | transferFault | BOOL | false | Если включено и используется Запрос/Ответ обмен сообщениями ( InOut ) и происходит сбой обмена с SOAP-ошибкой на стороне потребителя, то флаг ошибки на org.apache.camel.Message.isFault() будет отправлен обратно в ответе как JMS заголовок с с ключом JmsConstants.JMS_TRANSFER_FAULT . Если клиентом является Брокер, то флаг сбоя будет отправлен в org.apache.camel.Message.setFault(boolean). Включить при использовании компонентов Брокера, поддерживающие сбои SOAP, CXF или spring-ws. |
| Имя пользователя | username | STRING | null | Имя пользователя для фабрики соединителей. |
| Использовать идентификатор сообщения как идентификатор корреляции | useMessageIDAsCorrelationID | BOOL | false | Указывает, должен ли использоваться Уникальный идентификатор сообщения JMS  как Идентификатор корреляции JMS для InOut обмена сообщениями |


InWmqEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| WMQ Session Factory | sessionFactory | BEAN | null | Бин для подключения к WMQ(IMQ) |
| Максимальное кол-во потоков на batch | maxBatchThreads | INT | null |  |
| Имя удаленного менеджера очередей | remoteManager | STRING | null |  |
| Кол-во асинхронных потребителей | concurrentConsumers | INT | 1 |  |
| Не загружать заголовки | skipHeaders | BOOL | false | Пропустить загрузку заголовков и сразу загружать тело сообщения |
| Время ожидания сообщения между итерациями их получения | timeout | INT | 1000 |  |
| Размер буфера сообщений | bufferSize | INT | null | Возможность расширить максимальный объем сообщения |
| Размер пакета сообщений | batchSize | INT | 1 | Количество сообщений |
| Формат сообщения | format | STRING | null | Возможность указать формат сообщения |
| Добавить HEX сообщения в заголовок | generateHex | BOOL | false | Генерировать HEX сообщения. Будет добавлен в заголовок WMQ_MESSAGE_ID_HEX. |
| Добавить WMQ заголовки в заголовки сообщения | generateStr | BOOL | false | Добавить все заголовки WMQ сообщения в заголовки сообщения брокера и преобразовать в стороку. |
| Стойкость сообщений | persistence | BOOL | false | Стойкость сообщений |
| Разрешить не транзакционный режим | allowNonTransactedRoute | BOOL | false |  |
| Имя очереди для ответа | replyToQueueName | STRING |  | Настройка ответа для сообщения, выставляется совместно с 'Имя менеджера очередей для ответа (replyToQueueManagerName)' |
| Имя менеджера очередей для ответа | replyToQueueManagerName | STRING |  | Настройка ответа для сообщения, выставляется совместно с 'Имя очереди для ответа (replyToQueueName)' |
| Тип отчета | report | SELECT | 0 | Выбор содержания отчета |


OutAmber5EndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Режим отладки | bEnableAPIDebug | BOOL | false |  |
| Файл отладки | sDebuggingOutput | STRING | null | Вывод отладки в отдельный файл |
| Переподсоединяться после | iSocketMaximumCalls | INT | 0 | Значение, указывающее максимальное количество DCE-RPC вызовов, после выполнения которых библиотека автоматически выполняет переподсоединение к серверу. Если значение равно 0 , то переподсоединение не производится |
| Переподсоединяться через | iSocketInactivityInterval | INT | 0 | Значение (в секундах) максимального интервала между DCE-RPC вызовами, после истечения которого библиотека автоматически выполняет переподсоединение к серверу. Если значение равно 0 , то переподсоединение не производится |
| Отладка IO | bEnableSocketIODebug | BOOL | false | Значение true включает режим выдачи отладочных сообщений при выполнении DCE-RPC вызовов. Не рекомендуется использовать значение true при нагрузке ввиду большого объема выдаваемых отладочных сообщений |
| TCP KeepAlive | bEnableSocketKeepAlive | BOOL | false | Значение true включает режим TCP KeepAlive (периодическая посылка данных для контроля состояния) подключения к серверу |
| Таймаут операции | iSocketIOTimeout | INT | 0 | Значение (в секундах) максимального времени выполнения операции TCP ввода-вывода (подсоединение, чтение и запись данных), после истечения которого будет выброшена исключительная ситу- ация SocketTimeoutException. Если значение равно 0 , то установка максимального времени выполнения не производится |
| Авторизация | auth | BOOL | false |  |
| Тип авторизации | authType | INT | 3 |  |
| Функция авторизации | authFunc | INT | 0 |  |
| Издатель сертификата авторизации | authIssuer | STRING | null | Обязательно указать, если authType==0 |
| Серийный номер авторизации | authSerialNumber | STRING | null | Обязательно указать, если authType==0 |
| Идентификатор ключа авторизации | authKeyId | STRING | null | Обязательно указать, если authType==1 |
| Хэш сертификата авторизации | authCertHash | STRING | null | Обязательно указать, если authType==2 |
| Алиас сертификата авторизации | authAlias | STRING | null | Обязательно указать, если authType==3 |
| Пароль | password | STRING | null |  |
| Флаг операции | flag | INT | 0 |  |
| CN получателей | receiverSubjects | STRING | null |  |
| Флаг информации | info | INT | 0 |  |
| Расширения | extensions | STRING | null |  |
| Расширенное поле keyUsage | extKeyUsage | STRING | null |  |
| Политики | policies | STRING | false |  |
| KeyUsage | keyUsage | INT | 0 |  |
| Минимум подписей | minsigns | INT | 0 |  |
| Удалить подпись | nSignToDelete | INT | 0 |  |


OutCryptoproEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Алиас контейнера | alias | STRING | null | Обязательно |
| Пароль контейнера | password | STRING | null | Обязательно |
| Алгоритм | algName | STRING | null | Опционально для операций шифрования/расшифрования, по-умолчанию определяется на основе сертификата получателя, например GOST3410DH_2012_256 |
| Алгоритм шифрования | encAlgName | STRING | null | Опционально для операций шифрования/расшифрования, по-умолчанию GOST28147/CFB/NoPadding |


OutJMSEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Идентификатор клиента | clientId | STRING | null | Использовать JMS ID.Значение Идентификатора клиента должно быть уникально (в пределах сети) и может быть использовано для одного JMS подключения |
| Количество одновременных потребителей | concurrentConsumers | INT | 1 | Кол-во одновременно действующих потребителей может использоваться для запроса\ответа через JMS переменную "Ответ Одновременным Потребителям". По умолчанию предоставляется 1000 сообщений на пользователя. Подробнее см лимит выборки.  |
| Отключить синхронный ответ JMS-получателю | disableReplyTo | BOOL | false | В значении true будет работать как InOnly обмен с исключением в виде того, что JMS адрес для ответа заголовок выслан и не запрещен как в случае InOnly . Производитель не ждет ответа. Потребитель с этим параметром будет работать как InOnly. Может использоваться для привязки InOut запросов одной очереди к другой очереди так что последняя очередь отправит ответ обратно к оригинальному JMS адрес для ответа . |
| Максимальное кол-во одновременно действующих потребителей | maxConcurrentConsumers | INT | 1 | Кол-во одновременно действующих потребителей |
| Максимальное кол-во сообщений для задачи | maxMessagesPerTask | INT | -1 | Кол-во полученных сообщений после достижения которого задача будет завершена. По умолчанию -1 неограниченно. |
| Сохранение настроек QOS Сообщения | preserveMessageQos | BOOL | false | Установить true для использования QoS установок указанных для сообщения,вместо QoS установок конечного пользователя JMS.<ul>Касается заголовков:<li>Приоритет JMS</li><li>Режим доставки JMS</li><li>Истечение срока действия JMS</li></ul> Если не указаны то Брокер будет использовать значения конечного пользователя JMS.В контраст используется Включение возможности установки режимов QoS |
| Ответ JMS-получателю | replyTo | STRING | null | Предоставляет исключительный ответ JMS-получателю, который превалирует над любым входящим значением Messge.getJMSReplyTo().  |
| Ответ Одновременным Потребителям  | replyToConcurrentConsumers | INT | 1 | Указывает кол-во одновременно действующих потребителей использующих Запрос\Ответ через JMS |
| Указывает кол-во одновременно действующих потребителей | replyToMaxConcurrentConsumers | INT | 1 | Указывает кол-во одновременно действующих потребителей использующих Запрос\Ответ через JMS. Смотреть переменную "Максимальное кол-во сообщений" для задачи для масштабирования потока сообщений. |
| Указывает кол-во одновременно действующих потребителей во время таймаута | replyToOnTimeoutConcurrentConsumers | INT | 1 | Указывает кол-во одновременно действующих потребителей для продолжения маршрутизации по истечении времени сессии (таймаут) при использовании Запроса\Ответа по JMS |
| Переопределяет назначение JMS сообщения  | replyToOverride | STRING | null | Предоставляет исключительное ReplyTo назначение JMS сообщения, превалирующее над указанным в ReplyTo  |
| Используемый тип стратегии  | ReplyToType | SELECT | null | Позволяет явно указать какой тип стратегии использовать для очередей replyTo использующих Запрос\Ответ по JMS.Возможные значения: Temporary, Shared или Exclusive. По умолчанию Брокер использует Temporary. Если replyTo был сконфигурирован,то Shared используется по умолчанию. Очереди Shared имеют более низкую производительность в сравнении с остальными.  |
| Таймаут по ожиданию | requestTimeout | INT | 20000 | Указать таймаут по ожиданию ответа используя InOut Схему Обмена. Можно включать заголовок CamelJmsRequestTimeout чтобы переопределить конечное значение таймаута, тем самым получая индивидуальные значения таймаута на сообщениях. Смотреть "время жизни сообщений" и "Интервал между запросами проверки таймаут". |
| JMS Селектор | selector | STRING | null | Устанавливает JMS Селектор, основанный на SQL 92, используется для фильтрования сообщений в Брокере.Можно закодировать специальные символы как "=" так %3D. |
| Время жизни сообщений | timeToLive | INT | null | Время жизни сообщений в милисек. |
| Транзакционный режим | transacted | BOOL | false | Указывает транзакционный режим для отправки/получениясообщений используя Схему Обмена InOnly |
| Предварительное тестирование соединения | testConnectionOnStartup | BOOL | false | Включает предварительное тестирование соединения.Удостоверяет что все JMS потребители/продюсеры имеют подключение к JMS Брокеру.Если подключения нет будет выведено сообщение об ошибке. |
| Получать сообщения пока останавливается | acceptMessageWhileStopping | BOOL | false | Указывает получает ли потребитель сообщения пока останавливается.Если не  включить опцию и остановить JMS маршрутизацию во время работы , сообщения находящиеся в очередях будут отброшены и могут быть перемещены в  deadleterqueue JMS Брокера.Рекомендуется установить в  true. |
| Имя подтверждения JMS | acknowledgementModeName | SELECT | AUTO_ACKNOWLEDGE | Имя подтверждения JMS,одно из: SESSION_TRANSACTED, CLIENT_ACKNOWLEDGE, AUTO_ACKNOWLEDGE, DUPS_OK_ACKNOWLEDGE |
| Режим JMS подтверждения | acknowledgementMode | INT | -1 | Режим JMS подтверждения. Задается как целое число.Позволяет установить специфическое для поставщика расширение режима подтверждения.Для обычных режимов предпочтительно использовать Имя подтверждения JMS. |
| Позволяет отправлять пустые сообщения | allowNullBody | BOOL | true | Позволяет отправлять пустые сообщения.Если выставлено false и тело сообщения пустое, JMS Exception будет выведена ошибка. |
| Быстрая остановка отвечающего менеджера | allowReplyManagerQuickStop | BOOL | false | Если  DefaultMessageListanerContainer используемый в отвечающих менеджерах для requesteply обмена сообщениями разрешен  DefaultMessageListanerContainer.runningAllowed флаг для быстрой остановки в случае если линк ***JmsConfigurationisAcceptMessagesWhyleStopping() разрешен и CamelContext остановлен. Возможность быстрой остановки включена по умолчанию у обычных JMS получателей.Включить эту опцию для разрешения быстрой остановки на отвечающих менеджерах(reply managers) |
| Всегда копировать сообщения  | alwaysCopyMessage | BOOL | false | Если true, брокер делает копию JMS сообщения прошедшего к производителю на отправку.Копирование сообщения нужно когда установлен replyToDestinationSelectorName. Брокер установит "Всегда копировать сообщения"=true, если "replyToDestinationSelectorName" установлен. |
| Асинхронное потребление сообщений | asyncConsumer | BOOL | false | Для JMS потребителя продолжения обмена сообщения  асинхронно.Если включен, JMS потребитель может обрабатывать следующее  сообщение из JMS очереди, пока предыдущее обрабатывается асинхронно.Не работает с параметром Транзакционный режим=true. |
| Асинхронно стартовать листенер   | asyncStartListener | BOOL | false | Разрешает Стартовать  листенер  JMS потребителя сообщений асинхронно. |
| Асинхронно останавливать листенер | asyncStopListener | BOOL | false | Разрешает Остановить листенер  JMS потребителя сообщений асинхронно останавливая маршрут. |
| Автоматический старт контейнера получателя | autoStartup | BOOL | true | Указывает должен ли контейнер получателя стартовать автоматически. |
| Устанавливает уровень КЭШ  | cacheLevel | STRING | null | Устанавливает уровень КЭШ по ID для нижележащих ресурсов JMS. Подробнее в параметре "Название Уровня КЭШ". |
| Название Уровня КЭШ | cacheLevelName | SELECT | CACHE_AUTO | Устанавливает уровень КЭШ по имени для нижележащих ресурсов JMS.Разрешенные значения: CACHE_NONE, CACHE_CONNECTION, CACHE_SESSION, CACHE_CONSUMER. По умолчанию CACHE_AUTO См. и документация Spring и уровни КЭШ транзакций для получения дополнительной информации. |
| Фабрика соединений  | connectionFactory | BEAN | null | Установленная по умолчанию JMS фабрика соединений если ни одна из следующих не указана "Фабрика соединений JMS для потребления сообщений" и "Фабрика соединений JMS". |
| Тип используемого Spring JMS листенера | consumerType | SELECT | default | Тип используемого Spring JMS листенера. Разрешенные значения: SIMPLE, DEFAULT или CUSTOM. DEFAULT: org.springframework.jms.listener.DefaultMessageListenerContainer. SIMPLE: org.springframework.jms.listener.SimpleMessageListenerContainer. CUSTOM:MessageListenerContainerFactory заданный опцией messageListenerContainerFactoryRef  которая определяет какой org.springframework.jms.listener.AbstractMessageListenerContainer использовать. |
| Тип управляющей программы по умолчанию | defaultTaskExecutorType | SELECT | SimpleAsync | Определяет, какой тип TaskExecutor по умолчанию использовать в DefaultMessageListenerContainer для конечных точек потребителей и для ReplyTo конечных точек продюсера. Возможные значения: SimpleAsync (использует SimpleAsyncTaskExecutor Spring) или ThreadPool (ThreadPoolTaskExecutor). Если не задано, по умолчанию используется предыдущее поведение из КЭШа, пул потоков для конечных точек потребителей и SimpleAsync для ответов потребителей. Использование ThreadPool для уменьшения «мусорного потока» в гибких конфигурациях с динамическим увеличением и уменьшением количества одновременно работающих пользователей.  |
| Режим доставки | deliveryMode | SELECT | null | Определяет режим доставки, который будет использоваться. Возможные значения определены  javax.jms.DeliveryMode. Заголовок JMSDeliveryMode перезаписывает значение параметра |
| Стойкая доставка | deliveryPersistent | BOOL | true | Устанавливает использование стойкой доставки. |
| Назначение | destination | STRING | null | Указывает JMS объект назначения для использования в этой конечной точке. |
| Имя назначения | destinationName | STRING | null | Указывает JMS имя назначения для использования в этой конечной точке. |
| Определитель(разрешитель) назначения | destinationResolver | STRING | null | Подключаемый org.springframework.jms.support.destination.DestinationResolver, позволяющий использовать(пользовательский) разрешитель назначения. |
| Отключить “Время жизни” | disableTimeToLive | BOOL | false | Используйте этот параметр, чтобы принудительно отключить параметр "время жизни" сообщения.  |
| Стремительная загрузка JMS свойств | eagerLoadingOfProperties | BOOL | false | Включает стремительную загрузку JMS свойств как только получает сообщение,что может быть неэффективно т.к свойства могут быть JMS не затребованы.Используется в задачах тестирования.. |
| Обработчик ошибок | errorHandler | STRING | null | Указывается org.springframework.util.ErrorHandler и вовлекается в случае возникновения ошибок во время обработки сообщений. |
| Уровень логирования Обработчика ошибок | errorHandlerLoggingLevel | SELECT | WARN | Конфигурирует уровень логирования обработчика ошибок |
| Логирование стек-трейсов обработчиком ошибок  | errorHandlerLogStackTrace | BOOL | true | Включает логирование стек-трейсов обработчиком ошибок  |
| JMS слушатель ошибок | exceptionListener | STRING | null | Включает JMS слушатель ошибок JMS который будет уведомлен об ошибках нижележащих JMS. |
| Включение возможности установки режимов QoS | explicitQosEnabled | BOOL | false | Установить если Режим доставки JMS, priority или Время жизни сообщений QoS должны использоваться в отправке сообщений. |
| Открыть листенеры  | exposeListenerSession | BOOL | true | Указывает должны ли быть открыты листенеры во время потребления сообщений.  |
| Принудительно отправить оригинальное сообщение | forceSendOriginalMessage | BOOL | false | С использованием Сопоставления принятого сообщения JMS=false будет создано новое JMS сообщение для отправки в новому  JMS адресату *при значении true будет использоваться оригинальное сообщение. |
| Кол-во незанятых потребителей | idleConsumerLimit | INT | 1 | Указывает предельное количество незанятых потребителей в один момент времени. |
| Предел количества исполнений задания | idleTaskExecutionLimit | INT | 1 | Предел количества  исполнений задания без входящих сообщений.(исполнение во время простоя)По достижению предела, задание выключается,оставляя прием сообщений другим выполняющимся задачам.  |
| Включить  идентификатор JMS  сообщения | includeSentJMSMessageID | BOOL | false | Применим только в случае отправки с JMS назначением используя InOnly.Включение этой опции обогатит Обмен Брокера актуальным JMS идентификатором сообщения которое использовалось JMS клиентом когда отправлялось JMS адресату. |
| Включать ли все свойства заголовка JMSX | includeAllJMSXProperties | BOOL | false | Включать ли все свойства  заголовка JMSXxxx когда обрабатываются сообщения,  такие как JMSXAppID, и JMSXUserID. Не учитывается если используете headerFilterStrategy Стратегия фильтрации заголовков |
| Подключаемая стратегия для шифрования\дешифрования JMS ключей | jmsKeyFormatStrategy | SELECT | DEFAULT | Подключаемая стратегия для шифрования\дешифрования JMS ключей для совместимости с JMS спецификацией. Default:безопасно упорядочивает точки и дефисы. Passthrough: Оставляет ключ как есть. Подходит для использования с любым брокером JMS, который допускает ключи заголовка JMS, содержащие недопустимые символы. |
| Тип сообщения JMS | jmsMessageType | SELECT | null | Позволяет принудительно использовать javax.jms.Message реализацию для отправки JMS сообщений. Возможные значения: Bytes, Map, Object, Stream, Text. По умолчанию Брокер определяет, какой тип JMS сообщения использовать для типа In. Эта опция превалирует над поведением по умолчанию. |
| jmsOperations | jmsOperations | STRING | null | Позволяет использовать свой org.springframework.jms.core.JmsOperations интерфейс. Брокер использует JmsTemplate по умолчанию. Может использоваться для целей тестирования,смотреть документы API Spring. |
| Отложенное\Позднее Создание Менеджера Транзакций | lazyCreateTransactionManager | BOOL | true | Если true ,Брокер создаст JmsTransactionManager , в случае если  transactionManager не был внедрен включением опции Транзакционный режим=true. |
| Фабрика соединений JMS для потребления сообщений | listenerConnectionFactory | STRING | null | Фабрика соединений JMS используется для потребления сообщений. |
| Сопоставление принятого сообщения JMS | mapJmsMessage | BOOL | true | Указывает, следует ли Брокеру автоматически сопоставлять принятое сообщение JMS с соответствующим типом полезной нагрузки,как javax.jms.TextMessage , с java.lang. String.Подробнее о том, как работает сопоставление типов сообщений, см. Ниже. |
| Максимальное кол-во сообщений при просмотре конечных точек   | maximumBrowseSize | INT | -1 | Ограничивает количество для потребления сообщений, при просмотре конечных точек используя Browse или JMX API. |
| Конвертер сообщений | messageConverter | STRING | null | Для использования  настраиваемых Spring org.springframework.jms.support.converter.MessageConverter для контроля за переводом из/в javax.jms.Message |
| Включает идентификаторы сообщений | messageIdEnabled | BOOL | true | При отправке указывает, следует ли добавлять идентификаторы сообщений. |
| Ссылка на контейнер сообщений слушателя | messageListenerContainerFactoryRef | STRING | null | Идентификатор в реестре MessageListenerContainerFactory используемый для определения, какой org.springframework.jms.listener.AbstractMessageListenerContainer использовать для потребления сообщений. Установка этого параметра автоматически выставит consumerType в значение Custom. |
| Включает оттиски времени при отправке сообщений | messageTimestampEnabled | BOOL | true | Указывает, должны ли оттиски времени по умолчанию включаться при отправке сообщений. |
| Пароль | password | STRING | null | Пароль для подключения. |
| Приоритет | priority | INT | 4 | если значения больше чем 1 то определяется приоритет сообщения при отправке (где 0 - самый низкий приоритет, а 9 - самый высокий). Опция "Включение возможности установки режимов QoS" также должна быть включена, чтобы эта опция работала. |
| Запрещать локальные публикации | pubSubNoLocal | BOOL | false | Указывает, следует ли запрещать доставку сообщений, опубликованных по собственному соединению. |
| Таймаут получения сообщений  | receiveTimeout | INT | 1000 | Таймаут получения сообщений (в миллисекундах). |
| Интервал между попытками восстановления | recoveryInterval | INT | 5000 | Указывает интервал между попытками восстановления. Например, при обновлении соединения, в миллисекундах. |
| Устанавливает уровень кэша по имени для ответа | replyToCacheLevelName | SELECT | CACHE_CONSUMER | Устанавливает уровень кэша по имени для ответа  потребителя при выполнении запроса / ответа по JMS. Эта опция применяется только при использовании постоянных очередей ответа (не временных). По умолчанию Брокер будет использовать CACHE_CONSUMER для эксклюзивного или совместного использования w / replyToSelectorName и CACHE_SESSION для общего доступа без replyToSelectorName . Для брокеров JMS, как IBM WebSphere, требуется чтобы этот параметр CACHE_NONE был установлен. CACHE_NONE не может использоваться с временными очередями. Должно использоваться более высокое значение: CACHE_CONSUMER или CACHE_SESSION. |
| Указывает JMS-селектор с использованием фиксированного имени | replyToDeliveryPersistent | STRING | null | Указывает JMS-селектор с использованием фиксированного имени, для фильтра своих собственных ответов от других при использовании общей очереди. |
| Стойкость для доставки ответов | replyToDeliveryPersistent | BOOL | true | Указывает использовать ли стойкую доставку для ответов по умолчанию. |
| Интервал между запросами проверки таймаута | requestTimeoutCheckerInterval | INT | 1000 | Указывает, как часто Брокер должен проверять наличие истекших по таймауту обменов при выполнении запроса  ответа по JMS. По умолчанию Брокер проверяет один раз в секунду.Интервал определяется переменной  Таймаут по ожиданию . |
| Управляющая программа | taskExecutor | STRING | null | Позволяет вам указывать пользовательский исполнитель задач для потребления сообщений. |
| Управляющая программа Spring 2.x | taskExecutorSpring2 | STRING | null | При использовании Spring 2.x с Брокером. Позволяет вам указывать пользовательский исполнитель задачи для потребления сообщений |
| Фабрика соединений JMS | templateConnectionFactory | STRING | null | Фабрика соединений JMS, используемая для отправки сообщений. |
| Менеджер транзакций | transactionManager | STRING | null | Менеджер транзакций Spring |
| Имя транзакции | transactionName | STRING | JmsConsumer[destinationName] | Имя транзакции |
| Таймаут транзакции | transactionTimeout | INT | null | Значение таймаута транзакции (в секундах), если используется транзактный режим.Транзакционный режим. |
| Ошибка передачи | transferException | BOOL | false | Если включено, и используется Message Reply messaging ( InOut ), а сбой на стороне потребителя, то ошибка Exception будет выслана обратно в ответ как javax.jms.ObjectMessage . Если клиентом является Брокер, Exception возвращается повторно. Это позволяет использовать Брокер JMS в качестве моста в маршрутизации - например, используя стойкие очереди для обеспечения устойчивой маршрутизации.Обратите внимание, что если у вас также включен Передача Обмена, этот вариант имеет приоритет. Исходный Exception на стороне может быть оберну во внешний Exception, таким как org.apache.camel.RuntimeCamelException при возврате продюсеру  |
| Передача обмена | transferExchange | BOOL | false | Можно передавать весь Обмен целиком, а не только тело и заголовки.Передаются следующие поля:In body, Out body, Fault body, In headers, Out headers, Fault headers, exchange properties, exchange exception.Объекты должны быть упорядочены. Брокер исключит любые неупорядоченные объекты и зарегистрирует их на уровне WARN. Вы должны включить эту опцию как на продюсере, так и на стороне потребителя. |
| Ошибка передачи | transferFault | BOOL | false | Если включено и используется Запрос/Ответ обмен сообщениями ( InOut ) и происходит сбой обмена с SOAP-ошибкой на стороне потребителя, то флаг ошибки на org.apache.camel.Message.isFault() будет отправлен обратно в ответе как JMS заголовок с с ключом JmsConstants.JMS_TRANSFER_FAULT . Если клиентом является Брокер, то флаг сбоя будет отправлен в org.apache.camel.Message.setFault(boolean). Включить при использовании компонентов Брокера, поддерживающие сбои SOAP, CXF или spring-ws. |
| Имя пользователя | username | STRING | null | Имя пользователя для фабрики соединителей. |
| Использовать идентификатор сообщения как идентификатор корреляции | useMessageIDAsCorrelationID | BOOL | false | Указывает, должен ли использоваться Уникальный идентификатор сообщения JMS  как Идентификатор корреляции JMS для InOut обмена сообщениями |


InKafkaProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Бин KafkaConfiguration | configuration | BEAN | null | Позволяет сконфигурировать компонент взаимоействия с Kafka с помощью бина типа KafkaConfiguration. |
| Брокеры | brokers | STRING | null | URL брокеров которые будет использовать Kafka в формате host1:port1,host2:port2. Данная опция аналогична опции bootstrap.servers, описанной в докементации Kafka. |
| Использовать глобальные SSL параметры | useGlobalSslContextParameters | BOOL | false | Включить использование глобальных настроек SSL. |
| Прерывать работу при первой ошибке | breakOnFirstError | BOOL | false | Эта опция определяет что происходит с точкой входа если во время обработки сообщения происходит ошибка. Если значение параметра false, то точка входа продолжит обработку со следующим сообщением. Если значение параметра true, то точка входа будет пытаться прочитать и обработать сообщение заного, что может привести к бесконечной обработки одного сообщения. Данные задачи рекомендуется решать обработчиком ошибок домена. |
| Разрешить выполнять фиксацию вручную | allowManualCommit | BOOL | false | Определяет разрешено или нет исопльзование KafkaManualCommit. |
| Бин фабрики мануальных фиксаций | kafkaManualCommitFactory | BEAN | null | Ссылка на бин типа kafkaManualCommitFactory |
| Брокеры | brokers | STRING | null | Список пар хост/порт, используемых для установления начального соединения с кластером Kafka. Клиент будет использовать все серверы независимо от того, какие серверы указаны здесь для начальной загрузки - этот список влияет только на начальные хосты, используемые для обнаружения полного набора серверов. Этот список должен иметь вид host1: port1, host2: port2, .... Поскольку эти серверы просто используются для начального подключения, чтобы обнаружить полное членство в кластере (которое может изменяться динамически), этот список не должен содержать полный набор из серверов |
| Идентификатор клиента | clientId | STRING | null | Указанная пользователем строка, отправляемая в каждом запросе для помощи в отслеживании вызовов. Он должен логически идентифицировать приложение, делающее запрос |
| Максимальное время ожидания в миллисекундах при повторном подключении к брокеру | reconnectBackoffMaxMs | INT | 1000 | Максимальное время ожидания в миллисекундах при повторном подключении к брокеру, который неоднократно не мог подключиться. |
| Позволить выполнять фиксацию вручную | allowManualCommit | BOOL | false | Разрешить ли выполнять фиксацию вручную через KafkaManualCommit. Если эта опция включена, то экземпляр KafkaManualCommit сохраняется в заголовке сообщения Exchange, что позволяет конечным пользователям получать доступ к этому API и выполнять фиксацию смещения (перемещения указателя последнего прочитанного сообщения) вручную через потребителя Kafka. |
| Позволить автоматическую фиксацию смещения | autoCommitEnable | BOOL | true | Если true, периодически фиксировать в ZooKeeper смещение уже извлеченных сообщений. Это зафиксированное смещение будет использоваться при сбое процесса в качестве начальной позиции |
| Интервал автоматической фиксации | autoCommitIntervalMs | INT | 5000 | Частота в мс, в которую смещения фиксируются в координаторе zookeeper |
| Выполнять ли при остановке явную автоматическую фиксацию | autoCommitOnStop | SELECT | sync | Выполнять ли при остановке явную автоматическую фиксацию, чтобы убедиться, что у брокера есть фиксация из последнего использованного сообщения. Для этого требуется, чтобы опция autoCommitEnable была включена. Возможные значения: sync, async или none |
| Автоматический сброс смещения | autoOffsetReset | SELECT | latest | Что делать, если в координаторе ZooKeeper нет начального смещения или если смещение выходит за пределы диапазона: earliest: автоматически сбрасывает смещение на самое раннее; latest: автоматически сбрасывает смещение на самое позднее; fail: сбрасывать исключение потребителю |
| Прерывать при первой ошибке | breakOnFirstError | BOOL | false | Этот параметр управляет тем, что происходит при неудачном обмене. Если параметр имеет значение false, то продолжает переходить к следующему сообщению и обрабатывает его. Если параметр имеет значение true, то происходит прерывание и выполняется откат назад к смещению сообщения, вызвавшего сбой, и повторной попытке обработать это сообщение. Однако это может привести к бесконечной обработке одного и того же сообщения, если каждый раз оно будет вызывать сбой. Поэтому рекомендуется использовать обработчика ошибок Camel |
| Соеденить с обработчиком ошибок | bridgeErrorHandler | BOOL | false | Позволяет соединить с обработчиком ошибок маршрутизации Camel, что означает, что любые исключения, возникшие при попытке перехватить входящие сообщения или тому подобное, теперь будут обрабатываться обработчиком ошибок маршрутизации. По умолчанию будет использоваться org.apache.camel.spi.ExceptionHandler для обработки исключений, которые будут регистрироваться на уровне WARN или ERROR и игнорироваться |
| Автоматически проверять CRC32 | checkCrcs | BOOL | true | Автоматически проверять CRC32 используемых записей. Это гарантирует, что сообщения не будут повреждены как на проводе, так и на диске. Эта проверка добавляет некоторые накладные расходы, поэтому она может быть отключена в случаях, требующих высокой производительности |
| Таймаут клиентских запросов | consumerRequestTimeoutMs | INT | 40000 | Конфигурация контролирует максимальное количество времени, которое клиент будет ожидать ответа на запрос. Если ответ не получен до истечения времени ожидания, клиент при необходимости повторно отправит запрос или не выполнит запрос, если повторные попытки исчерпаны |
| Количество подписчиков | consumersCount | INT | 1 | Количество соединений с сервером kafka |
| Количество потоков подписчика | consumerStreams | INT | 10 | Количество одновременных потребителей на потребителя |
| Максимальный объем данных для запроса на получение | fetchMaxBytes | INT | 52428800 | Максимальный объем данных, которые сервер должен вернуть для запроса на получение. Это не абсолютный максимум. Если первое сообщение в первом непустом разделе выборки больше этого значения, сообщение все равно будет возвращается, чтобы убедиться, что процесс может быть выполнен. Максимальный размер сообщения, принимаемого брокером, определяется через message.max.bytes (конфигурация брокера) или max.message.bytes (конфигурация темы). Обратите внимание, что параллельно выполняется несколько выборок |
| Минимальный объем данных для запроса на получение | fetchMinBytes | INT | 1 | Минимальный объем данных, которые сервер должен вернуть для запроса на полчение. Если данных недостаточно, запрос будет ожидать накопления такого количества данных, прежде чем ответить на запрос |
| Максималное время ожидания запроса на получение | fetchWaitMaxMs | INT | 500 | Максимальное время блокировки сервера до ответа на запрос получения, если не хватает данных для немедленного удовлетворения fetch.min.bytes |
| Идентификатор группы | groupId | STRING | null | Строка, которая однозначно идентифицирует группу процессов, к которым она принадлежит. Устанавливая один и тот же идентификатор группы, несколько процессов указывают, что они все являются частью одной и той же группы. Необходима для подписчиков |
| Ожидаемое время между пульсами для координатора группы | heartbeatIntervalMs | INT | 3000 | Ожидаемое время между ударами пульса для координатора потребителя при использовании средств управления группой Kafka. Сердцебиение используется для обеспечения того, чтобы сеанс потребителя оставался активным, и для облегчения восстановления баланса, когда новые потребители присоединяются или покидают группу. Значение должно быть установлено ниже, чем session.timeout.ms, но обычно оно должно быть установлено не выше 1/3 этого значения. Его можно отрегулировать еще ниже, чтобы контролировать ожидаемое время нормальных перебалансировок |
| kafkaHeaderDeserializer | kafkaHeaderDeserializer | BEAN | null | Устанавливает пользовательский KafkaHeaderDeserializer для десериализации значений заголовков kafka в значения заголовков camel |
| Ключ десериализатора | keyDeserializer | STRING | org.apache.kafka.common.serialization.StringDeserializer | Класс десериализатора для ключа, который реализует интерфейс десериализатора |
| Максимальный объем данных на раздел, который вернет сервер | maxPartitionFetchBytes | INT | 1048576 | Максимальный объем данных на раздел, который вернет сервер. Максимальный общий объем памяти, используемый для запроса, будет #partitions max.partition.fetch.bytes. Этот размер должен быть не меньше максимального размера сообщения, разрешенного сервером, иначе издатель может отправлять сообщения больше, чем может извлечь подписчик. Если это произойдет, подписчик может застрять, пытаясь получить большое сообщение в определенном разделе |
| Максимальная задержка между вызовами poll() | maxPollIntervalMs | INT | null | Максимальная задержка между вызовами poll() при использовании управления группами подписчиков. Это накладывает верхнюю границу на количество времени, в течение которого подписчик может бездействовать до получения большего количества записей. Если poll() не вызывается до истечения этого тайм-аута, то считается, что потребитель потерпел неудачу, и группа будет перебалансирована, чтобы переназначить разделы другому участнику |
| Максимальное количество записей, возвращаемых за один вызов poll () | maxPollRecords | INT | 500 | Максимальное количество записей, возвращаемых за один вызов poll () |
| Репозиторий смещений | offsetRepository | STRING | null | Репозиторий смещений, используемый для локального хранения смещения каждого раздела темы. Определение одного из них отключит автофиксацию |
| Имя класса стратегии назначения разделов | partitionAssignor | STRING | org.apache.kafka.clients.consumer.RangeAssignor | Имя класса стратегии назначения разделов, которое клиент будет использовать для распределения владения разделами среди пользовательских экземпляров при использовании управления группами |
| Тайм-аут, используемый при опросе подписчика | pollTimeoutMs | INT | 5000 | Тайм-аут, используемый при опросе подписчика |
| Читать с начала или с конца при запуске | seekTo | SELECT | null | Устанавливает, будет ли подписчик читать с начала или с конца при запуске: beginning: читать с начала; end: читать с конца |
| Тайм-аут сессии | sessionTimeoutMs | INT | 10000 | Тайм-аут, используемый для обнаружения сбоев при использовании средств управления группами Kafka |
| Является ли тема шаблоном | topicIsPattern | BOOL | false | Является ли тема шаблоном (регулярное выражение). Это может быть использовано для подписки на динамическое количество тем, соответствующих шаблону |
| Класс десериализатора для значения, реализующего интерфейс десериализатора | valueDeserializer | STRING | org.apache.kafka.common.serialization.StringDeserializer | Класс десериализатора для значения, реализующего интерфейс десериализатора |
| Обработчик исключений | exceptionHandler | BEAN | null | Позволить потребителю использовать пользовательский ExceptionHandler. Обратите внимание, что если опция bridgeErrorHandler включена, то эта опция не используется. По умолчанию потребитель будет иметь дело с исключениями, которые будут регистрироваться на уровне WARN или ERROR и игнорироваться |
| Устанавливает модель обмена, когда потребитель создает обмен | exchangePattern | BEAN | null | Устанавливает модель обмена, когда потребитель создает обмен |
| Синхронная обработка | synchronous | BOOL | false | Устанавливает, должна ли строго использоваться синхронная обработка, или Camel может использовать асинхронную обработку (если поддерживается) |
| Перехватчики для издателя | interceptorClasses | STRING | null | Устанавливает перехватчики для издателя. Перехватчики издателя должны быть классами, реализующими org.apache.kafka.clients.producer.ProducerInterceptor, должны быть классами, реализующими org.apache.kafka.clients.consumer.ConsumerInterceptor Обратите внимание, что если вы использовать перехватчик Producer для создания исключения приведения класса во время выполнения |
| Время ожидания потока входа в систему между попытками обновления | kerberosBeforeReloginMin Time | INT | 60000 | Время ожидания потока входа в систему между попытками обновления |
| Путь команды Kerberos kinit | kerberosInitCmd | STRING | /usr/bin/kinit | Путь команды Kerberos kinit. По умолчанию это /usr/bin/kinit |
| Список правил для отображения основных имен в короткие имена | kerberosPrincipalToLocal Rules | STRING | defaultValue | Список правил для отображения основных имен в короткие имена (обычно имена пользователей операционной системы). Правила оцениваются по порядку, и первое правило, которое соответствует имени участника, используется для сопоставления его с коротким именем. Все последующие правила в списке игнорируются. По умолчанию имена участников в форме username/hostnameREALM сопоставляются с именем пользователя. Для получения более подробной информации о формате, пожалуйста, смотрите авторизацию безопасности и ACL. Несколько значений могут быть разделены запятой |
| Процент случайного джиттера, добавленного ко времени обновления | kerberosRenewJitter | INT | 0.05 | Процент случайного джиттера, добавленного ко времени обновления |
| kerberosRenewWindowFactor | kerberosRenewWindowFactor | INT | 0.8 | Поток входа в систему будет находиться в спящем режиме до тех пор, пока не будет достигнут указанный интервал времени с момента последнего обновления до истечения срока действия билета, после чего он будет пытаться обновить билет |
| saslJaasConfig | saslJaasConfig | STRING | null | Предоставьте параметр kafka sasl.jaas.config. Пример: org.apache.kafka.common.security.plain.PlainLoginModule требуется username=USERNAME password=PASSWORD; |
| Имя Kerberos | saslKerberosServiceName | STRING | null | Основное имя Kerberos, под которым запускается Kafka. Это можно определить либо в конфигурации JAAS Kafka, либо в конфигурации Kafka |
| Механизм sasl | saslMechanism | STRING | GSSAPI | Используемый механизм простого уровня проверки подлинности и уровня безопасности (SASL). Действительные значения см. по адресу http://www.iana.org/assignments/sasl-mechanisms/sasl-mechanisms.xhtml |
| Протокол безопасности | securityProtocol | SELECT | PLAINTEXT | Протокол, используемый для связи с брокерами. В настоящее время поддерживаются только PLAINTEXT и SSL |
| Список комплектов шифров | sslCipherSuites | STRING | null | Список комплектов шифров. Это именованная комбинация аутентификации, шифрования, MAC и алгоритма обмена ключами, используемая для согласования настроек безопасности для сетевого подключения с использованием сетевого протокола TLS или SSL. По умолчанию все доступные комплекты шифров поддерживаются |
| sslContextParameters | sslContextParameters | BEAN | null | Конфигурация SSL с использованием объекта Camel SSLContextParameters. Если настроена, она применяется перед другими параметрами конечной точки SSL |
| Список протоколов, включенных для соединений SSL | sslEnabledProtocols | STRING | TLSv1.2,TLSv1.1,TLSv1 | Список протоколов, включенных для соединений SSL. TLSv1.2, TLSv1.1 и TLSv1 включены по умолчанию |
| Алгоритм идентификации конечной точки | sslEndpointAlgorithm | STRING | null | Алгоритм идентификации конечной точки для проверки имени хоста сервера с использованием сертификата сервера |
| Алгоритм, используемый фабрикой диспетчера ключей для соединений SSL | sslKeymanagerAlgorithm | STRING | SunX509 | Алгоритм, используемый фабрикой диспетчера ключей для соединений SSL. Значение по умолчанию - алгоритм фабрики диспетчера ключей, настроенный для виртуальной машины Java |
| Пароль закрытого ключа в файле хранилища ключей | sslKeyPassword | STRING | null | Пароль закрытого ключа в файле хранилища ключей. Это необязательно для клиента |
| Расположение файла хранилища ключей | sslKeystoreLocation | STRING | null | Расположение файла хранилища ключей. Это необязательно для клиента и может использоваться для двусторонней аутентификации для клиента |
| Пароль хранилища для файла хранилища ключей | sslKeystorePassword | STRING | null | Пароль хранилища для файла хранилища ключей. Это необязательно для клиента и требуется только в том случае, если настроен ssl.keystore.location |
| Формат файла хранилища ключей | sslKeystoreType | STRING | JKS | Формат файла хранилища ключей. Это необязательно для клиента. Значение по умолчанию - JKS |
| Протокол ssl | sslProtocol | STRING | TLS | Протокол SSL, используемый для генерации SSLContext. Значение по умолчанию - TLS, что подходит для большинства случаев. Допустимые значения в последних JVM - TLS, TLSv1.1 и TLSv1.2. Могут поддерживаться SSL, SSLv2 и SSLv3. в старых JVM, но их использование не рекомендуется из-за известных уязвимостей безопасности |
| Имя поставщика безопасности ssl | sslProvider | STRING | null | Имя поставщика безопасности, используемого для соединений SSL. Значение по умолчанию - это поставщик безопасности по умолчанию для JVM |
| Алгоритм, используемый фабрикой диспетчера доверия для соединений SSL | sslTrustmanagerAlgorithm | STRING | PKIX | Алгоритм, используемый фабрикой диспетчера доверия для соединений SSL. Значением по умолчанию является алгоритм фабрики диспетчера доверия, настроенный для виртуальной машины Java |
| Расположение файла доверенного хранилища | sslTruststoreLocation | STRING | null | Расположение файла доверенного хранилища |
| Пароль для файла хранилища доверенных сертификатов | sslTruststorePassword | STRING | null | Пароль для файла хранилища доверенных сертификатов |
| Формат файла хранилища доверенных сертификатов | sslTruststoreType | STRING | JKS | Формат файла хранилища доверенных сертификатов. Значение по умолчанию - JKS |


OutKafkaProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Бин KafkaConfiguration | configuration | BEAN | null | Позволяет сконфигурировать компонент взаимоействия с Kafka с помощью бина типа KafkaConfiguration. |
| Брокеры | brokers | STRING | null | URL брокеров которые будет использовать Kafka в формате host1:port1,host2:port2. Данная опция аналогична опции bootstrap.servers, описанной в докементации Kafka. |
| Использовать глобальные SSL параметры | useGlobalSslContextParameters | BOOL | false | Включить использование глобальных настроек SSL. |
| Брокеры | brokers | STRING | null | Список пар хост/порт, используемых для установления начального соединения с кластером Kafka. Клиент будет использовать все серверы независимо от того, какие серверы указаны здесь для начальной загрузки - этот список влияет только на начальные хосты, используемые для обнаружения полного набора серверов. Этот список должен иметь вид host1: port1, host2: port2, .... Поскольку эти серверы просто используются для начального подключения, чтобы обнаружить полное членство в кластере (которое может изменяться динамически), этот список не должен содержать полный набор из серверов |
| Идентификатор клиента | clientId | STRING | null | Указанная пользователем строка, отправляемая в каждом запросе для помощи в отслеживании вызовов. Он должен логически идентифицировать приложение, делающее запрос |
| Максимальное время ожидания в миллисекундах при повторном подключении к брокеру | reconnectBackoffMaxMs | INT | 1000 | Максимальное время ожидания в миллисекундах при повторном подключении к брокеру, который неоднократно не мог подключиться. |
| Игнорировать настройку заголовка KafkaConstants.TOPIC входящего сообщения | bridgeEndpoint | BOOL | false | Если параметр имеет значение true, то KafkaProducer будет игнорировать настройку заголовка KafkaConstants.TOPIC входящего сообщения |
| Память, которую издатель может использовать для буферизации записей | bufferMemorySize | INT | 33554432 | Общее количество байтов памяти, которые издатель может использовать для буферизации записей, ожидающих отправки на сервер. Если записи отправляются быстрее, чем они могут быть доставлены на сервер, издатель либо заблокирует, либо сгенерирует исключение на основе предпочтения, указанного в block.on.buffer.full. Этот параметр должен приблизительно соответствовать общему объему памяти, который будет использовать издатель, но это не жесткая граница, так как не вся память, используемая издателем, используется для буферизации. Некоторая дополнительная память будет использоваться для сжатия (если сжатие включено), а также для поддержки запросов в полете |
| Обнаружение попыток отправки сообщения обратно в ту же тему | circularTopicDetection | BOOL | true | Если параметр имеет значение true, то издатель определит, была ли попытка отправки сообщения обратно в ту же тему, из которой оно может быть получено, если сообщение было оригинальным от потребителя kafka. Если заголовок KafkaConstants.TOPIC совпадает с исходной темой-потребителем kafka, то настройка заголовка игнорируется и используется тема конечной точки издателя. Другими словами, это позволяет избежать отправки того же сообщения туда, откуда оно пришло. Этот параметр не используется, если для параметра bridgeEndpoint задано значение true |
| Кодек сжатия | compressionCodec | SELECT | none | Этот параметр позволяет указать кодек сжатия для всех данных, созданных этим издателем. Допустимые значения: none, gzip и snappy |
| Время закрытия незанятых соединений | connectionMaxIdleMs | INT | 540000 | Количество миллисекунд, после истечения которых произойдет закрытие незанятых соединений |
| Включить идемпотентность | enableIdempotence | BOOL | false | Если установлено значение «истина», издатель будет гарантировать, что в поток записывается ровно одна копия каждого сообщения. Если установлено значение «false», повторные попытки издателя могут записать дубликаты повторного сообщения в потоке. Если для этого параметра установлено значение true, для параметра max.in.flight.requests.per.connection будет задано значение 1, а повторные попытки не могут быть равны нулю, а для подтверждения должно быть задано значение «all» |
| Сериализатор заголовка kafka | kafkaHeaderSerializer | BEAN | null | Устанавливает пользовательский KafkaHeaderDeserializer для сериализации значений заголовков camel в значения заголовков kafka |
| Ключ | key | STRING | null | Ключ записи (или ноль, если ключ не указан). Если этот параметр был настроен, он имеет приоритет над заголовком KafkaConstants#KEY |
| Класс сериализатора для ключей | keySerializerClass | STRING | org.apache.kafka.common.serialization.StringSerializer | Класс сериализатора для ключей (по умолчанию тот же, что и для сообщений, если ничего не указано) |
| Задержка издателя для разрешения отправки других записей | lingerMs | INT | 0 | Издатель группирует все записи, которые поступают между передачами запроса, в один пакетный запрос. Обычно это происходит только под нагрузкой, когда записи поступают быстрее, чем их можно отправить. Однако в некоторых случаях клиент может захотеть уменьшить количество запросов даже при умеренной нагрузке. Этот параметр выполняет это путем добавления небольшого количества искусственной задержки, вместо того, чтобы немедленно отправлять запись, издатель будет ждать до заданной задержки, чтобы разрешить отправку других записей, чтобы посылки могли быть объединены вместе. Это можно рассматривать как аналог алгоритма Nagle в TCP. Этот параметр задает верхнюю границу задержки для пакетной обработки: как только мы получим количество записей batch.size для раздела, оно будет отправлено немедленно независимо от этого параметра, однако, если для этого раздела будет накоплено меньше этого количества байтов, мы будем ' задержаться на указанное время в ожидании появления новых записей. Эта настройка по умолчанию равна 0 (то есть без задержки). Например, установка linger.ms = 5 приведет к уменьшению количества отправленных запросов, но увеличит задержку до 5 мс для записей, отправляемых при отсутствии нагрузки |
| Как долго будет блокироваться отправка | maxBlockMs | INT | 60000 | Конфигурация контролирует, как долго будет блокироваться отправка на kafka. Эти методы могут быть заблокированы по нескольким причинам. Например, буфер заполнен, метаданные недоступны. Эта конфигурация накладывает максимальное ограничение на общее время, затрачиваемое на выборку метаданных, сериализацию ключа и значения, разделение и выделение буферной памяти при выполнении send (). В случае partitionsFor () эта конфигурация налагает максимальный порог времени на ожидание метаданных |
| Максимальное количество неподтвержденных запросов | maxInFlightRequest | INT | 5 | Максимальное количество неподтвержденных запросов, которые клиент отправит на одно соединение перед блокировкой. Обратите внимание, что если для этого параметра задано значение больше 1 и отправка не удалась, существует риск переупорядочения сообщений из-за повторных попыток (т.е. если повторные попытки включены) |
| Максимальный размер запроса | maxRequestSize | INT | 1048576 | Максимальный размер запроса. Это также ограничение максимального размера записи. Обратите внимание, что у сервера есть свой собственный предел размера записи, который может отличаться от этого. Этот параметр ограничит количество пакетов записей, которые издатель отправит за один запрос, чтобы избежать отправки огромных запросов |
| Период обновления метаданных | metadataMaxAgeMs | INT | 300000 | Период времени в миллисекундах, после которого мы принудительно обновляем метаданные, даже если мы не видели каких-либо изменений лидерства в разделах, чтобы заранее обнаружить каких-либо новых брокеров или разделов |
| Список классов для использования в качестве репортеров метрик | metricReporters | STRING | null | Список классов для использования в качестве репортеров метрик. Реализация интерфейса MetricReporter позволяет подключать классы, которые будут уведомлены о создании новой метрики. JmxReporter всегда включен для регистрации статистики JMX |
| Временное окно для выборки метрик | metricsSampleWindowMs | INT | 30000 | Временное окно (в миллисекундах) для выборки метрик |
| Количество выборок для вычисления метрик | noOfMetricsSample | INT | 2 | Количество выборок, поддерживаемых для вычисления метрик |
| Разделитель | partitioner | STRING | org.apache.kafka.clients.producer.internals.DefaultPartitioner | Класс разделителя для разделения сообщений между подтемами. Разделитель по умолчанию основан на хэше ключа |
| Ключ разделителя | partitionKey | INT | null | Раздел, в который будет отправлена ​​запись (или ноль, если раздел не указан). Если этот параметр был настроен, он имеет приоритет над ссылкой заголовка KafkaConstantsPARTITION_KEY |
| Размер партии издателя | producerBatchSize | INT | 16384 | Издатель будет пытаться объединить записи вместе в меньшее количество запросов при каждой отправке нескольких записей в один и тот же раздел. Это помогает повысить производительность как на клиенте, так и на сервере. Эта конфигурация контролирует размер пакета по умолчанию в байтах. Никаких попыток будет сделано для пакетных записей, превышающих этот размер. Запросы, отправленные брокерам, будут содержать несколько пакетов, по одному для каждого раздела с данными, доступными для отправки. Небольшой размер пакета сделает пакетирование менее распространенным и может снизить пропускную способность (размер пакета равен нулю). полностью отключит пакетирование.) Очень большой размер пакета может использовать память немного более расточительно, так как мы всегда будем выделять буфер указанного размера пакета в ожидании дополнительных записей |
| Максимальное количество сообщений в буфере очереди | queueBufferingMaxMessages | INT | 10000 | Максимальное количество неотправленных сообщений, которые могут быть помещены в очередь издателя при использовании асинхронного режима, прежде чем либо необходимо заблокировать издателя, либо данные должны быть отброшены |
| Размер приемного буфера TCP | receiveBufferBytes | INT | 65536 | Размер приемного буфера TCP (SO_RCVBUF) для использования при чтении данных |
| Время ожидания перед попыткой переподключения к данному хосту | reconnectBackoffMs | INT | 50 | Количество времени ожидания перед попыткой переподключения к данному хосту. Это позволяет избежать повторного подключения к хосту в замкнутом цикле. Этот откат применяется ко всем запросам, отправленным брокеру |
| Cохранять ли результаты RecordMetadata после отправки в Kafka | recordMetadata | BOOL | true | Должен ли издатель сохранять результаты RecordMetadata после отправки в Kafka. Результаты сохраняются в списке, содержащем метаданные RecordMetadata. Список хранится в заголовке с ключевой ссылкой KafkaConstantsKAFKA_RECORDMETA |
| Количество подтверждений, требуемых издателем для завершения запроса | requestRequiredAcks | STRING | 1 | Количество подтверждений, которые издатель требует получить от лидера, прежде чем считать запрос завершенным. Это контролирует долговечность отправляемых записей. Следующие настройки являются общими: acks = 0 Если установлено в ноль, то издатель вообще не будет ждать никакого подтверждения от сервера. Запись будет немедленно добавлена ​​в буфер сокета и будет считаться отправленной. Невозможно гарантировать, что сервер получил запись в этом случае, и конфигурация повторных попыток не вступит в силу (поскольку клиент обычно не знает о каких-либо сбоях). Смещение, возвращаемое для каждой записи, всегда будет установлено равным -1. acks = 1 Это будет означать, что лидер записывает запись в свой локальный журнал, но отвечает, не ожидая полного подтверждения от всех подписчиков. В этом случае, если лидер потерпит неудачу сразу после подтверждения записи, но до того, как подписчики воспроизведут ее, запись будет потеряна. acks = all Это означает, что руководитель будет ожидать полного набора синхронных реплик для подтверждения записи. Это гарантирует, что запись не будет потеряна, пока хотя бы одна синхронная реплика остается в живых. Это самая сильная доступная гарантия. |
| Тайм-аут запросов | requestTimeoutMs | INT | 305000 | Время, в течение которого брокер будет ждать, пытаясь выполнить требование request.required.acks, прежде чем отправлять клиенту сообщение об ошибке |
| Повторные попытки | retries | INT | 0 | Установка значения больше нуля приведет к повторной отправке клиентом любой записи, отправка которой завершилась неудачей с потенциально кратковременной ошибкой. Обратите внимание, что эта повторная попытка ничем не отличается от ситуации, когда клиент повторно отправляет запись при получении ошибки. Разрешение повторных попыток будет потенциально изменить порядок записей, потому что, если две записи отправляются в один раздел, и первая выходит из строя и повторяется, но вторая выполняется успешно, тогда вторая запись может появиться первой |
| Время ожидания издателя перед обновлением метаданных | retryBackoffMs | INT | 100 | Перед каждой повторной попыткой издатель обновляет метаданные соответствующих тем, чтобы увидеть, был ли выбран новый лидер. Поскольку выбор лидера занимает немного времени, это свойство указывает количество времени, которое продюсер ожидает перед обновлением метаданных |
| Размер буфера записи в сокет | sendBufferBytes | INT | 131072 | Размер буфера записи в сокет |
| Класс сериализатора для сообщений | serializerClass | STRING | org.apache.kafka.common.serialization.StringSerializer | Класс сериализатора для сообщений |
| Рабочий пул | workerPool | BEAN |  | Чтобы использовать пользовательский рабочий пул для продолжения маршрутизации Exchange после того, как сервер kafka подтвердит сообщение, которое было отправлено ему от KafkaProducer, с использованием асинхронной неблокирующей обработки |
| Количество основных потоков для рабочего пула для продолжения маршрутизации | workerPoolCoreSize | INT | 10 | Количество основных потоков для рабочего пула для продолжения маршрутизации Exchange после того, как сервер kafka подтвердил сообщение, которое было отправлено ему от KafkaProducer с использованием асинхронной неблокирующей обработки |
| Максимальное количество потоков для рабочего пула для продолжения маршрутизации | workerPoolMaxSize | INT | 20 | Максимальное количество потоков для рабочего пула для продолжения маршрутизации Exchange после того, как сервер kafka подтвердил сообщение, которое было отправлено ему от KafkaProducer с использованием асинхронной неблокирующей обработки |
| Синхронная обработка | synchronous | BOOL | false | Устанавливает, должна ли строго использоваться синхронная обработка, или Camel может использовать асинхронную обработку (если поддерживается) |
| Перехватчики для издателя | interceptorClasses | STRING | null | Устанавливает перехватчики для издателя. Перехватчики издателя должны быть классами, реализующими org.apache.kafka.clients.producer.ProducerInterceptor, должны быть классами, реализующими org.apache.kafka.clients.consumer.ConsumerInterceptor Обратите внимание, что если вы использовать перехватчик Producer для создания исключения приведения класса во время выполнения |
| Время ожидания потока входа в систему между попытками обновления | kerberosBeforeReloginMin Time | INT | 60000 | Время ожидания потока входа в систему между попытками обновления |
| Путь команды Kerberos kinit | kerberosInitCmd | STRING | /usr/bin/kinit | Путь команды Kerberos kinit. По умолчанию это /usr/bin/kinit |
| Список правил для отображения основных имен в короткие имена | kerberosPrincipalToLocal Rules | STRING | defaultValue | Список правил для отображения основных имен в короткие имена (обычно имена пользователей операционной системы). Правила оцениваются по порядку, и первое правило, которое соответствует имени участника, используется для сопоставления его с коротким именем. Все последующие правила в списке игнорируются. По умолчанию имена участников в форме username/hostnameREALM сопоставляются с именем пользователя. Для получения более подробной информации о формате, пожалуйста, смотрите авторизацию безопасности и ACL. Несколько значений могут быть разделены запятой |
| Процент случайного джиттера, добавленного ко времени обновления | kerberosRenewJitter | INT | 0.05 | Процент случайного джиттера, добавленного ко времени обновления |
| kerberosRenewWindowFactor | kerberosRenewWindowFactor | INT | 0.8 | Поток входа в систему будет находиться в спящем режиме до тех пор, пока не будет достигнут указанный интервал времени с момента последнего обновления до истечения срока действия билета, после чего он будет пытаться обновить билет |
| saslJaasConfig | saslJaasConfig | STRING | null | Предоставьте параметр kafka sasl.jaas.config. Пример: org.apache.kafka.common.security.plain.PlainLoginModule требуется username=USERNAME password=PASSWORD; |
| Имя Kerberos | saslKerberosServiceName | STRING | null | Основное имя Kerberos, под которым запускается Kafka. Это можно определить либо в конфигурации JAAS Kafka, либо в конфигурации Kafka |
| Механизм sasl | saslMechanism | STRING | GSSAPI | Используемый механизм простого уровня проверки подлинности и уровня безопасности (SASL). Действительные значения см. по адресу http://www.iana.org/assignments/sasl-mechanisms/sasl-mechanisms.xhtml |
| Протокол безопасности | securityProtocol | SELECT | PLAINTEXT | Протокол, используемый для связи с брокерами. В настоящее время поддерживаются только PLAINTEXT и SSL |
| Список комплектов шифров | sslCipherSuites | STRING | null | Список комплектов шифров. Это именованная комбинация аутентификации, шифрования, MAC и алгоритма обмена ключами, используемая для согласования настроек безопасности для сетевого подключения с использованием сетевого протокола TLS или SSL. По умолчанию все доступные комплекты шифров поддерживаются |
| sslContextParameters | sslContextParameters | BEAN | null | Конфигурация SSL с использованием объекта Camel SSLContextParameters. Если настроена, она применяется перед другими параметрами конечной точки SSL |
| Список протоколов, включенных для соединений SSL | sslEnabledProtocols | STRING | TLSv1.2,TLSv1.1,TLSv1 | Список протоколов, включенных для соединений SSL. TLSv1.2, TLSv1.1 и TLSv1 включены по умолчанию |
| Алгоритм идентификации конечной точки | sslEndpointAlgorithm | STRING | null | Алгоритм идентификации конечной точки для проверки имени хоста сервера с использованием сертификата сервера |
| Алгоритм, используемый фабрикой диспетчера ключей для соединений SSL | sslKeymanagerAlgorithm | STRING | SunX509 | Алгоритм, используемый фабрикой диспетчера ключей для соединений SSL. Значение по умолчанию - алгоритм фабрики диспетчера ключей, настроенный для виртуальной машины Java |
| Пароль закрытого ключа в файле хранилища ключей | sslKeyPassword | STRING | null | Пароль закрытого ключа в файле хранилища ключей. Это необязательно для клиента |
| Расположение файла хранилища ключей | sslKeystoreLocation | STRING | null | Расположение файла хранилища ключей. Это необязательно для клиента и может использоваться для двусторонней аутентификации для клиента |
| Пароль хранилища для файла хранилища ключей | sslKeystorePassword | STRING | null | Пароль хранилища для файла хранилища ключей. Это необязательно для клиента и требуется только в том случае, если настроен ssl.keystore.location |
| Формат файла хранилища ключей | sslKeystoreType | STRING | JKS | Формат файла хранилища ключей. Это необязательно для клиента. Значение по умолчанию - JKS |
| Протокол ssl | sslProtocol | STRING | TLS | Протокол SSL, используемый для генерации SSLContext. Значение по умолчанию - TLS, что подходит для большинства случаев. Допустимые значения в последних JVM - TLS, TLSv1.1 и TLSv1.2. Могут поддерживаться SSL, SSLv2 и SSLv3. в старых JVM, но их использование не рекомендуется из-за известных уязвимостей безопасности |
| Имя поставщика безопасности ssl | sslProvider | STRING | null | Имя поставщика безопасности, используемого для соединений SSL. Значение по умолчанию - это поставщик безопасности по умолчанию для JVM |
| Алгоритм, используемый фабрикой диспетчера доверия для соединений SSL | sslTrustmanagerAlgorithm | STRING | PKIX | Алгоритм, используемый фабрикой диспетчера доверия для соединений SSL. Значением по умолчанию является алгоритм фабрики диспетчера доверия, настроенный для виртуальной машины Java |
| Расположение файла доверенного хранилища | sslTruststoreLocation | STRING | null | Расположение файла доверенного хранилища |
| Пароль для файла хранилища доверенных сертификатов | sslTruststorePassword | STRING | null | Пароль для файла хранилища доверенных сертификатов |
| Формат файла хранилища доверенных сертификатов | sslTruststoreType | STRING | JKS | Формат файла хранилища доверенных сертификатов. Значение по умолчанию - JKS |


InMailEnpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Имя хоста | host | STRING | null | Имя хоста или IP-адрес для подключения. |
| Номер порта TCP | port | STRING | null | Номер порта TCP для подключения. |
| Имя пользователя | username | STRING | null | Имя пользователя на сервере электронной почты. |
| Пароль | password | STRING | null | Пароль на сервере электронной почты. |
| Игнорировать URI схему | ignoreUriScheme | BOOL | false | Если false, Брокер использует схему для определения транспортного протокола (POP, IMAP, SMTP и т. Д.), |
| Тип содержимого почтового сообщения | contentType | STRING | text/plain | Тип содержимого почтового сообщения. Использует text/html для HTML-писем. |
| Имя опрашиваемой папки | folderName | STRING | INBOX | Папка для опроса. |
| Получатели почты | to | STRING | username@host | Получатели TO (получатели почты). Разделяет несколько адресов электронной почты запятыми. Адреса электронной почты, содержащие специальные символы, такие как «&», должны обрабатываться по-разному.  |
| Получатели ответного письма | replyTo | STRING | alias@host | Получатели Reply-To (получатели ответного письма). Разделяет несколько адресов электронной почты запятыми. |
| Получатели почты (копия) | cc | STRING | null | Получатели СС (получатели почты). Разделяет несколько адресов электронной почты запятыми. |
| Получатели почты (скрытая копия) | bcc | STRING | null | Получатели BCC (получатели почты). Разделяет несколько адресов электронной почты запятыми. |
| От кого(адрес) | from | STRING | camel@localhost | Адрес электронной почты FROM. |
| Тема сообщения | subject | STRING | null | Тема отправляемого сообщения. Примечание: Установка темы в заголовке имеет приоритет над этой опцией. |
| Просмотр | peek | BOOL | true | Отметит javax.mail.Message,как просмотренное перед обработкой почтового сообщения. Это относится только к IMAPMessage типам сообщений. Используя peek, почта не будет намерено помечена как SEEN на почтовом сервере, что позволяет нам откатить почтовое сообщение, если есть ошибка обработки в Брокере. |
| Удалить | delete | BOOL | false | Удаляет сообщения после их обработки. Это делается путем установки DELETED флага на почтовом сообщении. Если false,устанавливается  флаг SEEN.  |
| Непрочитанные сообщения | unseen | BOOL | true | Можно настроить конечную точку потребителя, чтобы он обрабатывал только непрочитанные сообщения (то есть новые сообщения) или все сообщения. Обратите внимание, что Брокер всегда пропускает удаленные сообщения. Опция по умолчанию true будет фильтровать только невидимые сообщения. POP3 не поддерживает флаг SEEN , поэтому этот параметр не поддерживается в POP3; Используйте IMAP. Важно. Этот параметр не используется, если вы также используете параметры searchTerm . Вместо этого, если вы хотите отключить unseen при использовании searchTerm опции, добавьте searchTerm.unseen=false. |
| Скопировать в | copyTo | STRING | null | После обработки почтового сообщения его можно скопировать в почтовую папку с указанным именем. Вы можете переопределить это значение конфигурации с помощью заголовка с ключом copyTo, что позволит вам копировать сообщения папки, настроенных во время выполнения. |
| Максимальное количество сообщений | fetchSize | INT | -1 | Устанавливает максимальное количество сообщений, которые будут потребляться во время опроса. Можно использовать, чтобы избежать перегрузки почтового сервера, если в папке почтового ящика содержится много сообщений. Значение -1 по умолчанию означает отсутствие размера выборки, и все сообщения будут потребляться. Установка значения в 0 - это специальный случай, когда Брокер не будет потреблять никаких сообщений вообще. |
| Альтернативный Заголовок тела сообщения | alternativeBodyHeader | STRING | CamelMailAlternativeBody | Указывает ключ к заголовку IN сообщения, которое содержит альтернативное тело сообщения. Например, если вы отправляете  электронные письма в формате text/html и хотите предоставить альтернативное тело сообщения для почтовых клиентов, отличных от HTML, установите тело сообщения с этим ключом в качестве заголовка. |
| Режим отладки | debugMode | BOOL | false | Включить режим отладки в основной почтовой инфраструктуре. Фреймворк SUN Mail протоколирует отладочные сообщения в System.out по умолчанию. |
| Тайм-аут соединения | connectionTimeout | INT | 30000 | Тайм-аут соединения в миллисекундах. По умолчанию 30 секунд. |
| Инициализированная задержка  | consumer.initialDelay | INT | 1000 | Миллисекунды перед началом опроса. |
| Задержка потребления | consumer.delay | INT | 60000 | По умолчанию Брокер будет опрашивать почтовый ящик только один раз в минуту, чтобы избежать перегрузки почтового сервера. |
| Фиксированная задержка между опросами | consumer.useFixedDelay | BOOL | false | Установить в true для фиксированной задержка между опросами, в противном случае используется фиксированная.  |
| Отключиться после опроса | disconnect | BOOL | false | Должен ли потребитель отключиться после опроса. Если включено, это заставляет Брокер подключаться заново во время каждого опроса. |
| Закрыть папку | closeFolder | BOOL | true | Должен ли потребитель закрывать папку после опроса. Если установить опцию в значение false и falsedisconnect=false , то потребитель будет держать папку открытой между опросами. |
| Дополнительные свойства почты | mail.xxx | CONFIG | null | Устанавливает дополнительные свойства почты. Например, если вы хотите установить специальное свойство при использовании POP3, теперь вы можете указать этот параметр непосредственно в URI, так:. mail.pop3.forgettopheaders=true.Вы можете установить несколько таких опций, например:.mail.pop3.forgettopheaders=true&mail.mime.encodefilename=true |
| Отображать принятое почтовое сообщение | mapMailMessage | BOOL | true | Указывает, должен ли Брокер отображать принятое почтовое сообщение в теле/заголовке Брокера. Если установлено значение true, тело почтового сообщения сопоставляется с телом сообщения Брокера IN, а заголовки почты сопоставляются с заголовками IN. Если для этой опции установлено значение false, сообщение IN содержит raw javax.mail.Message. Вы можете получить это сообщение, вызвав exchange.getIn().getBody(javax.mail.Message.class). |
| Максимальное количество сообщений за опрос | maxMessagesPerPoll | INT | 0 | Указывает максимальное количество сообщений, собираемых за опрос. По умолчанию максимальный размер не установлен. Может использоваться для установки ограничения, например, 1000, чтобы избежать загрузки тысяч файлов при запуске сервера. Установите значение 0 или отрицательное, чтобы отключить эту опцию. |
| Подключаемая реализацию электронной почты | javaMailSender | STRING | null | Указывает подключаемый org.apache.camel.component.Mail.JavaMailSender , чтобы использовать реализацию электронной почты. |
| Игнорировать неподдерживаемую кодировку  | ignoreUnsupportedCharset | BOOL | false | Возможность позволить Брокеру игнорировать неподдерживаемую кодировку в локальной JVM при отправке писем. Если charset не поддерживается, то charset=XXX(где XXX представляет неподдерживаемый charset) удаляется из content-type и он полагается на платформу по умолчанию . |
| Ссылка на настроенные параметры SSL контекста. | sslContextParameters | BEAN | null | Ссылается на org.apache.camel.util.jsse.SSLContextParameters в реестре. Эта ссылка переопределяет любые настроенные параметры SSLContextParameters на уровне компонента. |
| Критерии поиска(термины) | searchTerm | BEAN | null | Ссылается на, javax.mail.search.SearchTerm который позволяет фильтровать письма на основе критериев поиска, таких как subject, body, from, отправленные после определенной даты и т.д. |
| Настройка параметров поиска  | searchTerm.xxx | CONFIG | null | Настройка параметров поиска непосредственно из uri конечной точки, которая поддерживает ограниченное количество терминов, определенных org.apache.camel.component.mail.SimpleSearchTerm классом.  |
| Сортировка по критериям(терминам) | sortTerm | STRING | null | Настройка sortTerms, поддерживаемых IMAP, для сортировки найденных писем.Необходимо определить массив com.sun.mail.imap.sortTerm в реестре, а затем в #name для ссылки на него в URI.Вы также можете указать список разделенных запятыми терминов сортировки в URI, который будет конвертировать Брокер. Например, для сортировки по убыванию по дате следует использовать sortTerm=reverse,date. |
| Задачи пост-обработки | postProcessAction | BEAN | null | Ссылается на org.apache.camel.component.mail.MailBoxPostProcessAction для выполнения задач пост-обработки на почтовом ящике после завершения базовой обработки. |
| Пропустить ошибочное сообщение | skipFailedMessage | BOOL | false | Если потребитель почты не может получить данное почтовое сообщение, эта опция позволяет пропустить сообщение и перейти к извлечению следующего почтового сообщения . |
| Обработать ошибочное сообщение  | handleFailedMessage | BOOL | false | Если потребитель почты не может получить данное почтовое сообщение, эта опция позволяет обрабатывать ошибку обработчиком ошибок потребителя. Включив связывание обработчика ошибок на потребителе и обработчика ошибок маршрутизации, Брокер сможет обработать исключение. По умолчанию поведение потребителя:  в случае ошибки, никакие письма из пакета не могут быть перенаправлены Брокеру. |
| Фиктивный параметр безопасности | DummyTrustManager | BOOL | false | Использовать фиктивный параметр безопасности для доверия всем сертификатам. Должен использоваться только для режима разработки. |
| Идемпотентный репозиторий | idempotentRepository | BEAN | null | Подключаемый репозиторий org.apache.camel.spi.IdempotentRepository, который позволяет кластеризовать потребление из одного и того же почтового ящика, и репозиторий определяет, пригодно ли почтовое сообщение для обработки потребителем. |
| Удалить идентификатор сообщения после подтверждения | idempotentRepositoryRemoveOnCommit | BOOL | true | При использовании idempotent-репозитория, когда почтовое сообщение успешно обработано и зафиксировано\подтверждено, должен ли идентификатор сообщения быть удален из репозитория idempotent (по умолчанию) или храниться в репозитории. По умолчанию предполагается, что идентификатор сообщения уникален и не имеет ценности для хранения в репозитории, поскольку почтовое сообщение будет помечено как увиденное / перемещенное или удаленное, чтобы предотвратить его повторное использование. И поэтому наличие идентификатора сообщения, хранящегося в репозитории idempotent, имеет мало значения. Эта опция позволяет хранить идентификатор сообщения. |
| Идемпотентный MailUidGenerator | mailUidGenerator | BEAN | null | подключаемый MailUidGenerator, который позволяет использовать пользовательскую логику для генерации UUID почтового сообщения. |


OutMailEnpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Имя хоста | host | STRING | null | Имя хоста или IP-адрес для подключения. |
| Номер порта TCP | port | STRING | null | Номер порта TCP для подключения. |
| Имя пользователя | username | STRING | null | Имя пользователя на сервере электронной почты. |
| Пароль | password | STRING | null | Пароль на сервере электронной почты. |
| Игнорировать URI схему | ignoreUriScheme | BOOL | false | Если false, Брокер использует схему для определения транспортного протокола (POP, IMAP, SMTP и т. Д.), |
| Тип содержимого почтового сообщения | contentType | STRING | text/plain | Тип содержимого почтового сообщения. Использует text/html для HTML-писем. |
| Имя опрашиваемой папки | folderName | STRING | INBOX | Папка для опроса. |
| Получатели почты | to | STRING | username@host | Получатели TO (получатели почты). Разделяет несколько адресов электронной почты запятыми. Адреса электронной почты, содержащие специальные символы, такие как «&», должны обрабатываться по-разному.  |
| Получатели ответного письма | replyTo | STRING | alias@host | Получатели Reply-To (получатели ответного письма). Разделяет несколько адресов электронной почты запятыми. |
| Получатели почты (копия) | cc | STRING | null | Получатели СС (получатели почты). Разделяет несколько адресов электронной почты запятыми. |
| Получатели почты (скрытая копия) | bcc | STRING | null | Получатели BCC (получатели почты). Разделяет несколько адресов электронной почты запятыми. |
| От кого(адрес) | from | STRING | camel@localhost | Адрес электронной почты FROM. |
| Тема сообщения | subject | STRING | null | Тема отправляемого сообщения. Примечание: Установка темы в заголовке имеет приоритет над этой опцией. |
| Удалить | delete | BOOL | false | Удаляет сообщения после их обработки. Это делается путем установки DELETED флага на почтовом сообщении. Если false,устанавливается  флаг SEEN.  |
| Непрочитанные сообщения | unseen | BOOL | true | Можно настроить конечную точку потребителя, чтобы он обрабатывал только непрочитанные сообщения (то есть новые сообщения) или все сообщения. Обратите внимание, что Брокер всегда пропускает удаленные сообщения. Опция по умолчанию true будет фильтровать только невидимые сообщения. POP3 не поддерживает флаг SEEN , поэтому этот параметр не поддерживается в POP3; Используйте IMAP. Важно. Этот параметр не используется, если вы также используете параметры searchTerm . Вместо этого, если вы хотите отключить unseen при использовании searchTerm опции, добавьте searchTerm.unseen=false. |
| Максимальное количество сообщений | fetchSize | INT | -1 | Устанавливает максимальное количество сообщений, которые будут потребляться во время опроса. Можно использовать, чтобы избежать перегрузки почтового сервера, если в папке почтового ящика содержится много сообщений. Значение -1 по умолчанию означает отсутствие размера выборки, и все сообщения будут потребляться. Установка значения в 0 - это специальный случай, когда Брокер не будет потреблять никаких сообщений вообще. |
| Альтернативный Заголовок тела сообщения | alternativeBodyHeader | STRING | CamelMailAlternativeBody | Указывает ключ к заголовку IN сообщения, которое содержит альтернативное тело сообщения. Например, если вы отправляете  электронные письма в формате text/html и хотите предоставить альтернативное тело сообщения для почтовых клиентов, отличных от HTML, установите тело сообщения с этим ключом в качестве заголовка. |
| Режим отладки | debugMode | BOOL | false | Включить режим отладки в основной почтовой инфраструктуре. Фреймворк SUN Mail протоколирует отладочные сообщения в System.out по умолчанию. |
| Тайм-аут соединения | connectionTimeout | INT | 30000 | Тайм-аут соединения в миллисекундах. По умолчанию 30 секунд. |
| Инициализированная задержка  | consumer.initialDelay | INT | 1000 | Миллисекунды перед началом опроса. |
| Задержка потребления | consumer.delay | INT | 60000 | По умолчанию Брокер будет опрашивать почтовый ящик только один раз в минуту, чтобы избежать перегрузки почтового сервера. |
| Фиксированная задержка между опросами | consumer.useFixedDelay | BOOL | false | Установить в true для фиксированной задержка между опросами, в противном случае используется фиксированная.  |
| Отключиться после опроса | disconnect | BOOL | false | Должен ли потребитель отключиться после опроса. Если включено, это заставляет Брокер подключаться заново во время каждого опроса. |
| Закрыть папку | closeFolder | BOOL | true | Должен ли потребитель закрывать папку после опроса. Если установить опцию в значение false и falsedisconnect=false , то потребитель будет держать папку открытой между опросами. |
| Дополнительные свойства почты | mail.xxx | CONFIG | null | Устанавливает дополнительные свойства почты. Например, если вы хотите установить специальное свойство при использовании POP3, теперь вы можете указать этот параметр непосредственно в URI, так:. mail.pop3.forgettopheaders=true.Вы можете установить несколько таких опций, например:.mail.pop3.forgettopheaders=true&mail.mime.encodefilename=true |
| Отображать принятое почтовое сообщение | mapMailMessage | BOOL | true | Указывает, должен ли Брокер отображать принятое почтовое сообщение в теле/заголовке Брокера. Если установлено значение true, тело почтового сообщения сопоставляется с телом сообщения Брокера IN, а заголовки почты сопоставляются с заголовками IN. Если для этой опции установлено значение false, сообщение IN содержит raw javax.mail.Message. Вы можете получить это сообщение, вызвав exchange.getIn().getBody(javax.mail.Message.class). |
| Максимальное количество сообщений за опрос | maxMessagesPerPoll | INT | 0 | Указывает максимальное количество сообщений, собираемых за опрос. По умолчанию максимальный размер не установлен. Может использоваться для установки ограничения, например, 1000, чтобы избежать загрузки тысяч файлов при запуске сервера. Установите значение 0 или отрицательное, чтобы отключить эту опцию. |
| Подключаемая реализацию электронной почты | javaMailSender | STRING | null | Указывает подключаемый org.apache.camel.component.Mail.JavaMailSender , чтобы использовать реализацию электронной почты. |
| Игнорировать неподдерживаемую кодировку  | ignoreUnsupportedCharset | BOOL | false | Возможность позволить Брокеру игнорировать неподдерживаемую кодировку в локальной JVM при отправке писем. Если charset не поддерживается, то charset=XXX(где XXX представляет неподдерживаемый charset) удаляется из content-type и он полагается на платформу по умолчанию . |
| Ссылка на настроенные параметры SSL контекста. | sslContextParameters | BEAN | null | Ссылается на org.apache.camel.util.jsse.SSLContextParameters в реестре. Эта ссылка переопределяет любые настроенные параметры SSLContextParameters на уровне компонента. |
| Критерии поиска(термины) | searchTerm | BEAN | null | Ссылается на, javax.mail.search.SearchTerm который позволяет фильтровать письма на основе критериев поиска, таких как subject, body, from, отправленные после определенной даты и т.д. |
| Настройка параметров поиска  | searchTerm.xxx | CONFIG | null | Настройка параметров поиска непосредственно из uri конечной точки, которая поддерживает ограниченное количество терминов, определенных org.apache.camel.component.mail.SimpleSearchTerm классом.  |
| Сортировка по критериям(терминам) | sortTerm | STRING | null | Настройка sortTerms, поддерживаемых IMAP, для сортировки найденных писем.Необходимо определить массив com.sun.mail.imap.sortTerm в реестре, а затем в #name для ссылки на него в URI.Вы также можете указать список разделенных запятыми терминов сортировки в URI, который будет конвертировать Брокер. Например, для сортировки по убыванию по дате следует использовать sortTerm=reverse,date. |
| Задачи пост-обработки | postProcessAction | BEAN | null | Ссылается на org.apache.camel.component.mail.MailBoxPostProcessAction для выполнения задач пост-обработки на почтовом ящике после завершения базовой обработки. |
| Пропустить ошибочное сообщение | skipFailedMessage | BOOL | false | Если потребитель почты не может получить данное почтовое сообщение, эта опция позволяет пропустить сообщение и перейти к извлечению следующего почтового сообщения . |
| Обработать ошибочное сообщение  | handleFailedMessage | BOOL | false | Если потребитель почты не может получить данное почтовое сообщение, эта опция позволяет обрабатывать ошибку обработчиком ошибок потребителя. Включив связывание обработчика ошибок на потребителе и обработчика ошибок маршрутизации, Брокер сможет обработать исключение. По умолчанию поведение потребителя:  в случае ошибки, никакие письма из пакета не могут быть перенаправлены Брокеру. |
| Фиктивный параметр безопасности | DummyTrustManager | BOOL | false | Использовать фиктивный параметр безопасности для доверия всем сертификатам. Должен использоваться только для режима разработки. |
| Идемпотентный репозиторий | idempotentRepository | BEAN | null | Подключаемый репозиторий org.apache.camel.spi.IdempotentRepository, который позволяет кластеризовать потребление из одного и того же почтового ящика, и репозиторий определяет, пригодно ли почтовое сообщение для обработки потребителем. |
| Удалить идентификатор сообщения после подтверждения | idempotentRepositoryRemoveOnCommit | BOOL | true | При использовании idempotent-репозитория, когда почтовое сообщение успешно обработано и зафиксировано\подтверждено, должен ли идентификатор сообщения быть удален из репозитория idempotent (по умолчанию) или храниться в репозитории. По умолчанию предполагается, что идентификатор сообщения уникален и не имеет ценности для хранения в репозитории, поскольку почтовое сообщение будет помечено как увиденное / перемещенное или удаленное, чтобы предотвратить его повторное использование. И поэтому наличие идентификатора сообщения, хранящегося в репозитории idempotent, имеет мало значения. Эта опция позволяет хранить идентификатор сообщения. |
| Идемпотентный MailUidGenerator | mailUidGenerator | BEAN | null | подключаемый MailUidGenerator, который позволяет использовать пользовательскую логику для генерации UUID почтового сообщения. |


OutPerformanceEnpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Интервал подсчета производительности | interval | INT | 1000 | Каждое занчение интервала формируется отчет о средней скорости |


MinaEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Кодек | codec | BEAN | null | Ссылка на реализацию ProtocolCodecFactory |
| Отключаться | disconnect | BOOL | false | Отключаться сразу после использования |
| Синхронный запрос | sync | BOOL | true | Ожидать ответ или нет |
| Создавать сессию при вызове | lazySessionCreation | BOOL | true |  |
| Таймаут | timeout | INT | 30000 |  |
| Кодировка | encoding | STRING | null | По-умолчанию JVM |
| Размер пула | maximumPoolSize | INT | 16 |  |
| Отключаться если нет ответа | disconnectOnNoReply | BOOL | true | Если sycn=true |


OutPrinterEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Количество копий | copies | INT | 1 | Количество копий для распечатки |
| Бин настроек печати docFlavor | docFlavor | BEAN | null | Бин настроек печати javax.print.DocFlavor |
| Тип данных для печати | flavor | SELECT | null | Тип данных для печати |
| Размер печати | mediaSize | STRING | na-letter | Размер печати типа javax.print.attribute.standard.MediaSizeName, значение можно задавать вне зависимости от регистра, например допускается iso_a4 или ISO_A4. |
| MIME-тип | mimeType | STRING | null | MIME-тип печатаемого документа |
| Ориентация страницы | orientation | SELECT | portrait | Ориентация страницы |
| Стороны печати | sides | SELECT | null |  |


InSSHEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Хост SSH сервера | host | STRING | null | Имя хоста SSH сервера |
| Порт SSH сервера | port | INT | 22 | Порт SSH сервера |
| Имя пользователя | username | STRING | null | Имя пользователя используемое для аутентификации  с SSH сервером. |
| Пароль | password | STRING | null | Пароль, используемый для аутентификации с SSH сервером. Используется, если keyPairProvider null. |
| Провайдер ключей | keyPairProvider | BEAN | null | Относится к org.apache.sshd.common.KeyPairProvider используется для загрузки ключей для аутентификации. Если этот параметр используется, то пароль не используется. |
| Типу ключа | keyType | STRING | SSH-RSA | Относится к типу ключа для загрузки с keyPairProvider. Основные типы могут быть, например, «SSH-RSA» или «SSH-DSS». |
| Ссылка на сертификат  | certResource | STRING | null | Ссылка на сертификат открытого ключа. Приставка к пути с classpath:, file: или http:. |
| Таймаут | timeout | INT | 30000 | Миллисекунды до таймаута подключения к SSH серверу. |
| Задержка перед опросом | initialDelay | INT | 1000 | Миллисекунды перед опросом запуска сервера SSH. |
| Задержка до следующего опроса  | delay | STRING | 500 | Миллисекунды до следующего опроса SSH сервере. |
| Использовать фиксированную задержку | useFixedDelay | BOOL | true | Контролируется, если используется  fixed delay или fixed rate. См детали ScheduledExecutorService в JDK. |
| Команда опроса | pollCommand | STRING | null | Команда посылаемая на сервер SSH во время каждого цикла опроса. Требуется, закончить команду новой строкой, которая должна быть закодирована URL %0A. |


OutSSHEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Хост SSH сервера | host | STRING | null | Имя хоста SSH сервера |
| Порт SSH сервера | port | INT | 22 | Порт SSH сервера |
| Имя пользователя | username | STRING | null | Имя пользователя используемое для аутентификации  с SSH сервером. |
| Пароль | password | STRING | null | Пароль, используемый для аутентификации с SSH сервером. Используется, если keyPairProvider null. |
| Провайдер ключей | keyPairProvider | BEAN | null | Относится к org.apache.sshd.common.KeyPairProvider используется для загрузки ключей для аутентификации. Если этот параметр используется, то пароль не используется. |
| Типу ключа | keyType | STRING | SSH-RSA | Относится к типу ключа для загрузки с keyPairProvider. Основные типы могут быть, например, «SSH-RSA» или «SSH-DSS». |
| Ссылка на сертификат  | certResource | STRING | null | Ссылка на сертификат открытого ключа. Приставка к пути с classpath:, file: или http:. |
| Таймаут | timeout | INT | 30000 | Миллисекунды до таймаута подключения к SSH серверу. |


InTelegramEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Связать с обработчиком ошибок брокера | bridgeErrorHandler | BOOL | false | Позволяет связать потребителя с обработчиком ошибок брокера, это означает, что любое возникшее исключение в момент попытки получения входящего сообщения будет обрабатываться как сообщение с помощью обработчика ошибок брокера. По умолчанию будет использован the org.apache.camel.spi.ExceptionHandler, с уровнем логирвоания WARN/ERROR |
| Лимит | limit | INT | 100 | Лимит сообщений, который может быть получен за один запрос |
| Посылать пустое сообщение во время простоя | sendEmptyMessageWhenIdle | BOOL | false | Если потребитель не получает никаких обновлений, то можно настроить что бы в это время он отдавал пустое сообщение (без тела) |
| Тайм аут | timeout | INT | 30 | Таймаут в секундах для блительных запросов. Установите 0 для коротких запросов или большее значение для более длительных. Длительный опрос сокращает время отклика. |
| Обработчик ошибок | exceptionHandler | BEAN | null | Позволяет потребителю использовать пользовательский обработчик ошибок. Если включен параметр "Связать с обработчиком ошибок брокера", то данная опция игнорируется. |
| Стратегия опроса | pollStrategy | BEAN | null | Реализация интерфейса org.apache.camel.PollingConsumerPollingStrategy позволяет реализовывать собственные стратегии подключения. |
| Паттерн обмена | exchangePattern | STRING | InOnly | Устанавливает паттерн обмена сообщениями по умолчанию |
| Синхронность | synchronous | BOOL | false | Должна ли обработка сообщений быть синхронной. |
| Задержка | delay | INT | 500 | Время в миллисекундах между запросами на обновление. Так же возможно указывать время в формате: 60s (60 секунд), 5m30s (5 минут 30 секунд), 1h (1 час) |
| Первичная задержка | initialDelay | INT | 1000 | Время в миллисекундах перед первым запросом. Так же возможно указывать время в формате: 60s (60 секунд), 5m30s (5 минут 30 секунд), 1h (1 час) |


OutTelegramEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| ID Чата | chatId | INT | null | Идентификатор чата, в который будут посылаться сообщения. Это опцианальный параметр, т.к. его можно задавть динамически для каждого исходящего сообщения (с помощью тела или заголовков сообщения). |
| Паттерн обмена | exchangePattern | STRING | InOnly | Устанавливает паттерн обмена сообщениями по умолчанию |
| Синхронность | synchronous | BOOL | false | Должна ли обработка сообщений быть синхронной. |
| Задержка | delay | INT | 500 | Время в миллисекундах между запросами на обновление. Так же возможно указывать время в формате: 60s (60 секунд), 5m30s (5 минут 30 секунд), 1h (1 час) |
| Первичная задержка | initialDelay | INT | 1000 | Время в миллисекундах перед первым запросом. Так же возможно указывать время в формате: 60s (60 секунд), 5m30s (5 минут 30 секунд), 1h (1 час) |


timerEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Время | time | STRING | null | Время, в которое должно сгенирироваться первое событие. Формат должен быть yyyy-MM-dd HH:mm:ss или yyyy-MM-dd'T'HH:mm:ss. |
| Шаблон даты | pattern | STRING | null | Позволяет указать другой шаблон даты, вместо стандартных yyyy-MM-dd HH:mm:ss или yyyy-MM-dd'T'HH:mm:ss. |
| Период | period | STRING | 1000 | Если больше 0, то генерирует событие периодически с заданным интервалом в миллисекундах. Также время возможно указывать, используя единицы измерения, например 60s (60 секунд), 5m30s (5 минут 30 секунд), и 1h (1 час). |
| Задержка | delay | STRING | 1000 | Время ожидания в миллисекундах перед первым выполнением события. Недолжен использоваться совместно с опцией "Время". Также время возможно указывать, используя единицы измерения, например, 60s (60 секунд), 5m30s (5 минут 30 секунд), и  1h (1 час). возможно указание отрицательной велечины, в этом случае таймер сгенерирует события настолько быстро насколько это возможно. |
| Фиксированный интервал | fixedRate | BOOL | false | События будут происходить примерно с одинаковой переодичностью, останавливаясь на указанный "Период". |
| Демон | daemon | BOOL | true | Указывает, работает ли поток, связанный с таймером, как демон |
| Количество повторений | repeatCount | INT | 0 | Указывает максимальное количество возможных запусков. Если установите этот параметр как 1, то таймер выполнется только один раз. Если установить, как 5, то таймер сработает 5 раз. Ноль или негативное число, означает постоянное выполнение таймера. |


InTorrentEndpointProperties.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Тип торрента | torrentType | SELECT | MAGNET | null |
| Ссылка на тореент файл | torrentLink | STRING | null | null |
| Magnet ссылка на торрент | magnetLink | STRING | null | null |
| Синхронное выполнение | sync | BOOL | true | null |


InWebSocketEndpoint.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Путь к статическим ресурсам | staticResources | STRING | null | Путь к статическим ресурсам (.html файлам и т.п.). Ресурсы могут быть загружены из classpath если указан префикс "classpath:", иначе ресурсы будут загружены из файловой системы или из JAR-файла. НАпример, для загрузки ресурсов из корня classpath укажите "classpath:." или "classpath:WEB-INF/static". Если данный параметр не задан, то статические ресурсы не используются. |
| Параметры SSL контекста | sslContextParameters | STRING | null | Ссылка на бин типа SSLContextParameters. |
| Максимальный размер сообщения в байтах | maxBinaryMessageSize | INT | -1 | Устанавливает размер сообщения в байтах, которое websocket созданый в websocketServlet может принять до закрытия. (По умолчанию "-1" -неограничено) |
| Обработчик ошибок | bridgeErrorHandler | BOOL | false | Включить перекитдку ошибок, в случае их возникновения, в обработчик ошибок. По умолчанию точка входа будет использовать the org.apache.camel.spi.ExceptionHandler |
| Поддержка сессий | sessionSupport | BOOL | false | Включить поддержку сессий, которые будут использовать HttpSession для каждого http запроса. |
| Обработчик ошибок | exceptionHandler | STRING | null | Позволяет указать ссылку на обработчик ошибок. Если установлен параметр bridgeErrorHandler, то данная опция игнорируется. |
| Шаблон обмена | exchangePattern | STRING | null | Устанавливает шаблон обмена, типа ExchangePattern, когда точка входа начинает передачу сообщения. |


OutWebSocketEndpoint.json

| Имя | Name | Тип | Значение по умолчанию | Описание |
|------|------|--------|------|-------|
| Пароль для хранилища ключей | sslKeyPassword | STRING | null | Пароль для хранилища ключей, указывается при использовании SSL |
| Таймаут | sendTimeout | INT | 3000 | Таймаут в мс при отправки сообщений в канал. |
| Отправить всем | sendToAll | BOOL | false | Отправка всем подписчикам. Также данный параметр можно настроить с помощью заголовка WebsocketConstants.SEND_TO_ALL в сообщении. |


